
{
    "kind": "term",
    "name": "as_attributes",
    "count": 17,
    "items": [

    
        {
            "weight": "10",
            "url": "https://docs.tealium.com/ja/server-side/attributes/about/",
            "title": "属性について",
            "body":"<p>属性は実装の基礎であり、顧客の行動やブランドとの相互作用を定義するために使用されます。属性は訪問者、訪問者のセッション、および収集されたイベントのプロパティを定義します。属性の一般的な例には、メールアドレス、会員ID、製品カテゴリ、前回の訪問日、およびアクティブなブラウザなどがあります。</p><h2 id=\"スコープ\">スコープ</h2><p>スコープは、リアルタイムで属性が永続する期間を指します。</p><p>以下の表には、サポートされているスコープがリストされています。</p><table><thead><tr><th>スコープ</th><th>説明 / 例</th><th>用途</th></tr></thead><tbody><tr><td>イベント</td><td>お客様が実行しているページ、コンテンツ、およびリアルタイムのアクションを説明する個々のイベントに関連する属性。例: ページ名、製品価格、イベント名、注文合計など。</td><td><strong>属性のソース</strong><br> イベント属性は、次の値から取得されます:<br> <ul><li><strong>ユニバーサル変数</strong> <a href=\"/ja/platforms/javascript/universal-data-object/\">ユニバーサルデータオブジェクト</a></li><li><strong>JavaScriptページ変数</strong> グローバルJavaScript変数（ブラウザ）</li><li><strong>HTMLメタデータ</strong> メタデータタグ（ブラウザ）</li><li><strong>ファーストパーティCookie</strong> ブラウザのCookie</li><li><strong>クエリストリングパラメータ</strong> 現在のページのURLクエリストリング（ブラウザ）</li></ul></td></tr><tr><td>訪問</td><td>特定の訪問（またはセッション）に関する属性。データは訪問の期間中永続します。例: 訪問時間、使用されたブラウザ、参照URL、カートに入れた商品など。</td><td>これらの属性は、現在のセッションでの訪問者のアクティビティを表します。訪問属性はセッションの期間中永続します。詳細については、<a href=\"#session-length\">セッションの長さ</a>を参照してください。</td></tr><tr><td>訪問者</td><td>すべての訪問での特定の訪問者に関する属性。例: メールアドレス、会員ID、生涯注文合計、カテゴリビューなど。</td><td>このデータは、訪問が終了した後も訪問者に続き、異なるデバイス間でも続きます。訪問者データは現在の訪問が終了した後も永続します。</td></tr><tr><td>オムニチャネル</td><td>オムニチャネルサービスを介してオフラインデータをインポートするためのスコープ。このスコープにはデータ型は必要ありません。</td><td><a href=\"/ja/server-side/data-sources/file-import/about/\">オムニチャネル</a>属性は、ファイルのインポートを定義する際に定義されます。</td></tr></tbody></table><h3 id=\"セッションの長さ\">セッションの長さ</h3><p>セッションの長さは、AudienceStreamが訪問を終了するタイミングを決定します。新しいイベントがないままセッションの長さに達すると、訪問が終了し、AudienceStreamが訪問終了処理を実行します。訪問者の次のイベントは新しい訪問を開始します。AudienceStreamの最大訪問時間は、イベントのアクティビティに関係なく24時間です。</p><p>AudienceStreamでは、デフォルトのセッションの長さは、イベントを送信するプラットフォームに基づいて設定されます:</p><ul><li><strong>Web</strong>: 30分（1つのイベントと追加のイベントがない場合は10分）</li><li><strong>モバイルアプリ</strong>: 2分</li><li><strong>オムニチャネル</strong>: 1分</li><li><strong>ファイルインポート</strong>: 1分</li><li><strong>Collect API</strong>: 30分</li></ul><p>プラットフォームは、次の値に基づいて<code>platform</code>という名前の予約済み属性に設定されます:</p><ul><li><strong>Web</strong> - <code>platform</code>が<code>web</code>または未設定になっています。</li><li><strong>モバイル</strong> - <code>platform</code>が<code>android</code>、<code>ios</code>、<code>win</code>、<code>bb10</code>、<code>native_mobile</code>のいずれかに設定されています。</li></ul><p>セッションの長さをカスタマイズするには、セッションの最初のイベントでデータレイヤー変数<code>_dc_ttl_</code>をミリ秒単位の値に設定します。たとえば、セッションの長さを5分に設定するには、次のようにイベントに追加します: <code>&quot;_dc_ttl_&quot;: 300000</code>。セッションの長さは設定後に変更できません。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>カスタムの長さを設定するには、<code>platform</code>変数を省略する必要があります。<code>platform</code>のカスタム値を設定すると、セッションの長さはデフォルトで30分になります。</p><h2 id=\"データ型\">データ型</h2><p>属性には、基本的な数値からより強力な集計やバッジまで、さまざまなタイプがあります。データ型は、属性値が格納される形式を決定します。</p><p>以下のデータ型がサポートされています:</p><table><thead><tr><th>データ型</th><th>説明</th></tr></thead><tbody><tr><td><a href=\"/ja/server-side/attributes/data-types/number/\">数値</a></td><td>注文合計、生涯イベント数、前回の訪問からの日数などの数値を格納します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/string/\">文字列</a></td><td>名前、住所、お気に入りの製品、ページ名などのテキスト値を格納します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/boolean/\">ブール値</a></td><td>&rsquo;true&rsquo;と&rsquo;false&rsquo;の2つの値のいずれかのみを格納します。<a href=\"/ja/server-side/attributes/data-types/boolean/\">ブール値</a>は、訪問者のアクションや訪問のステータスを示すために使用できます。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/arrays/array-of-numbers/\">数値の配列</a></td><td><a href=\"/ja/server-side/attributes/data-types/arrays/array-of-numbers/\">配列</a>として複数の数値を格納します。配列には一意または重複する数値が含まれる場合があります。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/arrays/arrays/\">文字列の配列</a></td><td>配列として複数の文字列値を格納します。配列には一意または重複する文字列値が含まれる場合があります。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/arrays/array-of-booleans/\">ブール値の配列</a></td><td>配列として複数のブール値を格納します。配列には一意または重複するブール値が含まれる場合があります。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/tally/\">集計</a></td><td>1つ以上のキーと値のペアを格納します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/set-of-strings/\">文字列のセット</a></td><td>一意の文字列値のコレクションをセットとして格納します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/date/\">日付</a></td><td>イベント、訪問者のイベント、または特定の訪問の日付を格納します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/funnel/\">ファネル</a></td><td>支払いファネルや登録などの複数のステップからなるイベントのステータスを追跡します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/timeline/\">タイムライン</a></td><td>時間範囲内の訪問者のアクションのすべての発生を記録します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/badge/\">バッジ</a></td><td>特定の条件やブラウジングの動作を満たす訪問者に視覚的なマークやシンボルを割り当てます。</td></tr><tr><td><a href=\"/ja/server-side/visitor-stitching/visitor-id-attribute/\">訪問者ID</a></td><td>訪問者の一意の特性をセカンダリ識別子として格納します。</td></tr></tbody></table><h3 id=\"スコープとデータ型のマトリックス\">スコープとデータ型のマトリックス</h3><p>このマトリックスは、各スコープで使用可能なデータ型を示しています。</p><table><thead><tr><th>データ型</th><th>訪問者スコープ</th><th>訪問スコープ</th><th>イベントスコープ</th></tr></thead><tbody><tr><td>数値</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>文字列</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>ブール値</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>数値の配列</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>文字列の配列</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>ブール値の配列</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>集計</td><td>✔</td><td>✔</td><td></td></tr><tr><td>文字列のセット</td><td>✔</td><td>✔</td><td></td></tr><tr><td>日付</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>ファネル</td><td>✔</td><td>✔</td><td></td></tr><tr><td>タイムライン</td><td>✔</td><td>✔</td><td></td></tr><tr><td>バッジ</td><td>✔</td><td></td><td></td></tr><tr><td>訪問者ID</td><td>✔</td><td></td><td></td></tr></tbody></table><h2 id=\"属性id\">属性ID</h2><p>すべてのイベント、訪問、および訪問者属性には、一意の属性識別子があります。このIDの値は、エンリッチメントの実行順序に影響を与える場合があり、より複雑なデータソースや訪問者ステッチングの構成に必要な場合があります。</p><p>属性リストまたは展開された詳細内の属性名の横に属性IDが表示されます。</p><p><strong>イベント属性</strong><figure><a class=\"slb\" href=\"/images/server-side/event-attribute-id.png\"><img src=\"https://docs.tealium.com/images/server-side/event-attribute-id.png\"         alt=\"イベント属性IDの場所\"         title=\"イベント属性IDの場所\"/>    </a></figure></p><p><strong>訪問者属性</strong><figure><a class=\"slb\" href=\"/images/server-side/visitor-attribute-id.png\"><img src=\"https://docs.tealium.com/images/server-side/visitor-attribute-id.png\"         alt=\"訪問者属性IDの場所\"         title=\"訪問者属性IDの場所\"/>    </a></figure></p><h2 id=\"サイズ制限\">サイズ制限</h2><p>EventStreamとAudienceStreamのほとんどの属性には、ストレージ容量制限とその制限を超えた場合の特定の動作があります。なお、全体の訪問者プロファイルは、圧縮および暗号化された状態で400 KBの制限があります。</p><h3 id=\"イベント属性\">イベント属性</h3><table><thead><tr><th>属性</th><th>ストレージ容量制限</th><th>制限を超えた場合の動作</th></tr></thead><tbody><tr><td><strong>文字列</strong></td><td>1,500文字</td><td>制限を超える場合、文字列は1,500文字に切り詰められます。</td></tr><tr><td><strong>任意のタイプの配列</strong></td><td>30,000エントリ</td><td>属性が制限を超えるように設定または更新された場合、属性は30,000エントリに切り詰められて設定されます。</td></tr><tr><td><strong>日付</strong></td><td>最小: &ldquo;-292275055-05-16T16:47:04.192Z&rdquo; 最大: &ldquo;+292278994-08-17T07:12:55.807Z&rdquo;</td><td></td></tr><tr><td><strong>数値</strong></td><td><code>java.lang.Number</code>で表され、動的な精度を持ちます。</td><td></td></tr></tbody></table><h3 id=\"訪問者訪問属性\">訪問者/訪問属性</h3><table><thead><tr><th>属性</th><th>ストレージ容量制限</th><th>制限を超えた場合の動作</th></tr></thead><tbody><tr><td><strong>文字列</strong></td><td>1,000文字</td><td>エンリッチメントによって1,000文字を超える文字列が生成された場合、値は保存されません。</td></tr><tr><td><strong>タイムライン</strong></td><td>100エントリ</td><td>制限に達すると最も古いエントリが削除されます（先入れ先出し）。たとえば、タイムラインに100のエントリが含まれていて、新しいエントリが追加されると、最初のエントリが削除されます。</td></tr><tr><td><strong>集計</strong></td><td>30,000エントリ。</td><td>属性が制限を超えるように設定または更新された場合、属性は30,000エントリに切り詰められて設定されます。</td></tr><tr><td><strong>任意のタイプの配列</strong></td><td>30,000エントリ。</td><td>属性が制限を超えるように設定または更新された場合、属性は30,000エントリに切り詰められて設定されます。</td></tr><tr><td><strong>文字列のセット</strong></td><td>30,000エントリ。</td><td>属性が制限を超えるように設定または更新された場合、属性は30,000エントリに切り詰められて設定されます。</td></tr><tr><td><strong>日付</strong></td><td>最小: &ldquo;-292275055-05-16T16:47:04.192Z&rdquo; 最大: &ldquo;+292278994-08-17T07:12:55.807Z&rdquo;</td><td></td></tr><tr><td><strong>数値</strong></td><td><code>java.lang.Number</code>で表され、動的な精度を持ちます。</td><td></td></tr><tr><td><strong>訪問者ID</strong></td><td>2 KB</td><td>訪問者IDが2 KBを超える場合、レコードは保存されません。</td></tr><tr><td><strong>ファネル</strong></td><td>制限なし*</td><td></td></tr></tbody></table><p>*制限はありませんが、プロファイルの最大サイズ（圧縮および暗号化後の400 KB）によって属性は制限されます。</p><h2 id=\"iqタグ管理からのインポートされた属性\">iQタグ管理からのインポートされた属性</h2><p>インポートされた属性は、元々対応するTealium iQプロファイルで作成された変数です。Tealium iQ変数は、同じ名前のサーバーサイドプロファイルで利用可能であり、イベントスコープの属性としてインポートされます。Tealium iQで変数を変更（および公開）すると、EventStreamの対応する属性に変更が即座に適用されます。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>インポートされた属性は編集できません。管理するには、Tealium iQを使用する必要があります。</p><p>Tealium iQからの変数がEventStreamに表示されない場合は、Tealium iQ変数がサーバーサイドプロファイルにあること、変数が保存および公開されていることを確認してください。変数の変更を公開した後は、ブラウザでEventStreamページを更新してください。サーバーサイドでTealium iQ変数を利用できるようにするためのサポートが必要な場合は、Tealiumサポートにお問い合わせください。</p><h3 id=\"制限されたデータ\">制限されたデータ</h3><p>このプロパティは、システム外に送信すべきでないデータ（サードパーティの<a href=\"/ja/server-side/connectors/about/\">コネクタ</a>や<a href=\"/ja/server-side/data-storage/about/\">DataAccess</a>など）を含む属性を識別するために使用されます。<a href=\"/ja/server-side/attributes/restricted-data/\">制限されたデータ</a>について詳しくは、<a href=\"/ja/server-side/attributes/restricted-data/\">制限されたデータ</a>を参照してください。</p><h3 id=\"ルール\">ルール</h3><p>ルールは、エンリッチメントをトリガーするための追加のロジックを提供します。</p><ul><li><p>事前定義されたルールを適用するには、ドロップダウンリストから選択し、「ルールの追加」をクリックします。<br><p class=\"tip\"><i class=\"fa fa-info-circle\"></i>エンリッチメントダイアログボックスを介して新しいルールを作成すると、自動的にエンリッチメントに適用されます。</p></p></li><li><p>新しいルールを適用するには、「ルールの作成」をクリックします。<br><figure><a class=\"slb\" href=\"/images/server-side/whiteui-using-attributes-rules.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-using-attributes-rules.png\"/>          </a>      </figure></p></li></ul><h2 id=\"プリロードされた属性\">プリロードされた属性</h2><p>AudienceStreamとEventStreamには、各訪問者または訪問について有用な情報を判断するための統計情報が事前に設定された訪問および訪問者属性のセットが含まれています。</p><p>これらの属性についての詳細については、<a href=\"/ja/server-side/attributes/preloaded/\">プリロードされた属性</a>を参照してください。</p>"
        }  

    , 
        {
            "weight": "13",
            "url": "https://docs.tealium.com/ja/server-side/attributes/preloaded/",
            "title": "プリロードされた属性",
            "body":"<h2 id=\"プリロードされた属性\">プリロードされた属性</h2><p>便宜上、AudienceStreamとEventStreamには、プリロードされた訪問と訪問者の属性のセットが含まれています。各属性は、訪問者や訪問について有用な情報を決定するのに役立つ統計情報で事前に設定されています。これらの属性は、<a href=\"/ja/client-side-tags/tealium-collect-tag/\">Tealium Collect tag</a>からの標準的なウェブトラフィックデータを超える訪問者からの追加情報を必要としません。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>プリロードされた属性は変更することはできませんが、それらを複製してコピーを変更することはできます。複製は、オリジナルのすべてのエンリッチメントとルールを含んでいます。</p><h3 id=\"訪問者の属性\">訪問者の属性</h3><table><thead><tr><th>訪問者の属性</th><th>ID</th><th>タイプ</th><th>説明</th></tr></thead><tbody><tr><td>平均訪問時間（分）</td><td>26</td><td>数値</td><td>訪問の平均時間（分）</td></tr><tr><td>週あたりの平均訪問回数</td><td>29</td><td>数値</td><td>週あたりの平均訪問回数</td></tr><tr><td>ファン</td><td>30</td><td>バッジ</td><td>訪問者は2回以上訪問し、直接訪問が紹介よりも多い。</td></tr><tr><td>初回訪問</td><td>23</td><td>日付</td><td>初回訪問の日付</td></tr><tr><td>頻繁な訪問者</td><td>31</td><td>バッジ</td><td>訪問者は平均して週に2回以上訪問しています。</td></tr><tr><td>最後のイベントURL</td><td>17</td><td>文字列</td><td>訪問者の最後のイベントURL</td></tr><tr><td>最後の訪問</td><td>24</td><td>日付</td><td>最後の訪問の日付</td></tr><tr><td>使用したブラウザの種類の合計</td><td>57</td><td>集計</td><td>各種類のブラウザが使用された回数の集計</td></tr><tr><td>使用したブラウザの種類の合計（お気に入り）</td><td>56</td><td>文字列</td><td>使用したブラウザの種類の属性の中でのお気に入りの項目</td></tr><tr><td>使用したブラウザのバージョンの合計</td><td>63</td><td>集計</td><td>使用したブラウザのバージョンの集計</td></tr><tr><td>使用したブラウザのバージョンの合計（お気に入り）</td><td>62</td><td>文字列</td><td>使用したブラウザのバージョンの属性の中でのお気に入りの項目</td></tr><tr><td>使用したデバイスの合計</td><td>55</td><td>集計</td><td>使用したデバイスの集計</td></tr><tr><td>使用したデバイスの合計（お気に入り）</td><td>54</td><td>文字列</td><td>使用したデバイスの属性の中でのお気に入りの項目</td></tr><tr><td>ライフタイムイベント数</td><td>22</td><td>数値</td><td>ユーザーがトリガーしたイベントの総数</td></tr><tr><td>使用したオペレーティングシステムの合計</td><td>59</td><td>集計</td><td>使用したオペレーティングシステムの集計</td></tr><tr><td>使用したオペレーティングシステムの合計（お気に入り）</td><td>58</td><td>文字列</td><td>使用したオペレーティングシステムの属性の中でのお気に入りの項目</td></tr><tr><td>使用したプラットフォームの合計</td><td>61</td><td>集計</td><td>使用したプラットフォームの集計</td></tr><tr><td>使用したプラットフォームの合計（お気に入り）</td><td>60</td><td>文字列</td><td>使用したプラットフォームの属性の中でのお気に入りの項目</td></tr><tr><td>ライフタイム訪問数</td><td>21</td><td>数値</td><td>ユーザーがサイトを訪問した総回数</td></tr><tr><td>リターニングビジター</td><td>27</td><td>バッジ</td><td>訪問者はリターニングビジターです。</td></tr><tr><td>直接訪問の合計</td><td>15</td><td>数値</td><td>直接訪問の総数</td></tr><tr><td>紹介訪問の合計</td><td>16</td><td>数値</td><td>紹介訪問の総数</td></tr><tr><td>サイトで過ごした合計時間（分）</td><td>25</td><td>数値</td><td>ユーザーの訪問の継続時間の合計</td></tr><tr><td>バッジなし</td><td>32</td><td>バッジ</td><td>訪問者にはバッジが割り当てられていません。</td></tr><tr><td>初回訪問からの経過週数</td><td>28</td><td>数値</td><td>初回訪問からの経過週数</td></tr></tbody></table><h3 id=\"訪問の属性\">訪問の属性</h3><table><thead><tr><th>訪問の属性</th><th>ID</th><th>タイプ</th><th>説明</th></tr></thead><tbody><tr><td>アクティブなブラウザの種類</td><td>44</td><td>文字列</td><td>訪問者が現在使用しているブラウザの種類</td></tr><tr><td>アクティブなブラウザの種類</td><td>49</td><td>文字列のセット</td><td>この訪問で使用されたブラウザの種類の重複なしリスト</td></tr><tr><td>アクティブなブラウザのバージョン</td><td>48</td><td>文字列</td><td>訪問者が現在使用しているブラウザのバージョン</td></tr><tr><td>アクティブなブラウザのバージョン</td><td>53</td><td>文字列のセット</td><td>この訪問で使用されたブラウザのバージョンの重複なしリスト</td></tr><tr><td>アクティブなデバイス</td><td>46</td><td>文字列</td><td>訪問者が現在使用しているデバイス</td></tr><tr><td>アクティブなデバイス</td><td>51</td><td>文字列のセット</td><td>この訪問で使用されたデバイスの重複なしリスト</td></tr><tr><td>アクティブなオペレーティングシステム</td><td>45</td><td>文字列</td><td>訪問者が現在使用しているオペレーティングシステム</td></tr><tr><td>アクティブなオペレーティングシステム</td><td>50</td><td>文字列のセット</td><td>この訪問で使用されたオペレーティングシステムの重複なしリスト</td></tr><tr><td>アクティブなプラットフォーム</td><td>47</td><td>文字列</td><td>訪問者が現在使用しているプラットフォーム</td></tr><tr><td>アクティブなプラットフォーム</td><td>52</td><td>文字列のセット</td><td>この訪問で使用されたプラットフォームの重複なしリスト</td></tr><tr><td>直接訪問</td><td>14</td><td>ブール値</td><td>ユーザーは直接サイトにアクセスしました。</td></tr><tr><td>エントリーURL</td><td>5</td><td>文字列</td><td>最初に訪れたページのURL</td></tr><tr><td>イベント数</td><td>7</td><td>数値</td><td>この訪問でのイベントの総数</td></tr><tr><td>エグジットURL</td><td>6</td><td>文字列</td><td>最後に訪れたページのURL</td></tr><tr><td>紹介訪問</td><td>13</td><td>ブール値</td><td>ユーザーは他のサイトから紹介されました。</td></tr><tr><td>訪問の期間</td><td>12</td><td>数値</td><td>この訪問の期間</td></tr><tr><td>訪問の終了</td><td>11</td><td>日付</td><td>この訪問の終了日</td></tr><tr><td>訪問の開始</td><td>10</td><td>日付</td><td>この訪問の開始日</td></tr></tbody></table><h3 id=\"イベントの属性\">イベントの属性</h3><table><thead><tr><th>イベントの属性</th><th>ID</th><th>タイプ</th><th>説明</th></tr></thead><tbody><tr><td>クライアントIP</td><td>74</td><td>文字列</td><td>クライアントのIPアドレス</td></tr><tr><td>現在のURL</td><td>4</td><td>文字列</td><td>現在のページのURL</td></tr><tr><td>ドメイン</td><td>35</td><td>文字列</td><td>現在のページのドメイン</td></tr><tr><td>event_name</td><td>64</td><td>文字列</td><td>この属性は廃止されました。代わりに<code>tealium_event</code>を使用してください。</td></tr><tr><td>最後のイベントのタイムスタンプ</td><td>8</td><td>文字列</td><td>最後のイベントのタイムスタンプ</td></tr><tr><td>ページタイトル</td><td>38</td><td>文字列</td><td>現在のページのタイトル</td></tr><tr><td>パス名</td><td>36</td><td>文字列</td><td>現在のページのパス名</td></tr><tr><td>プラットフォーム</td><td>40</td><td>文字列</td><td>クライアントのプラットフォーム</td></tr><tr><td>クエリストリング</td><td>37</td><td>文字列</td><td>現在のページのクエリストリング</td></tr><tr><td>リファリングURL</td><td>3</td><td>文字列</td><td>前のページのURL</td></tr><tr><td>tealium_account</td><td>66</td><td>文字列</td><td>アカウント名</td></tr><tr><td>tealium_datasource</td><td>70</td><td>文字列</td><td>データソースキー</td></tr><tr><td>tealium_environment</td><td>67</td><td>文字列</td><td>公開環境</td></tr><tr><td>tealium_event</td><td>75</td><td>文字列</td><td>Tealiumのイベント名（<code>view</code>または<code>link</code>）</td></tr><tr><td>tealium_event_type</td><td>78</td><td>文字列</td><td>発行されているTealiumイベントのタイプ（<code>view</code>または<code>event</code>）</td></tr><tr><td>tealium_firstparty_visitor_id</td><td>76</td><td>文字列</td><td>ファーストパーティクッキーによって提供された訪問者ID</td></tr><tr><td>tealium_library_name</td><td>68</td><td>文字列</td><td>ライブラリ名</td></tr><tr><td>tealium_library_version</td><td>69</td><td>文字列</td><td>ライブラリのバージョン</td></tr><tr><td>tealium_library_profile</td><td>79</td><td>文字列</td><td>アカウントプロファイル</td></tr><tr><td>tealium_random</td><td>65</td><td>数値</td><td>この値は、プラットフォームが各イベントに対して生成したランダムな数値です。期待される値は16桁の数値です。この値は16桁未満の場合はゼロで埋められます。</td></tr><tr><td>tealium_session_id</td><td>71</td><td>数値</td><td>この値は、最初のページビュー、イベント、またはライブラリの起動が完了したときのエポックタイムスタンプ（ミリ秒単位）です。この値は、ウェブ上で30分間活動がない場合にリセットされます。</td></tr><tr><td>tealium_thirdparty_visitor_id</td><td>77</td><td>文字列</td><td>サードパーティクッキーによって提供された訪問者ID</td></tr><tr><td>tealium_timestamp_epoch</td><td>73</td><td>数値</td><td>この値は、イベントが発生したときの時間（秒単位）です。イベントがキューに入れられた場合、この値はイベントが元々発生した時間です。</td></tr><tr><td>tealium_visitor_id</td><td>72</td><td>文字列</td><td>この値は生成されたUUIDで、AudienceStreamでは大文字と小文字が区別されます。この値は以前は<code>vdata</code>の呼び出しで<code>tealium_vid</code>でした。</td></tr><tr><td>ユーザーエージェント</td><td>2</td><td>文字列</td><td>ユーザーエージェントの文字列</td></tr></tbody></table><h3 id=\"例\">例</h3><p>以下の例は、プリロードされた属性をどのように使用できるかを示しています：</p><ul><li><strong>頻繁な訪問者</strong>のバッジを使用してオーディエンスを作成し、そのオーディエンスにコネクタをアクションして「定期的に訪問していただきありがとうございます」というメールを送信します。</li><li>**使用したオペレーティングシステムの合計（お気に入り）**の属性を使用して、ページ上の特定のダウンロードの配置を変更し、より関連性の高いアプリを最初に表示します。</li><li><strong>直接訪問の合計</strong>と<strong>紹介訪問の合計</strong>を使用して、訪問者がサイトとどのように関わっているかを決定するための直接訪問と紹介訪問の比率を計算します。</li></ul>"
        }  

    , 
        {
            "weight": "30",
            "url": "https://docs.tealium.com/ja/server-side/attributes/enrichments/",
            "title": "エンリッチメントについて",
            "body":"<p>エンリッチメントとは、属性を静的な値から動的な値に変換するためのカスタムロジックの使用を指します。これは新しいデータ値を作成したり、受信データを変更したりするために使用されます。各データタイプには事前に構築されたエンリッチメントが用意されています。例えば、数値属性には数値を増減する機能が用意されています。</p><h2 id=\"リンクされたエンリッチメント\">リンクされたエンリッチメント</h2><p>2つ以上のエンリッチメントが同じ属性に依存している場合、それらは_リンクされたエンリッチメント_となります。以下の例は、訪問の開始と終了に適用されたエンリッチメントを示しています。<code>Visit Start</code>属性のエンリッチメントは<code>Visit End</code>属性を使用し、その逆も同様です。各エンリッチメントが属性によって他方にリンクされているため、それらはリンクされたエンリッチメントと見なされます。</p><figure><a class=\"slb\" href=\"/images/server-side/whiteui-usingenrichments-visitstart-and-visitend-linked-enrichments-combined-screens.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-usingenrichments-visitstart-and-visitend-linked-enrichments-combined-screens.png\"         alt=\"UsingEnrichments_VisitStart and VisitEnd Linked Enrichments_Combined Screens\"         title=\"UsingEnrichments_VisitStart and VisitEnd Linked Enrichments_Combined Screens\"/>    </a></figure>"
        }  

    , 
        {
            "weight": "30",
            "url": "https://docs.tealium.com/ja/server-side/visitor-stitching/visitor-id-attribute/",
            "title": "ビジターID属性",
            "body":"<p>始める前に、以下の内容について理解しておいてください：</p><ul><li><a href=\"/ja/server-side/attributes/about/\">属性の使用</a></li><li><a href=\"/ja/server-side/attributes/enrichments/\">エンリッチメントの使用</a></li><li><a href=\"/ja/server-side/visitor-stitching/about/\">ビジタースティッチングについて</a></li></ul><p>ビジターID属性は、AudienceStreamで設定され、ビジターを一意に識別します。ビジターID属性を作成するとき、エンリッチメントを追加して値をユーザー識別子（例えば、<code>email_address_hash</code>や<code>customer_id</code>などのイベント属性）に設定します。ビジタースティッチングを正しく機能させるためには、一意のユーザー識別子を選択し、ビジターを識別するタイミングを決定するルールを作成し、選択した属性が各ビジターに対して一意であることを確認する必要があります。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>ビジタースティッチングはデフォルトでは無効になっています。有効にするにはアカウントマネージャーに連絡してください。</p><p>ビジターID属性はビジタースコープで利用可能です。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.27.27-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.27.27-pm.png\"         alt=\"Screenshot 2019-11-11 at 1.27.27 PM.png\"         title=\"Screenshot 2019-11-11 at 1.27.27 PM.png\"/>    </a></figure><h2 id=\"ビジターid属性のシステム要件\">ビジターID属性のシステム要件</h2><p>ビジターID属性は以下のシステム要件を満たす必要があります：</p><ul><li><strong>長さ</strong> – 値は6から255文字の間でなければなりません。</li><li><strong>非繰り返し</strong> – 値は少なくとも3つの異なる文字を含む必要があります。2つの異なる文字だけで構成された10文字の識別子（ <code>&quot;a1a1a1a1a1&quot;</code> ）は無効です。</li><li><strong>エンリッチメント</strong> – データタイプがNumberの属性は、ビジターID属性をエンリッチするために使用することはできません。</li><li><strong>サイズ</strong> – ビジターIDの最大サイズは2 KBです。</li></ul><p>UTF-8文字セットがサポートされています。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>システムはこれらの要件を自動的に検証します。ビジターID属性の設定にこれらのルール条件は必要ありません。</p><h2 id=\"ベストプラクティス\">ベストプラクティス</h2><p>ビジターID属性は以下のベストプラクティスに従うべきです：</p><ul><li><p><strong>一意性</strong> - 各ビジターID属性の値は各ビジターに対して一意であるべきです。</p><ul><li><strong>強い識別子</strong> - ハッシュ化されたメールアドレスや顧客IDのように、一人のビジターに関連付けられ、変更される可能性が低い値を使用してください。</li><li><strong>弱い識別子</strong> - 名前やユーザー名、電話番号など、各ビジターに対して一意であることが保証できない、または時間とともに変更される可能性が高い値は避けてください。</li></ul></li><li><p><strong>大文字と小文字の区別</strong> - 値は大文字と小文字を区別するので、小文字に変換してください。例えば、<code>FirstLast@example.com</code>と<code>firstlast@example.com</code>は、AudienceStreamでは2つの異なるIDとして扱われます。</p></li><li><p><strong>値の確認</strong> - メールアドレスを使用している場合、アドレスに<code>@</code>記号が含まれていることを確認することが望ましいかもしれません。また、<code>undefined</code>、<code>unknown</code>、<code>not set</code>など、ビジターID属性の有効な値とならないテキストを含むかどうかをチェックすることも考慮に入れてください。</p></li></ul><p class=\"tip\"><i class=\"fa fa-info-circle\"></i>最も正確なビジターID属性を作成するためのガイドは、<a href=\"/ja/server-side/visitor-stitching/create-a-visitor-id-attribute/\">ビジターID属性の作成</a>を参照してください。</p><h2 id=\"ビジターid属性に値を設定するタイミング\">ビジターID属性に値を設定するタイミング</h2><p>ビジターID属性の値は、資格を持つイベント（アカウントの登録や購入の完了など、顧客が信頼性のある一意の識別手段を提供するときに発生するイベント）の間に設定します。</p><p>ビジターID属性はマーケティング活性化ID（例えばgid）であるべきではありません。これらのサードパーティ識別子は、コネクタで使用するためのビジター属性として保存できますが、ビジターID属性としては推奨されません。</p><h2 id=\"ビジターid属性をエンリッチする\">ビジターID属性をエンリッチする</h2><p>エンリッチメントを使用して、ビジターID属性にビジターのユーザー識別子を保存します。例えば、ユーザーが登録またはサインアップすると、システムは内部IDを生成してデータレイヤーに<code>customer_id</code>として追加するかもしれません。この場合、<code>user_register</code>イベントが発生したときに、ビジターID属性を<code>customer_id</code>に設定するためにエンリッチメントを使用します。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>ビジターID属性が設定されると、それは更新できません。</p>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/boolean/",
            "title": "ブーリアン属性",
            "body":"<p>ブーリアン属性は、条件の真偽値を格納するために使用されます。例えば、訪問がカートにアイテムを追加したかどうか、または特定のサイトのセクションを訪れたかどうかをブーリアンで格納できます。</p><p>ブーリアン属性は次のスコープで利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/attribute-scopes-table-all.png\"><img src=\"https://docs.tealium.com/images/server-side/attribute-scopes-table-all.png\" width=\"400\" height=\"110\"/>    </a></figure><h2 id=\"ブーリアンのエンリッチメント\">ブーリアンのエンリッチメント</h2><h3 id=\"ブーリアンの構成\">ブーリアンの構成</h3><p>このエンリッチメントを使用して、ブーリアン属性を真または偽に構成します。</p><p>この例では、訪問がカートにアイテムを追加したかどうかを「カートに追加したか」という名前のブーリアン属性を使用して判断する方法を示しています。各訪問の開始時に属性を偽に構成し、<code>cart_add</code>イベントが発生するたびに真に構成します。</p><p>これを達成するために2つのエンリッチメントを作成します：</p><pre tabindex=\"0\"><code>構成値：偽いつ：新規訪問</code></pre><pre tabindex=\"0\"><code>構成値：真いつ：任意のイベントルール：tealium_event が &#34;cart_add&#34;と等しい</code></pre><p><strong>属性名:</strong> カートに追加したか</p><ul><li><strong>開始値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメントされた値</strong>: <code>真</code></li><li><strong>結果の値</strong> <code>真</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/arrays/array-of-booleans/",
            "title": "ブール値の配列",
            "body":"<p>ブール値の配列属性は、真偽値のリストを保存します。</p><p>ブール値の配列は次の範囲で利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"         alt=\"ブール値の配列\"         title=\"ブール値の配列\"/>    </a></figure><p class=\"tip\"><i class=\"fa fa-info-circle\"></i>文字列の &ldquo;true&rdquo; と &ldquo;false&rdquo;（大文字/小文字の混在）はそれぞれのブール値に変換されます。それ以外の非ブール値は無視されます。</p><h2 id=\"エンリッチメント\">エンリッチメント</h2><h3 id=\"ブール値の追加\">ブール値の追加</h3><p>このエンリッチメントは配列に値を追加します。追加される属性はブール値、iQ変数、またはオムニチャネル属性のみです。例えば、顧客が最後の訪問で購入したことを表すために、配列にブール値を追加することができます。</p><p><strong>属性名</strong>：<code>did_purchase_on_visit</code></p><ul><li><strong>開始値</strong>：<code>[true]</code></li><li><strong>エンリッチメント</strong>：<code>false</code></li><li><strong>結果の値</strong>：<code>[true, false]</code></li></ul><h3 id=\"ブール値の配列の追加\">ブール値の配列の追加</h3><p>このエンリッチメントは別の配列からすべての値を配列に追加します。追加される属性のタイプはブール値の配列またはiQ変数のみです。</p><p><strong>属性名</strong>：<code>my_booleans</code></p><ul><li><strong>開始値</strong>：<code>[true]</code></li><li><strong>エンリッチメント</strong>：<code>[false, true]</code></li><li><strong>結果の値</strong>：<code>[true, false, true]</code></li></ul><h3 id=\"リセット\">リセット</h3><p>このエンリッチメントはブール値の配列からすべての値を削除します。</p><p><strong>属性名</strong>：<code>did_purchase_on_visit</code></p><ul><li><strong>開始値</strong>：<code>[true, false, true]</code></li><li><strong>結果の値</strong>：<code>[]</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/timeline/",
            "title": "タイムライン属性",
            "body":"<p>タイムライン属性は、指定された期間にわたるイベントのリストを記録します。キャプチャされたイベントは、キャプチャされた属性値とタイムスタンプを含むタイムライン内のエントリを生成します。タイムスタンプは、イベントの時間または他の属性によって提供される日付/時間にすることができます。タイムスタンプはUnix/Epoch形式で記録されます。</p><p>タイムライン属性は最大100エントリに制限されています。タイムラインがこの制限に達すると、最も早いエントリが破棄されます（先入れ先出し）。例えば、タイムラインに100エントリが含まれていて、新しいエントリが追加された場合、最初のエントリが削除されます。</p><h2 id=\"属性データのキャプチャ\">属性データのキャプチャ</h2><p>イベントのタイムスタンプに加えて、イベントが発生したときの1つ以上の属性の値もキャプチャすることができます。キャプチャされた属性値は、イベントが発生したときの詳細情報を提供します。数値と集計だけがキャプチャに有用な属性タイプであり、これらの属性タイプだけがエンリッチメントを使用して集計することができます。</p><p>例えば、各購入の注文合計を追跡するためには、購入タイムラインで属性<code>order_total</code>をキャプチャします。</p><h2 id=\"エントリの有効期限\">エントリの有効期限</h2><p>タイムライン内のエントリは、構成された日数後に有効期限が切れるように構成することができます。この有効期限はタイムライン内のエントリにのみ適用され、タイムライン属性自体には適用されません。有効期限は各訪問の開始時に評価されます。エントリが有効期限より古い場合、タイムラインから削除されます。</p><p>タイムラインは数値と相性が良く、数値エントリはタイムラインエントリに基づいたローリング合計またはローリング平均値を作成するのに容易に使用することができます。</p><p>タイムライン属性は次のスコープで利用可能です：訪問と訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"         alt=\"Screenshot 2019-11-11 at 1.26.28 PM.png\"         title=\"Screenshot 2019-11-11 at 1.26.28 PM.png\"/>    </a></figure><h2 id=\"タイムラインのエンリッチメント\">タイムラインのエンリッチメント</h2><h3 id=\"タイムラインの更新\">タイムラインの更新</h3><p>このエンリッチメントを使用してタイムラインにエントリを記録します。このエンリッチメントを追加するには、<strong>エントリを作成</strong>をクリックし、<strong>タイムラインを更新</strong>を選択します。</p><p>エントリのタイムスタンプを記録するための以下のオプションのいずれかを選択します：</p><ul><li><strong>イベント受信時の時間（デフォルト）</strong><br>エントリのタイムスタンプは、イベントが発生したときに自動的に構成されます。</li><li><strong>日付に基づく</strong><br>エントリのタイムスタンプは、別の属性の値に構成されます。文字列属性を選択した場合、予想される値に一致する日付/時間パターンを作成するために<a href=\"/ja/server-side/attributes/data-types/date/\">date formatter</a>を使用する必要があります。</li></ul><p>エントリに属性値をキャプチャするには、ドロップダウンリストから属性を選択し、<strong>属性を追加</strong>をクリックします。追加された属性はキャプチャされた属性として表示されます。エントリにキャプチャする各属性についてこの手順を繰り返します。</p><h4 id=\"例\">例</h4><p><strong>属性名</strong>: 過去60日間の注文<br><strong>キャプチャされた属性:</strong> <code>order_subtotal</code> と <code>order_total</code></p><p><strong>JSONデータの例</strong>:</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-json\" data-lang=\"json\"><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">&#34;過去60日間の注文&#34;</span> <span style=\"color:#960050;background-color:#1e0010\">:</span> [</span></span><span style=\"display:flex;\"><span>  {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;timestamp&#34;</span> : <span style=\"color:#ae81ff\">1576862494000</span>,</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;snapshot&#34;</span> : {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_total&#34;</span> : <span style=\"color:#ae81ff\">44.00</span>,</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_subtotal&#34;</span> : <span style=\"color:#ae81ff\">38.00</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>  },</span></span><span style=\"display:flex;\"><span>  {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;timestamp&#34;</span> : <span style=\"color:#ae81ff\">1577640094000</span>,</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;snapshot&#34;</span> : {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_total&#34;</span> : <span style=\"color:#ae81ff\">100.00</span>,</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_subtotal&#34;</span> : <span style=\"color:#ae81ff\">95.00</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>  },</span></span><span style=\"display:flex;\"><span>  {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;timestamp&#34;</span> : <span style=\"color:#ae81ff\">1578849694000</span>,</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;snapshot&#34;</span>: {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_total&#34;</span> : <span style=\"color:#ae81ff\">60.00</span>,</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_subtotal&#34;</span> : <span style=\"color:#ae81ff\">59.00</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span>]</span></span></code></pre></div><h3 id=\"タイムラインイベントの有効期限構成\">タイムラインイベントの有効期限構成</h3><p>このエンリッチメントを使用して、エントリが記録されてから何日後にタイムラインから削除されるべきかを決定します。有効期限を超えた各エントリは自動的にタイムラインから削除されます。タイムラインエントリの有効期限は、訪問の開始時に評価されます。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>有効期限はタイムライン自体には適用されず、その中のエントリにのみ適用されます。</p>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/badge/",
            "title": "バッジ属性",
            "body":"<h2 id=\"仕組み\">仕組み</h2><p>バッジは<a href=\"/ja/server-side/audiences/audience-discovery/about/\">オーディエンスの発見</a>のための基本的な要素です。行動は、その条件を記述する属性とルールを使用して定義されます。</p><p>例えば、あなたのサイトを頻繁に閲覧するが購入しない訪問者の行動に興味があるかもしれません。この場合、以下のような行動がこのタイプの訪問者を特徴づけるかもしれません：</p><ul><li><strong>訪問済み</strong>：過去7日間に3回サイトを訪問した。</li><li><strong>興味を示した</strong>：製品の詳細ページを閲覧したり、記事を読んだりした。</li><li><strong>コンバートしなかった</strong>：購入したり、サービスにサインアップしたりしていない。</li></ul><p>このような行動パターンは、その行動に一致する訪問者を識別するためのバッジ属性として&quot;Window Shopper&quot;という名前で設定することができます。</p><p>バッジ属性は次の範囲で利用可能です：訪問者。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.27.27-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.27.27-pm.png\"         alt=\"Screenshot 2019-11-11 at 1.27.27 PM.png\"         title=\"Screenshot 2019-11-11 at 1.27.27 PM.png\"/>    </a></figure><h3 id=\"サイズ制限\">サイズ制限</h3><p>各バッジのサイズには制限はありませんが、これらの属性は暗号化と圧縮後のプロファイルの最大サイズ（400 KB）によって制限されます。</p><h3 id=\"バッジの関連付け\">バッジの関連付け</h3><p>バッジの関連付けは、訪問者が獲得した他のバッジに基づいて複数のバッジを素早く割り当てることができます。通常、特定の閲覧行動や基準に基づいてバッジの割り当てをトリガーしますが、バッジの関連付けを使用すると、訪問者が資格を持つバッジを獲得した後に複数のバッジの割り当てをトリガーすることができます。</p><p><a href=\"#badge-associations\">バッジの関連付けの設定</a>について詳しく学びましょう。</p><h2 id=\"エンリッチメント\">エンリッチメント</h2><p>バッジは、そのルールのロジックに基づいて訪問者に割り当てられ、削除されます。新しい訪問者にはデフォルトのバッジである<strong>Unbadged</strong>が割り当てられます。このバッジは、訪問者がカスタムバッジを獲得した後に自動的に削除されます。バッジは以下のエンリッチメントを使用して割り当て（および削除）されます。</p><h3 id=\"バッジの割り当て\">バッジの割り当て</h3><p>条件が満たされたときに訪問者にバッジを割り当てます。すべての訪問者は初めてバッジが付けられます。例えば、<strong>Window Shopper</strong>バッジを割り当てるためには、訪問者がサイトから購入せずに離れたかどうかを判断する必要があります。</p><p><strong>属性名</strong>：&ldquo;Window Shopper&rdquo;</p><ul><li><strong>開始値</strong>：<code>&quot;Unbadged&quot;</code></li><li><strong>結果値</strong>：<code>&quot;Window Shopper&quot;</code></li></ul><h3 id=\"バッジの削除\">バッジの削除</h3><p>訪問者が条件を満たさなくなったときに割り当てられたバッジを削除します。例えば、訪問者が購入した後に<strong>Window Shopper</strong>バッジが削除されます。</p><p><strong>属性名</strong>：&ldquo;Window Shopper&rdquo;</p><ul><li><strong>開始値</strong>：<code>&quot;Window Shopper&quot;</code></li><li><strong>結果値</strong>：<code>&quot;Unbadged&quot;</code></li></ul><h3 id=\"別のバッジからバッジを割り当てる\">別のバッジからバッジを割り当てる</h3><p>別のバッジに基づいてバッジを割り当てます。例えば、訪問者がカートを放棄した後に<strong>Window Shopper</strong>バッジが<strong>Cart Abandoner</strong>バッジに置き換えられます。もちろん、訪問者は複数のバッジを持つことができるので、訪問者は<strong>Window Shopper</strong>であり、<strong>Cart Abandoner</strong>であることができます。</p><p><strong>属性名</strong>：&ldquo;Cart Abandoner&rdquo;</p><ul><li><strong>開始値</strong>：<code>&quot;Window Shopper&quot;</code></li><li><strong>結果値</strong>：<code>&quot;Cart Abandoner&quot;</code></li></ul><h2 id=\"人気のバッジ\">人気のバッジ</h2><p>以下の表は、いくつかの人気のあるバッジをリストしています。人気のあるバッジの完全なリストについては、<a href=\"/ja/server-side/attributes/data-types/popular-badges/\">人気のバッジ</a>を参照してください。</p><table><thead><tr><th>バッジ名</th><th>説明</th></tr></thead><tbody><tr><td>Known Visitor</td><td><ul><li>訪問者の重要な識別子をキャプチャしたときに割り当てられます</li><li>例：顧客ID（クライアントのID）、顧客のメールアドレス、Facebook ID</li><li>可能なアクション：なし、ただしオーディエンス内で使用して訪問者が選択したベンダーAPIでターゲット可能であることを確認します</li><li>これらの訪問者は、より一般的にはメールやソーシャルメディアを通じてターゲットにされます</li></ul></td></tr><tr><td>Unknown Visitor</td><td><ul><li>訪問者がまだウェブサイトで認証していないときに割り当てられます</li><li>認証は必ずしもログインを意味するわけではありません。訪問者がメールからサイトに来て、URLにメールが含まれている場合、訪問者が誰であるかを判断し、彼らが&quot;認証&quot;したと判断します</li><li>可能なアクション：訪問者に自分自身を特定するように促すモーダルを表示します</li><li>これらの訪問者は、より一般的にはディスプレイ広告を通じてターゲットにされます</li></ul></td></tr><tr><td>Window Shopper</td><td><ul><li>サイトを頻繁に訪れるが購入しない訪問者</li><li>例：過去7日間に3回サイトを訪れ、製品の詳細ページを閲覧したり記事を読んだりし、購入したりサービスにサインアップしたりしていない訪問者</li><li>可能なアクション：カテゴリーへの親和性を判断し、次回のセッションのランディングページを変更して体験をパーソナライズします</li></ul></td></tr><tr><td>Purchaser</td><td><ul><li>コンバートした訪問者</li><li>例：製品を購入したり、サービスにサインアップしたりした</li><li>可能なアクション：2週間後に別の購入を誘うオファーを含むメールを送信する、または購入したアイテムに関連するアイテムを示すメールを送信する。例えば、訪問者が野球のバットを購入した場合、野球のバッグとバッティンググローブを提供する</li><li>可能なアクション：訪問者をリターゲティングキャンペーンから削除して、不必要にリマーケティングされないようにする</li></ul></td></tr><tr><td>Browse Abandoner</td><td><ul><li>製品を閲覧し、カートにアイテムを追加しなかった訪問者。</li><li>可能なアクション：Known Visitorであり、Facebook IDが分かっている場合、データをFacebookに送信してブランドを訪問者に再ターゲティングします。</li></ul></td></tr><tr><td>Cart Abandoner</td><td><ul><li>カートにアイテムを追加し、購入しなかった訪問者。</li><li>可能なアクション：メールアドレスが分かっている場合、放棄されたアイテムを含むパーソナライズされたメールを送信します。</li></ul></td></tr><tr><td>Search Abandoner</td><td><ul><li>検索エンジンからサイトにアクセスし、資格を持つ行動を完了していない訪問者。例えば、訪問中に3ページを閲覧するなど。</li></ul></td></tr></tbody></table><h2 id=\"バッジの関連付け-1\">バッジの関連付け</h2><h3 id=\"エンリッチメントの作成新規または既存のバッジ用\">エンリッチメントの作成（新規または既存のバッジ用）</h3><ol><li><strong>属性 &gt; 訪問者 / 訪問属性</strong>に移動します。</li><li>新しいバッジを追加するか、他のバッジを追加したいバッジの編集アイコンをクリックします。</li><li><strong>エンリッチメントを追加</strong>をクリックし、<strong>別のバッジからバッジを割り当てる</strong>を選択します。<br><figure><a class=\"slb\" href=\"/images/server-side/attributes/badge-enrichments.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/badge-enrichments.png\"         alt=\"badge enrichments.png\"         title=\"badge enrichments.png\"/>    </a></figure></li><li>ドロップダウンリストから割り当てたいバッジを選択します。<figure><a class=\"slb\" href=\"/images/server-side/attributes/select-a-badge-to-associate.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/select-a-badge-to-associate.png\"         alt=\"Select a badge to associate.png\"         title=\"Select a badge to associate.png\"/>    </a></figure></li><li>より多くのバッジを割り当てるためにステップ2 - 4を繰り返します。</li><li><strong>完了</strong>をクリックします。</li><li>完了したら、プロファイルを保存して変更を適用します。</li></ol><h3 id=\"バッジ関連付けウィザードの使用既存のバッジのみ\">バッジ関連付けウィザードの使用（既存のバッジのみ）</h3><ol><li><p><strong>訪問者 / 訪問属性</strong>テーブルで、割り当てたいバッジをクリックします。</p></li><li><p>パネルの右上隅にあるバッジ関連付けアイコンをクリックします。<br><figure><a class=\"slb\" href=\"/images/server-side/attributes/badge-association-icon.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/badge-association-icon.png\"         alt=\"badge association icon.png\"         title=\"badge association icon.png\"/>    </a></figure></p></li><li><p><code>+</code>アイコンをクリックし、割り当てたいバッジを選択します。</p></li></ol><figure><a class=\"slb\" href=\"/images/server-side/attributes/badge-select.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/badge-select.png\"         alt=\"Select a badge\"         title=\"Select a badge\"/>    </a></figure><h3 id=\"バッジ関連付けウィザードの理解\">バッジ関連付けウィザードの理解</h3><p>既存のバッジをクリックしてこのウィザードを表示します。現在割り当てられているバッジは常に中央の列にあり、両側に矢印があります。矢印は常に受け取りバッジの方向を指しています。現在のバッジと受け取りバッジに任意の数のバッジを割り当てることができますが、受け取りバッジをそのソースバッジに再割り当てすることはできません。以下の例をご覧ください。</p><figure><a class=\"slb\" href=\"/images/server-side/attributes/car-badge-example.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/car-badge-example.png\"         alt=\"Car badge example\"         title=\"Car badge example\"/>    </a></figure><p>中央の<strong>Car badge</strong>は現在、資格を持つ訪問者に割り当てられています。他のバッジの割り当てがどのようにトリガーされるかは以下の通りです。</p><ol><li>資格を持つ訪問者は<strong>Car badge</strong>を受け取ります。</li><li><strong>Car badge</strong>の訪問者は自動的に<strong>Fancy cars</strong>と<strong>Electric</strong>のバッジが割り当てられます。</li><li><strong>Tesla</strong>バッジの訪問者は自動的に<strong>Car badge</strong>、<strong>Fancy cars</strong>、<strong>Electric cars</strong>のバッジが割り当てられます。</li><li><strong>Fun cars</strong>バッジの訪問者は自動的に<strong>Car badge</strong>、<strong>Fancy cars</strong>、<strong>Electric</strong>のバッジが割り当てられます。</li></ol>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/funnel/",
            "title": "ファネル属性",
            "body":"<p>ファネル属性は、以下のスコープで利用できます：訪問および訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"         alt=\"Screenshot 2019-11-11 at 1.26.28 PM.png\"         title=\"Screenshot 2019-11-11 at 1.26.28 PM.png\"/>    </a></figure><h2 id=\"動作方法\">動作方法</h2><p>ファネル属性は、訪問の進行状況を開始から終了まで測定するためのステップのシーケンスを追跡します。ステップは、構成されたルールが発生したときに記録されます。ステップが記録されると、ステップに関する情報のスナップショットとして属性値もキャプチャできます。ファネルステップは必須またはオプションであり、ただし最後のステップは常に必須です。</p><p>例として、チェックアウトファネル、購入ファネル、またはリードジェネレータファネルがあります。</p><p>ファネル属性には保存容量制限はありませんが、これらの属性は暗号化および圧縮後のプロファイルの最大サイズによって制限されます。</p><h3 id=\"必須およびオプションのステップ\">必須およびオプションのステップ</h3><p>ファネルを構成する際には、予想されるシーケンスですべてのステップ（必須およびオプションの両方）を定義します。</p><h4 id=\"必須ステップ\">必須ステップ</h4><p>必須とマークされたステップは、ファネル構成で定義されたシーケンスで発生すると記録されます。訪問が必須ステップをシーケンス外で実行した場合、ファネルには記録されません。つまり、必須ステップはシーケンス内でのみ記録されます。</p><p>3つの必須ステップを持つ例のファネルの動作例：ステップ＃1、ステップ＃2、ステップ＃3：</p><table><thead><tr><th>訪問が実行したステップ</th><th>ファネルに記録されたステップ</th></tr></thead><tbody><tr><td>ステップ＃1</td><td>ステップ＃1</td></tr><tr><td>ステップ＃3（シーケンス外）</td><td>ステップ＃1</td></tr><tr><td>ステップ＃2</td><td>ステップ＃1、ステップ＃2</td></tr><tr><td>ステップ＃3</td><td>ステップ＃1、ステップ＃2、ステップ＃3</td></tr></tbody></table><h4 id=\"オプションステップ\">オプションステップ</h4><p>必須とマークされていないステップはオプションと見なされます。オプションステップは、ファネルで定義された正確なシーケンスでのみ記録されます。オプションステップは訪問によってスキップされることがあり、ファネルはその後のステップの記録を続けます。ただし、オプションステップがスキップされ、後で実行された場合、ファネルには記録されず、バックフィルされません。つまり、オプションステップがシーケンス外で実行された場合、ファネルには記録されません。</p><p>1つのオプションステップを持つ例のファネルの動作例：ステップ＃1、ステップ＃2（オプション）、ステップ＃3、およびステップ＃4：</p><table><thead><tr><th>訪問が実行したステップ</th><th>ファネルに記録されたステップ</th></tr></thead><tbody><tr><td>ステップ＃1</td><td>ステップ＃1</td></tr><tr><td>ステップ＃3（オプションステップ＃2をスキップ）</td><td>ステップ＃1、ステップ＃3</td></tr><tr><td>ステップ＃2</td><td>ステップ＃1、ステップ＃3（ステップ＃2はバックフィルされません）</td></tr><tr><td>ステップ＃3</td><td>ステップ＃1、ステップ＃3</td></tr></tbody></table><h3 id=\"属性データのキャプチャ\">属性データのキャプチャ</h3><p>ファネルの各ステップを記録するだけでなく、ステップが発生した時点で1つ以上の属性の値もキャプチャできます。キャプチャされたデータは、ステップが発生した時点での訪問の状態についての詳細情報を提供します。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>ファネル属性はAudienceStoreでアクセスできますが、AudienceDBやData Layer Enrichmentではアクセスできません。</p><h2 id=\"ファネルエンリッチメント\">ファネルエンリッチメント</h2><h3 id=\"ステップの作成\">ステップの作成</h3><p>このエンリッチメントを使用して、ファネル内のステップを作成します。ファネルステップを追加するにつれて、リストの一番上に表示されるステップがファネル内の最初のステップであり、一番下に表示されるステップが最後（必須）のステップです。新しいステップはリストの一番上に追加されます。</p><p>ファネルステップを作成するには：</p><ol><li><strong>ステップの作成</strong> をクリックします。</li><li>ステップのタイトルを入力します。</li><li>（オプション）属性の値をキャプチャする場合は、属性を選択し、<strong>属性の追加</strong> をクリックします。</li><li>オプションステップの場合は、<strong>必須ではない</strong> チェックボックスをクリアします。</li><li>タイミングオプションとルールを選択します。</li></ol><p>ファネル内の各ステップについてこれらの手順を繰り返します。</p><p>すべてのステップを入力した後、適切なシーケンスにドラッグします。</p><h4 id=\"例\">例</h4><p>基本的な購入ファネル：製品ページからカートページ、チェックアウトページ、購入ページへのパス。</p><p><strong>ステップ1：製品の表示</strong>データのキャプチャ：<code>product_name</code>ルール：<code>tealium_eventが &quot;product_view&quot; と等しい</code></p><p><strong>ステップ2：カートの表示</strong>データのキャプチャ：なしルール：<code>tealium_eventが &quot;cart_view&quot; と等しい</code></p><p><strong>ステップ3：チェックアウト</strong>データのキャプチャ：なしルール：<code>tealium_eventが &quot;checkout&quot; と等しい</code></p><p><strong>ステップ4：購入完了</strong>データのキャプチャ：<code>order_id</code> および <code>order_total</code>ルール：<code>tealium_eventが &quot;purchase&quot; と等しい</code></p><h2 id=\"使用例\">使用例</h2><h3 id=\"無料トライアル登録ファネル\">無料トライアル登録ファネル</h3><p>プレミアム製品を購入する前に、訪問に無料で試用してもらうことを許可するとします。ただし、トライアル製品は、シンプルな3ステップの登録プロセスを完了した訪問のみ利用できます。ファネル内のすべてのステップを定義し、訪問がそれらを完了する必要がある順序で配置します。これを行う方法は2つあります：</p><ul><li>逆の年代順に追加する。</li><li>または、ランダムな順序で追加し、それぞれのステップを適切な位置にドラッグします。</li></ul><p>この例では、逆の年代順法に従います。各ステップを &lsquo;必須&rsquo; としてマークすることを忘れないでください。これにより、登録に成功したユーザーと終了前に離脱したユーザーを区別することができます。</p><ol><li>ファネル属性を追加します。タイトルを付けてスコープを構成します。</li></ol><pre tabindex=\"0\"><code>ファネルタイトル：無料トライアル登録ファネルスコープ：訪問</code></pre><ol start=\"2\"><li>登録の最終ステップを作成します。この時点ではステップが1つだけであり、自動的に必須に構成されます。ここでは属性データはキャプチャされません。</li></ol><pre tabindex=\"0\"><code>タイトル：ステップ3-トライアル完了WHEN：ANY EVENTルール：Free Trial - Thanks  Current URL contains (ignore case) &#34;freetrialthanks.html&#34;</code></pre><ol start=\"3\"><li>訪問が &lsquo;登録&rsquo; ボタンをクリックする必要がある中間ステップを作成します。このステップは &lsquo;必須&rsquo; ですが、ここでは属性データはキャプチャされません。</li></ol><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>このステップの前に、訪問がボタンを追跡し、クリックされたときにカテゴリとアクションのデータをキャプチャする必要があります。Tealium iQでは、<a href=\"/ja/iq-tag-management/data-layer/data-layer-variables/\">2つのUDO変数を追加</a>し、<code>ga_category</code> と <code>ga_action</code> を追加し、<a href=\"/ja/iq-tag-management/extensions/extensions-list/jquery-onhandler-extension/\">jQuery Extension</a>を構成する必要があります。その後、ルール条件でデータソースが利用可能になります。</p><pre tabindex=\"0\"><code>タイトル：ステップ2-トライアル参加WHEN：ANY EVENTルール：  ga_category contains (ignore case) &#34;free trial&#34;  AND  ga_action contains &#34;engaged&#34;</code></pre><ol start=\"4\"><li>訪問を無料トライアル登録ページに案内する最初のステップを作成します。このステップは &lsquo;必須&rsquo; ですが、ここでは属性データはキャプチャされません。</li></ol><pre tabindex=\"0\"><code>タイトル：ステップ1-トライアル着陸WHEN：ANY EVENTルール：Free Trial Landing  Current URL contains (ignore case)&#34;freetrial.html&#34;</code></pre><h4 id=\"結果\">結果</h4><p>必須ステップが完了すると、訪問は登録を進めながらファネルから外れます。このトラッキングとファネルリングのパターンは、訪問が製品に正常に登録したかどうかを判断するために続けられます。一方、訪問がファネル内の任意のステップを完了しなかった場合、登録は不完全と見なされます。</p><h3 id=\"コンバージョンファネル\">コンバージョンファネル</h3><p><code>Conversion Funnel</code> というファネル属性を作成し、ファネルの各ステップごとに <strong>ステップの作成</strong> をクリックします。</p><h4 id=\"ステップ1---製品の表示\">ステップ1 - 製品の表示</h4><figure><a class=\"slb\" href=\"/images/server-side/funnel-3.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-3.png\"         alt=\"Funnel - Viewed a product\"         title=\"Funnel - Viewed a product\"/>    </a></figure><h4 id=\"ステップ2---カートページの表示\">ステップ2 - カートページの表示</h4><figure><a class=\"slb\" href=\"/images/server-side/funnel-4.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-4.png\"         alt=\"Funnel - Viewed cart\"         title=\"Funnel - Viewed cart\"/>    </a></figure><h4 id=\"ステップ3---チェックアウトページの表示ユーザーが既にログインしている場合はオプション\">ステップ3 - チェックアウトページの表示（ユーザーが既にログインしている場合はオプション）</h4><figure><a class=\"slb\" href=\"/images/server-side/funnel-5.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-5.png\"         alt=\"Funnel - Viewed checkout page\"         title=\"Funnel - Viewed checkout page\"/>    </a></figure><p>以下のステップはすべて必須であり、ステップ2と同じです。</p><h4 id=\"ステップ4---請求ページの表示\">ステップ4 - 請求ページの表示</h4><pre tabindex=\"0\"><code>page_name EQUALS billing</code></pre><h4 id=\"ステップ5---配送ページの表示\">ステップ5 - 配送ページの表示</h4><pre tabindex=\"0\"><code>page_name EQUALS shipping_method</code></pre><h4 id=\"ステップ6---支払いページの表示\">ステップ6 - 支払いページの表示</h4><pre tabindex=\"0\"><code>page_name EQUALS payment</code></pre><h4 id=\"ステップ7---注文確認ページの表示\">ステップ7 - 注文確認ページの表示</h4><pre tabindex=\"0\"><code>page_name EQUALS review AND page_type EQUALS checkout</code></pre><h4 id=\"ステップ8---注文完了ページの表示\">ステップ8 - 注文完了ページの表示</h4><pre tabindex=\"0\"><code>page_name EQUALS cart success AND order_id IS ASSIGNED</code></pre><h4 id=\"ファネルの離脱\">ファネルの離脱</h4><p>ユーザーがファネルから離脱した場所を把握することは、多くのマーケティングキャンペーンにとって重要な要素であり、AudienceStreamは最後に完了したステップを示すことができます。</p><p>まず、ファネルの各ステップに対して複数のルールを作成する必要があります。たとえば、ルール <code>Conversion Funnel - Step 1 Complete</code> は、<code>Step 1 - Product</code> が完了したかどうかをチェックします。</p><figure><a class=\"slb\" href=\"/images/server-side/no-title-1138i54b80adb945590ff.png\"><img src=\"https://docs.tealium.com/images/server-side/no-title-1138i54b80adb945590ff.png\"         alt=\"Check Step 1\"         title=\"Check Step 1\"/>    </a></figure><p>次に、<code>Conversion Funnel - Last Step Completed</code> という文字列属性を作成します。この文字列属性には、上記のルールを使用してファネルの各ステップが完了したかどうかをチェックするエンリッチメントがあります。</p><figure><a class=\"slb\" href=\"/images/server-side/funnel-7.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-7.png\"         alt=\"String attribute created\"         title=\"String attribute created\"/>    </a></figure><h4 id=\"離脱\">離脱</h4><p>離脱はセッションの終了時に判断する必要があります。これにより、すべてのページビューが考慮されます。これを行うには、<code>Cart Abandoner</code> というバッジを作成し、訪問の最後にファネルを確認し、ファネルが開始されたが完了していない場合にバッジを割り当てます。</p><figure><a class=\"slb\" href=\"/images/server-side/no-title-1140i2e61df3ec9067d5c.png\"><img src=\"https://docs.tealium.com/images/server-side/no-title-1140i2e61df3ec9067d5c.png\"         alt=\"Cart abandoned?\"         title=\"Cart abandoned?\"/>    </a></figure><p>また、ファネルが完了した場合には、<code>Page View</code> イベントでバッジを削除する必要があります。</p><figure><a class=\"slb\" href=\"/images/server-side/funnel-8-remove-badge.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-8-remove-badge.png\"         alt=\"Remove badge\"         title=\"Remove badge\"/>    </a></figure><h4 id=\"オーディエンス\">オーディエンス</h4><p>次に、新しく作成したバッジを使用するオーディエンスを追加できます。オーディエンスは、顧客のメールアドレスなどの識別情報があることを確認する必要があります。</p><figure><a class=\"slb\" href=\"/images/server-side/funnel-9-audience.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-9-audience.png\"         alt=\"Create audience\"         title=\"Create audience\"/>    </a></figure><h4 id=\"アクション\">アクション</h4><p>このオーディエンスは、ユーザーをウェブサイトに戻し、コンバージョンを促進するために、任意のコネクタ（例：ESP）をトリガーするために使用できます。</p><p>who: この例では、ユーザーのメールアドレスを使用して、ベンダーにユーザーを識別します。</p><p>what: ユーザーがカートを離脱し、どのステップで離脱したかをベンダーに伝えます。</p><figure><a class=\"slb\" href=\"/images/server-side/funnel-10-action2.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-10-action2.png\"         alt=\"Funnel action 2\"         title=\"Funnel action 2\"/>    </a></figure><h4 id=\"トレース\">トレース</h4><p>これがどのように機能するかを確認するには、トレースを実行し、コンバージョンファネルの各ステップをナビゲートします。</p><figure><a class=\"slb\" href=\"/images/server-side/trace-2.png\"><img src=\"https://docs.tealium.com/images/server-side/trace-2.png\"         alt=\"Trace 3\"         title=\"Trace 3\" width=\"262\" height=\"263\"/>    </a></figure><p>最後に、セッションの終了時に <code>Cart Abandoner</code> バッジが割り当てられ、<code>Cart Abandoners</code> オーディエンスに参加し、関連するコネクタがトリガーされることに注意してください。</p><figure><a class=\"slb\" href=\"/images/server-side/trace-part-1-enriched.png\"><img src=\"https://docs.tealium.com/images/server-side/trace-part-1-enriched.png\"         alt=\"Cart abandoner enriched\"         title=\"Cart abandoner enriched\"/>    </a></figure><figure><a class=\"slb\" href=\"/images/server-side/trace-part-2-enriched.png\"><img src=\"https://docs.tealium.com/images/server-side/trace-part-2-enriched.png\"         alt=\"Cart abandoner enriched 2\"         title=\"Cart abandoner enriched 2\"/>    </a></figure><figure><a class=\"slb\" href=\"/images/server-side/trace-audience.png\"><img src=\"https://docs.tealium.com/images/server-side/trace-audience.png\"         alt=\"Trace audience\"         title=\"Trace audience\"/>    </a></figure>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/tally/",
            "title": "集計属性",
            "body":"<h2 id=\"動作方法\">動作方法</h2><p>集計属性は、多くのイベントで名前付きアイテムの出現回数をカウントするキー/値のコレクションを保存します。</p><p>たとえば、訪問が購入した商品カテゴリを追跡するには、「Product Category Purchases」という名前の集計を使用し、購入イベントが発生したときにイベント属性 <code>product_category</code> で見つかった商品カテゴリの名前を追加します。集計は、訪問の購買習慣に関する貴重な情報を提供します。</p><table><thead><tr><th>集計キー</th><th>集計値</th></tr></thead><tbody><tr><td>&ldquo;Shoes&rdquo;</td><td>1</td></tr><tr><td>&ldquo;Pants&rdquo;</td><td>3</td></tr><tr><td>&ldquo;Shirts&rdquo;</td><td>7</td></tr><tr><td>&ldquo;Shorts&rdquo;</td><td>2</td></tr></tbody></table><ul><li>キーは、発生したアイテムの名前を表します。たとえば、<code>product_category</code> 属性の値 &ldquo;Shoes&rdquo;。</li><li>値は、発生した回数を表します。</li></ul><p>集計には保存容量制限はありませんが、これらの属性はプロファイルの最大サイズ（暗号化および圧縮後）によって制限されます。</p><h3 id=\"スコープ\">スコープ</h3><p>集計属性は、以下のスコープで利用できます：訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"/>    </a></figure><h3 id=\"お気に入りの集計\">お気に入りの集計</h3><p>デフォルトでは、各集計属性は、最も高い値を持つ集計エントリの名前を自動的にキャプチャする文字列属性を生成します。この文字列属性の名前は、集計と同じですが、末尾に &ldquo;(favorite)&rdquo; が追加されます。たとえば、&ldquo;Product Categories Purchased&rdquo; という名前の集計には、&ldquo;Product Categories Purchased (Favorite)&rdquo; という名前の文字列属性もあります。</p><h4 id=\"集計の優先順位決定ロジック\">集計の優先順位決定ロジック</h4><p>複数のキーが同じ値を持つ場合、集計の優先順位は次のロジックに基づいて決定されます。</p><ul><li>タイが発生した場合、最後に増分されたキーがお気に入りになります。</li><li>複数のキーが同時に配列の値を使用して増分された場合、最後に処理されたエントリがお気に入りになります。</li><li>複数のキーが増分された順序が不明な場合、アルファベット順にソートしてお気に入りを選択します。</li></ul><h4 id=\"例\">例</h4><p>以下のイベントは、いくつかの可能な集計タイのシナリオと、各シナリオで選択されたお気に入りを説明しています。</p><p><strong>イベント1</strong></p><p>この <code>page_category</code> イベントには <code>Apparel</code> という1つのキーしかありませんので、それがお気に入りになります。</p><pre tabindex=\"0\"><code>// 受信したイベント&#34;page_category&#34;: { [&#34;Apparel&#34;] }// 結果&#34;page_category&#34;:{    &#34;Apparel&#34;: 1},&#34;page_category_favorite&#34;: &#34;Apparel&#34;</code></pre><p><strong>イベント2</strong></p><p>このイベントでは、<code>Apparel</code> と <code>Accessories</code> の2つのキーが受信され、3つのタイが発生します。<code>Accessories</code> が最後に処理されたため、それがお気に入りになります。</p><pre tabindex=\"0\"><code>// 受信したイベント&#34;page_category&#34;: { [&#34;Apparel&#34;, &#34;Accessories&#34;] }// 結果&#34;page_category&#34;: {    &#34;Books&#34;: 1,    &#34;Apparel&#34;: 1,    &#34;Accessories&#34;: 1},&#34;page_category&#34;: &#34;Accessories&#34;</code></pre><p><strong>イベント3</strong></p><p>このイベントでは、<code>Apparel</code> という1つのキーが受信され、それが最も高い値を持つキーなので、お気に入りになります。</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// 受信したイベント</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#e6db74\">&#34;page_category&#34;</span><span style=\"color:#f92672\">:</span> { [<span style=\"color:#e6db74\">&#34;Apparel&#34;</span>] }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// 結果</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#e6db74\">&#34;page_category&#34;</span><span style=\"color:#f92672\">:</span> {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#e6db74\">&#34;Accessories&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#ae81ff\">1</span>,</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#e6db74\">&#34;Apparel&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#ae81ff\">2</span>,</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#e6db74\">&#34;Books&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#ae81ff\">1</span></span></span><span style=\"display:flex;\"><span>},</span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">&#34;page_category_favorite&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;Apparel&#34;</span></span></span></code></pre></div><h3 id=\"例-1\">例</h3><p>以下の表は、&ldquo;Product Category Purchased&rdquo; という名前の集計の例を示しています。この集計は、各商品カテゴリの購入回数をカウントし、最も高い値を持つエントリの名前で文字列属性を自動的に入力します。</p><p><strong>集計属性: &ldquo;Product Category Purchased&rdquo;</strong></p><table><thead><tr><th>集計キー</th><th>集計値</th></tr></thead><tbody><tr><td>&ldquo;Shoes&rdquo;</td><td>1</td></tr><tr><td>&ldquo;Pants&rdquo;</td><td>3</td></tr><tr><td>&ldquo;Shirts&rdquo;</td><td>7</td></tr><tr><td>&ldquo;Shorts&rdquo;</td><td>2</td></tr><tr><td><strong>文字列属性: &ldquo;Product Category Purchased (Favorite)&rdquo;</strong></td><td><strong>&ldquo;Shirts&rdquo;</strong></td></tr></tbody></table><h2 id=\"集計属性のエンリッチメント\">集計属性のエンリッチメント</h2><h3 id=\"集計の増分\">集計の増分</h3><p>他の属性の値に基づいて集計内の数値を増分します。たとえば、各商品カテゴリが表示された回数を追跡するには、&ldquo;Product Category Viewed&rdquo; という名前の集計を使用し、<code>product_category</code> 属性でそれをエンリッチします。<code>product_category</code> の値は集計のエントリになります。</p><p>数値属性は、訪問、ページビュー、イベントなどのブラウジングメトリクスのための数値を保存します。一般的な例には、ライフタイムバリュー、注文合計トランザクション、最終購入日などがあります。</p><p>数値タイプを指定するには、<strong>タイプ</strong> ドロップダウンリストから <strong>Decimal</strong> または <strong>Integer</strong> を選択します。</p><ul><li><strong>Decimal</strong><ul><li>デフォルト値です。</li><li>小数点以下の桁数がゼロ（0）以上の場合があります。</li><li>例: <code>12</code>, <code>12.0</code>, <code>12.345</code></li><li>通貨の値を表す属性に必要です。</li></ul></li><li><strong>Integer</strong><ul><li>整数値のみが保存されます。</li><li>例: <code>12</code>, <code>-4</code>, <code>3214</code></li><li>数量、カウンタ、スコアを表す整数属性に便利です。</li></ul></li></ul><p><strong>属性名</strong>: &ldquo;Product Category Viewed&rdquo;</p><ul><li><strong>開始値</strong>: <code>{&quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li><li><strong>エンリッチメント対象</strong>: <code>product_category:&quot;Shoes&quot;</code></li><li><strong>結果の値</strong>: <code>{&quot;Shoes&quot;: 8, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li></ul><h3 id=\"集計値の増分\">集計値の増分</h3><p>カスタム名とカスタム値または他の属性値に基づいて集計エントリを増分します。たとえば、&ldquo;Product Category Searched&rdquo; という名前の集計を使用し、検索が発生しなかった場合（検索を追跡するブール属性に基づく条件の可能性が高い）に &ldquo;Did Not Search&rdquo; というハードコードされた値を追加するためにこのエンリッチメントを使用します。なぜなら、&ldquo;Did Not Search&rdquo; という名前は通常、<code>product_category</code> 属性に自然には存在しないためです。</p><p><strong>属性名</strong>: &ldquo;Product Category Searched&rdquo;</p><ul><li><strong>開始値</strong>: <code>{&quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li><li><strong>エンリッチメント対象</strong>: カスタムキー: <code>&quot;Did Not Search&quot;</code><br> カスタム増分: <code>1</code></li><li><strong>結果の値</strong>: <code>{&quot;Did Not Search&quot;: 1, &quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li></ul><h3 id=\"集計の増分他の集計による\">集計の増分（他の集計による）</h3><p>別の集計で見つかった値に基づいて集計の値を増分します。</p><p><strong>属性名</strong>: &ldquo;Product Category Purchased (Lifetime)&rdquo;</p><ul><li><strong>開始値</strong>: <code>{&quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li><li><strong>エンリッチメント対象</strong>: <code>{&quot;Shoes&quot;: 1, &quot;Shirts&quot;: 2, &quot;Dresses&quot;: 1}</code></li><li><strong>結果の値</strong>: <code>{&quot;Shoes&quot;: 8, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 5, &quot;Dresses&quot;: 1}</code></li></ul><h3 id=\"文字列のセットに基づく集計の増分\">文字列のセットに基づく集計の増分</h3><p>文字列のセット内のエントリに基づいて集計のエントリを増分します。たとえば、訪問ごとに検索された商品カテゴリを追跡するために &ldquo;Product Category Searched (Lifetime)&rdquo; という名前の集計を使用し、訪問の最後に &ldquo;Product Categories Searched (Visit)&rdquo; という名前の文字列セットでそれをエンリッチします。</p><p><strong>属性名</strong>: &ldquo;Product Category Searched (Lifetime)&rdquo;</p><ul><li><strong>開始値</strong>: <code>{&quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li><li><strong>エンリッチメント対象</strong>: Product Categories Search (Visit):<code>{&quot;Shoes&quot;, &quot;Pants&quot;, &quot;Hats&quot;}</code></li><li><strong>結果の値</strong>: <code>[&quot;Shoes&quot;: 8, &quot;Pants&quot;: 2, &quot;Shirts&quot;: 3, &quot;Hats&quot;: 1}</code></li></ul><h3 id=\"タイムラインに基づく移動平均の構成\">タイムラインに基づく移動平均の構成</h3><p>移動平均は、時間の経過とともにキャプチャされた数値の算術平均です。これらの値は、<a href=\"/ja/server-side/attributes/data-types/number/\">number</a> および <a href=\"/ja/server-side/attributes/data-types/number/\">tally</a> 属性から取得され、すべて <a href=\"/ja/server-side/attributes/data-types/number/\">Timeline</a> のエントリとして収集されます。タイムラインの有効期限によって、最終的な平均に影響を与えるエントリが決まります。有効期限がない場合は、単純な平均解決策です。</p><p><strong>属性名</strong>: &ldquo;Average Product Category Purchase Amounts&rdquo;</p><ul><li><strong>開始値</strong>: <code>{}</code></li><li><strong>エンリッチメント対象</strong>:  タイムラインエントリ: <code>{&quot;Shoes&quot;: 150.00, &quot;Pants&quot;: 75.00, &quot;Shirts&quot;: 30.00}</code><br> タイムラインエントリ: <code>{&quot;Pants&quot;: 75.00, &quot;Shirts&quot;: 42.00}</code><br> タイムラインエントリ: <code>{&quot;Shoes&quot;: 110.00, &quot;Shirts&quot;: 18.00 &quot;Hats&quot;: 25.00}</code></li><li><strong>結果の値</strong>: <code>{&quot;Shoes&quot;: 130.00, &quot;Pants&quot;: 75.00, &quot;Shirts&quot;: 30.00, &quot;Hats&quot;: 25.00}</code></li></ul><h3 id=\"タイムラインに基づく合計の構成\">タイムラインに基づく合計の構成</h3><p>合計は、<a href=\"/ja/server-side/attributes/data-types/number/\">number</a> または <a href=\"/ja/server-side/attributes/data-types/tally/\">tally</a> 属性の数値の集計です。タイムラインの有効期限によって、集計中に考慮される数値のエントリが決まります。</p><p><strong>属性名</strong>: &ldquo;Average Product Category Purchase Amounts&rdquo;</p><ul><li><strong>開始値</strong>: <code>{}</code></li><li><strong>エンリッチメント対象</strong>:  タイムラインエントリ: <code>{&quot;Shoes&quot;: 150.00, &quot;Pants&quot;: 75.00, &quot;Shirts&quot;: 30.00}</code><br> タイムラインエントリ: <code>{&quot;Pants&quot;: 75.00, &quot;Shirts&quot;: 42.00}</code><br> タイムラインエントリ: <code>{&quot;Shoes&quot;: 110.00, &quot;Shirts&quot;: 18.00 &quot;Hats&quot;: 25.00}</code></li><li><strong>結果の値</strong>: <code>{&quot;Shoes&quot;: 260.00, &quot;Pants&quot;: 150.00, &quot;Shirts&quot;: 90.00, &quot;Hats&quot;: 25.00}</code></li></ul><h3 id=\"対応する配列に基づく集計の構成\">対応する配列に基づく集計の構成</h3><p>2つの対応する配列で定義された値に集計を構成します。たとえば、購入イベントが発生したときに、購入した商品の数量をキャプチャするために &ldquo;Product Category Quantity Purchased&rdquo; という名前の集計を使用し、<code>product_category</code> と <code>product_quantity</code> の2つの配列でそれをエンリッチします。</p><p><strong>属性名</strong>: &ldquo;Product Category Quantity Purchased&rdquo;</p><ul><li><strong>開始値</strong>: <code>{}</code></li><li><strong>エンリッチメント対象</strong>:  <code>product_category: [&quot;Shoes&quot;, &quot;Pants&quot;, &quot;Shirts&quot;]</code><br><code>product_quantity: [1, 1, 3]</code></li><li><strong>結果の値</strong>: <code>{&quot;Shoes&quot;: 1, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li></ul><h3 id=\"集計の削除\">集計の削除</h3><p>一連の条件に基づいて集計を削除します。</p><p>集計の削除エンリッチメントは、集計をリセットするために使用できます。たとえば、訪問の商品カテゴリの検索を追跡している場合、注文が行われたらその集計をクリアすることができます。</p><p><strong>属性名</strong>: 集計をゼロにリセット</p><ul><li><strong>開始値</strong>: <code>{&quot;Shoes&quot;: 1, &quot;Pants&quot;: 3}</code></li><li><strong>エンリッチメント対象</strong>: <code>購入イベントが発生</code></li><li><strong>結果の値</strong>: <code>{}</code></li></ul><h3 id=\"集計内のエントリの削除\">集計内のエントリの削除</h3><p>一連の条件に基づいて集計内のエントリを削除します。たとえば、&ldquo;Product Category Searched&rdquo; という名前の集計を使用して、訪問の商品検索（および潜在的な購入）を追跡し、このエンリッチメントを使用して、購入に一致する集計エントリを削除します。</p><p><strong>属性名</strong>: &ldquo;Product Category Searched (Not Purchased)&rdquo;</p><ul><li><strong>開始値</strong>: <code>{&quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3, &quot;Jeans&quot;: 10}</code></li><li><strong>エンリッチメント対象</strong>: <code>product_catgory : &quot;Shoes&quot;</code></li><li><strong>結果の値</strong>: <code>[&quot;Pants&quot;: 1, &quot;Shirts&quot;: 3, &quot;Jeans&quot;: 10]</code></li></ul><h3 id=\"配列内の各アイテムごとに1を増分\">配列内の各アイテムごとに1を増分</h3><p>配列内の各アイテムごとに1を増分します。たとえば、購入イベントが発生したときに、配列属性 <code>product_category</code> を使用して &ldquo;Product Category Purchased&rdquo; という名前の集計を増分します。</p><p><strong>属性名</strong>: &ldquo;Product Category Purchased&rdquo;</p><ul><li><strong>開始値</strong>: <code>{&quot;Shoes&quot;: 1, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li><li><strong>エンリッチメント対象</strong>: <code>product_category : [&quot;Pants&quot;, &quot;Ties&quot;]</code></li><li><strong>結果の値</strong>: <code>{&quot;Shoes&quot;: 1, &quot;Pants&quot;: 2, &quot;Shirts&quot;: 3, &quot;Ties&quot;: 1]</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/popular-badges/",
            "title": "人気のバッジ",
            "body":"<table><thead><tr><th style=\"text-align:center\">バッジ</th><th>説明</th></tr></thead><tbody><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badge-browseabandoner.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badge-browseabandoner.png\" class=\"noshadow\" width=\"78\" height=\"77\"/>    </a></figure><br> ブラウズ放棄者</td><td><ul><li><strong>ルール</strong> – 商品を閲覧し、カートに商品を追加しなかった訪問。</li><li><strong>アクション</strong> – 既知の訪問であり、Facebook IDが分かっている場合、データをFacebookに送信して訪問にブランドを再ターゲティングします。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges%29business-family.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges%29business-family.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>    </a></figure><br> ビジネス/ホーム族旅行者</td><td><ul><li><strong>ルール</strong> – 訪問が旅行のタイプをマークしたときに割り当てます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-cartabandoner.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-cartabandoner.png\" class=\"noshadow\" width=\"79\" height=\"79\"/>    </a></figure><br> カート放棄者</td><td><ul><li><strong>ルール</strong> – カートに商品を追加し、購入しなかった訪問。</li><li><strong>アクション</strong> – メールアドレスが分かっている場合、放棄した商品を含むパーソナライズされたメールを送信します。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-couponcodeabuser.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-couponcodeabuser.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>    </a></figure><br> クーポンコード乱用者</td><td><ul><li><strong>ルール</strong> – 訪問が一度の訪問で特定の数以上のクーポンまたはプロモーションコードを使用しようとする。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-bades-couponcodestuffer.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-bades-couponcodestuffer.png\" class=\"noshadow\" width=\"79\" height=\"79\"/>    </a></figure><br> クーポンコード詰め込み者</td><td><ul><li><strong>ルール</strong> – 訪問がすべての訪問で特定の数以上のクーポンまたはプロモーションコードを成功裏に使用している。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-disappointedshopper.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-disappointedshopper.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>    </a></figure><br> がっかりしたショッパー</td><td><ul><li><strong>ルール</strong> – 現在在庫切れの商品を閲覧した訪問に割り当てます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-freetrialuser.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-freetrialuser.png\"         alt=\"Badges-Free-Trial-User.png\"         title=\"Badges-Free-Trial-User.png\" class=\"noshadow\" width=\"77\" height=\"77\"/>    </a></figure><br> 無料トライアルユーザー</td><td><ul><li><strong>ルール</strong> – 無料トライアルにサインアップした訪問に割り当てます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-frequenttraveler.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-frequenttraveler.png\" class=\"noshadow\" width=\"79\" height=\"78\"/>    </a></figure><br> 頻繁な旅行者</td><td><ul><li><strong>ルール</strong> – 訪問が特定の期間に特定の回数以上旅行したときに割り当てます。例：訪問が過去12週間で5回旅行した。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-knownvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-knownvisitor.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>    </a></figure><br> 既知の訪問</td><td><ul><li><strong>ルール</strong> – 訪問の重要な識別子をキャプチャしたときに割り当てます。例：顧客ID（クライアントのID）、顧客のメール、Facebook ID。これらの訪問は通常、メールやソーシャルメディアを通じてターゲットにされます。</li><li><strong>アクション</strong> – なし。ただし、選択したベンダーAPIで訪問がターゲットにできることを確認するために、オーディエンスで使用されます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-loyalvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-loyalvisitor.png\" class=\"noshadow\" width=\"77\" height=\"77\"/>    </a></figure><br> 忠実な訪問</td><td><ul><li><strong>ルール</strong> – サイトへの直接訪問が特定の回数に達した訪問に割り当てます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-newvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-newvisitor.png\" class=\"noshadow\" width=\"92\" height=\"92\"/>    </a></figure><br> 新規訪問</td><td><ul><li><strong>ルール</strong> – &ldquo;ライフタイム訪問数&quot;が1に等しいときに割り当てます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-purchaser.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-purchaser.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>    </a></figure><br> 購入者</td><td><ul><li><strong>ルール</strong> – コンバートした訪問。例：商品を購入した、またはサービスにサインアップした。</li><li><strong>アクション</strong> – 2週間後に再度購入を促すオファーを含むメールを送信する、または購入可能な関連アイテムを示すメールを送信する。例えば、訪問が野球のバットを買った場合、野球のバッグとバッティンググローブを提供します。</li><li><strong>アクション</strong> – 訪問をリターゲティングキャンペーンから削除して、不必要に再マーケティングされないようにします。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-recentvipvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-recentvipvisitor.png\" class=\"noshadow\" width=\"77\" height=\"78\"/>    </a></figure><br> 最近のVIP訪問</td><td><ul><li><strong>ルール</strong> – その90日間の購入価値が特定のドル額を超えたときに割り当てます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-salesearcher.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-salesearcher.png\" class=\"noshadow\" width=\"78\" height=\"79\"/>    </a></figure><br> セール検索者</td><td><ul><li><strong>ルール</strong> – 訪問が特定の数以上のセールページを閲覧したときに割り当てます。セールスカテゴリーであるか、セール中の商品であるかは問いません。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badge-browseabandoner.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badge-browseabandoner.png\" class=\"noshadow\" width=\"78\" height=\"77\"/>    </a></figure><br> 検索放棄者</td><td><ul><li><strong>ルール</strong> – 検索エンジンからサイトにアクセスし、共通のアクションを完了していない訪問。例えば、訪問中に少なくとも3ページを閲覧するなど。</li><li><strong>アクション</strong> – 検索したカテゴリーを特定し、ディスプレイ広告ベンダーで再ターゲティングします。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-siteresearcher.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-siteresearcher.png\" class=\"noshadow\" width=\"76\" height=\"76\"/>    </a></figure><br> サイトリサーチャー</td><td><ul><li><strong>ルール</strong> – 訪問がサイトを特定の回数以上訪れ、平均訪問時間が特定の分数以上の場合に割り当てます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-testuser.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-testuser.png\" class=\"noshadow\" width=\"78\" height=\"77\"/>    </a></figure><br> テストユーザー</td><td><ul><li><strong>ルール</strong> – &ldquo;test&quot;がURLに含まれている、またはデバッグクッキーが構成されている、またはテスト訪問を示す他の基準がある場合に割り当てます。</li><li>キャンペーンがライブになる前に、構成が正しいことを確認するために、オーディエンスとアクションを製品でテストできます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-unknownvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-unknownvisitor.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>    </a></figure><br> 未知の訪問</td><td><ul><li><strong>ルール</strong> – 訪問がまだウェブサイトで認証していない場合に割り当てます。認証とは必ずしもログインを意味するわけではありません。訪問がメールからサイトに来て、URLにメールが含まれている場合、訪問が誰であるかを特定し、彼らが&quot;認証&quot;したと判断します。</li><li><strong>アクション</strong> – 訪問に自分自身を特定するように促すモーダルを表示します。これらの訪問は、より一般的にディスプレイ広告を通じてターゲットにされます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-recentvipvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-recentvipvisitor.png\" class=\"noshadow\" width=\"77\" height=\"78\"/>    </a></figure><br> VIP訪問</td><td><ul><li><strong>ルール</strong> – ライフタイムの購入価値が特定のドル額に達したときに割り当てます。</li></ul></td></tr><tr><td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-windowshopper.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-windowshopper.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>    </a></figure><br> ウィンドウショッパー</td><td><ul><li><strong>ルール</strong> – サイトを頻繁に訪れるが購入しない訪問。例：過去7日間に3回サイトを訪れ、商品詳細ページを閲覧したり記事を読んだりしているが、商品を購入したりサービスにサインアップしたりしていない訪問。</li><li><strong>アクション</strong> – カテゴリーへの親和性を特定し、次のセッションのランディングページを変更して体験をパーソナライズします。</li></ul></td></tr></tbody></table>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/arrays/array-of-numbers/",
            "title": "数値の配列",
            "body":"<p>数値の配列属性は、訪問、ページビュー、購入イベントなどのブラウジングメトリクスの数値リストを保存します。</p><p>数値は小数または整数として保存されます。あなたのニーズに合ったタイプを選択してください：</p><ul><li><p><strong>小数（デフォルト）</strong></p><ul><li>小数値は0以上の小数桁を持つことができます。</li><li>例：<code>12</code>、<code>12.0</code>、<code>12.345</code></li><li>金額を表す属性に推奨。</li></ul></li><li><p><strong>整数</strong></p><ul><li>保存されるのは整数値のみです。</li><li>例：<code>12</code>、<code>-4</code>、<code>3214</code></li><li>数量、カウンター、スコアを表す数値属性に便利。</li></ul></li></ul><p>数値の配列は次のスコープで利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"         alt=\"数値の配列\"         title=\"数値の配列\"/>    </a></figure><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>数値の文字列表現（<code>0</code>、<code>123</code>、<code>12.95</code>）はその数値に変換されます。その他の非数値は無視されます。</p><h2 id=\"エンリッチメント\">エンリッチメント</h2><h3 id=\"数値の追加\">数値の追加</h3><p>このエンリッチメントは、数値を配列に追加します。追加される属性は、数値、iQ変数、またはオムニチャネル属性のみ可能です。例えば、最後の購入価格を<code>purchase_total_history</code>値配列に追加することができます。</p><p><strong>属性名</strong>：<code>purchase_total_history</code></p><ul><li><strong>開始値</strong>：<code>[12.95]</code></li><li><strong>エンリッチメント</strong>：<code>5.99</code></li><li><strong>結果の値</strong>：<code>[12.95, 5.99]</code></li></ul><h3 id=\"数値の配列の追加\">数値の配列の追加</h3><p>このエンリッチメントは、別の配列からすべての値を配列に追加します。追加される属性タイプは、数値の配列またはiQ変数のみ可能です。例えば、購入した商品の価格の配列をすべての購入商品の価格の配列に追加することができます。</p><p><strong>属性名</strong>：<code>purchased_products_history</code></p><ul><li><strong>開始値</strong>：<code>[24.99, 12.95]</code></li><li><strong>エンリッチメント</strong>：<code>[5.99, 10.00]</code></li><li><strong>結果の値</strong>：<code>[24.99, 12.95, 5.99, 10.00]</code></li></ul><h3 id=\"リセット\">リセット</h3><p>このエンリッチメントは、配列からすべての値を削除します。例えば、最後の購入アイテムを最後の購入の配列から削除することができます。</p><p><strong>属性名</strong>：<code>purchase_total_history</code></p><ul><li><strong>開始値</strong>：<code>[12.95, 5.99]</code></li><li><strong>結果の値</strong>：<code>[]</code></li></ul><h3 id=\"2つの配列の差分を数値の配列に構成\">2つの配列の差分を数値の配列に構成</h3><p>このエンリッチメントは、2つの配列を入力として取り、一方に存在し他方に存在しない値を探し、それらを配列に挿入します。この例では、<code>Gift Card Amounts</code>から<code>Gift Cards Purchased</code>にも存在しない値が結果の配列に追加されます。</p><p><strong>属性名</strong>：<code>gift_card_not_purchased</code></p><ul><li><strong>開始値</strong>：<code>[]</code></li><li><strong>エンリッチメント</strong>：  差分：<code>Gift Card Amounts</code> <code>[5.00, 10.00, 25.00, 50.00, 100.00, 250.00]</code> と <code>Gift Cards Purchased</code> <code>[25.00, 50.00]</code></li><li><strong>結果の値</strong>：<code>[5.00, 10.00, 100.00, 250.00]</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/number/",
            "title": "数値属性",
            "body":"<p>数値属性は、訪問数、ページビュー数、イベント数などのブラウジングメトリクスの数値を保存します。一般的な例としては、ライフタイムバリュー、注文合計取引、最終購入からの日数などがあります。</p><h2 id=\"仕組み\">仕組み</h2><p>数値は小数または整数として保存されます。あなたのニーズに合ったタイプを選択してください：</p><ul><li><strong>小数（デフォルト）</strong><ul><li>小数値はゼロ（0）以上の小数桁を持つことができます。</li><li>例：<code>12</code>、<code>12.0</code>、<code>12.345</code></li><li>小数値はJava Doubleクラスを使用します。詳細については、<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html\">Class Double</a>を参照してください。</li><li>通貨値を表す属性に推奨されます。</li></ul></li><li><strong>整数</strong><ul><li>整数値のみが保存されます。</li><li>例：<code>12</code>、<code>-4</code>、<code>3214</code></li><li>数量、カウンター、スコアを表す数値属性に便利です。</li></ul></li></ul><p>数値属性は次のスコープで利用可能です：イベント、訪問、訪問者。</p><figure><a class=\"slb\" href=\"/images/server-side/scope-3checks.png\"><img src=\"https://docs.tealium.com/images/server-side/scope-3checks.png\"/>    </a></figure><h3 id=\"サイズ制限\">サイズ制限</h3><p>数値属性のストレージ容量制限はありませんが、これらの属性は依然としてプロファイルの最大サイズに制限されます（暗号化と圧縮後の400 KB）。</p><h2 id=\"数値のエンリッチメント\">数値のエンリッチメント</h2><h3 id=\"数値の増減エンリッチメント\">数値の増減エンリッチメント</h3><p>このエンリッチメントは、正の値（増加）または負の値（減少）で数値を変更します。変更値は別の数値属性または定数値であることができます。</p><p>例えば、訪問者の注文のライフタイムトータルバリュー（LTV）を計算するために、このエンリッチメントを使用して<code>purchase</code>イベントが発生するたびに<code>order_total</code>属性の値で属性を増加させます。</p><p><strong>属性名</strong>：ライフタイムトータルバリュー</p><ul><li><strong>初期値</strong>：<code>121.78</code></li><li><strong>エンリッチメント対象</strong>：  order_total <code>220.00</code></li><li><strong>結果</strong>：<code>341.78</code></li></ul><h3 id=\"比率の設定\">比率の設定</h3><p>2つの数値の商を新しい比率数として設定します。</p><p>例えば、平均カートアイテム数を計算するために、このエンリッチメントを使用して、購入したカートアイテムの合計属性と完了した注文の合計属性の比率を設定します。</p><p><strong>属性名</strong>：平均カートアイテム数</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>：<br>購入したカートアイテムの合計: <code>48.00</code><br>完了した注文の合計: <code>3.00</code></li><li><strong>結果</strong>：<code>16.00</code></li></ul><h3 id=\"積の設定\">積の設定</h3><p>2つの数値の積を新しい数値として設定します。</p><p>例えば、<code>coupon_discount_amount</code>を計算するために、このエンリッチメントを使用して<code>order_subtotal</code>と<code>coupon_discount_percent</code>を掛け合わせます。</p><p><strong>属性名</strong>：<code>coupon_discount_amount</code></p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>：<br>order_subtotal: <code>42.00</code><br>coupon_discount_percent: <code>0.05</code></li><li><strong>結果</strong>：<code>2.10</code></li></ul><h3 id=\"差の設定\">差の設定</h3><p>2つの数値の差を新しい数値として設定します。</p><p><strong>属性名</strong>：<code>order_subtotal</code></p><ul><li><strong>初期値</strong>：<code>42.00 </code></li><li><strong>エンリッチメント対象</strong>：<br>order_subtotal: <code>42.00</code><br>coupon_discount_amount: <code>2.10</code></li><li><strong>結果</strong>：<code>39.90</code></li></ul><h3 id=\"合計の設定\">合計の設定</h3><p>2つの数値の合計に設定します。</p><p>例えば、<code>order_total</code>を<code>order_subtotal</code>と<code>order_tax_amount</code>の合計に設定します。</p><p><strong>属性名</strong>：<code>order_total</code></p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>：<br>order_subtotal: <code>39.90</code><br>order_tax_amount: <code>3.29</code></li><li><strong>結果</strong>：<code>43.19</code></li></ul><h3 id=\"数値の設定\">数値の設定</h3><p>数値を特定の数値に設定します。</p><p>例えば、<code>purchase</code>イベントが発生するたびに、最後の購入金額を<code>order_total</code>の値に設定します。</p><p><strong>属性名</strong>：最後の購入金額</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： order_total:<code>43.19</code></li><li><strong>結果</strong>：<code>43.19</code></li></ul><h3 id=\"2つの日付間の差の設定\">2つの日付間の差の設定</h3><p>2つのイベント間の経過時間を計算します。経過時間は以下のいずれかで表現できます：</p><ul><li>分</li><li>時間</li><li>日</li><li>週</li><li>月</li></ul><p>差は常に正の値として保存されるため、日付は任意の順序で設定できます。</p><p>例えば、最後の購入日と現在の訪問日との間の日数の差として、最後の購入からの日数を計算します。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>日付属性はUnixタイムスタンプとして保存されますが、これらの例では読みやすさのためにフォーマットされた日付を使用しています。</p><p><strong>属性名</strong>：最後の購入からの日数</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>：<br>最後の購入日: <code>&quot;2018/10/30&quot;</code><br>現在の訪問日: <code>&quot;2019/11/01&quot;</code></li><li><strong>結果</strong>：<code>367</code></li></ul><h3 id=\"タイムラインに基づく移動平均の設定\">タイムラインに基づく移動平均の設定</h3><p>移動平均は、時間経過とともに取得された数値の算術平均です。これらの値は、<a href=\"/ja/server-side/attributes/data-types/timeline/\">timeline</a>内のエントリとして収集される数値とtally](/ja/server-side/attributes/data-types/tally/)属性から来ます。タイムラインの有効期限が最終平均にどのエントリを考慮に入れるかを決定します。有効期限がない場合、それは単純な平均解です。</p><p><strong>属性名</strong>：平均注文値</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： <code>[20.00, 30.00, 40.00, 50.00]</code></li><li><strong>結果</strong>： <code>35.00</code></li></ul><h3 id=\"タイムラインに基づく移動合計の設定\">タイムラインに基づく移動合計の設定</h3><p>移動合計は、数値または<a href=\"/ja/server-side/attributes/data-types/tally/\">tally</a>属性の数値値の集計で、これらは<a href=\"/ja/server-side/attributes/data-types/timeline/\">timeline</a>内のエントリとして取得されます。タイムラインの有効期限が集計中にどのエントリを考慮に入れるかを決定します。</p><p><strong>属性名</strong>：合計注文値</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li><li><strong>結果</strong>： <code>150.00</code></li></ul><h3 id=\"タイムラインのエントリ数に数値を設定\">タイムラインのエントリ数に数値を設定</h3><p>数値をタイムラインのエントリ数に設定します。</p><p><strong>属性名</strong>：合計注文数</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li><li><strong>結果</strong>： <code>5.00</code></li></ul><h3 id=\"数値をtally値に設定\">数値をtally値に設定</h3><p>数値をtally内の特定の値に設定します。tally属性とtally内のエントリの名前を指定します。例えば、サイトカテゴリビューのtallyには&quot;Shoes&quot;というエントリがあるかもしれません。</p><p><strong>属性名</strong>：シューズカテゴリビューカウント</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： サイトカテゴリビュー: <code>{&quot;Shoes&quot;: 42}</code></li><li><strong>結果</strong>： <code>42</code></li></ul><h3 id=\"数値をtallyのエントリ数に設定\">数値をtallyのエントリ数に設定</h3><p>属性をtallyのエントリ数に設定します。例えば、サイトカテゴリビューのtallyには3つのエントリがあるかもしれません。</p><p><strong>属性名</strong>：閲覧したカテゴリ数</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>：</li></ul><pre tabindex=\"0\"><code>{    &#34;Shoes&#34;: 42,    &#34;Shirts&#34;: 11,    &#34;Pants&#34;: 8} </code></pre><ul><li><strong>結果</strong>： <code>3.00</code></li></ul><h3 id=\"文字列セットのアイテム数に数値を設定\">文字列セットのアイテム数に数値を設定</h3><p>数値を文字列セットのアイテム数に設定します。例えば、アクティブなブラウザタイプの文字列セットには3つのエントリがあるかもしれません。</p><p><strong>属性名</strong>：アクティブなブラウザタイプの数</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： <code>[&quot;Firefox&quot;, &quot;Safari&quot;, &quot;Chrome&quot;]</code></li><li><strong>結果</strong>： <code>3.00</code></li></ul><h3 id=\"タイムラインに基づくtallyの移動最大値に数値を設定\">タイムラインに基づくtallyの移動最大値に数値を設定</h3><p>数値を、タイムライン内で取得された別の数値の移動最大値に設定します。</p><p><strong>属性名</strong>：最高注文値</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li><li><strong>結果</strong>： <code>50.00</code></li></ul><h3 id=\"数値の変化に数値を設定\">数値の変化に数値を設定</h3><p>この属性を、最後のイベントからの別の属性との差に設定します。例えば、このエンリッチメントを使用して、前回の注文金額と現在の注文金額の差を取得します。注文値の変化という属性を設定するには、前回の注文から<code>order_subtotal</code>の変化を設定します。</p><p><strong>属性名</strong>：注文値の変化</p><ul><li><strong>初期値</strong>：<code>30.00 </code></li><li><strong>エンリッチメント対象</strong>： order_subtotal: <code>42.00</code></li><li><strong>結果</strong>： <code>12.00</code></li></ul><h3 id=\"日付の変化に数値を設定\">日付の変化に数値を設定</h3><p>この属性を、このイベントと最後のイベントの間の選択された値の変化に設定します。例えば、このエンリッチメントを使用して、購入が行われるたびに最後の購入日の日付属性の月数の変化を取得します。</p><p>日付の変化は以下のいずれかで表現できます：</p><ul><li>分</li><li>時間</li><li>日</li><li>週</li><li>月</li></ul><p><strong>属性名</strong>：最後の購入からの月数</p><ul><li><strong>初期値</strong>：</li><li><strong>エンリッチメント対象</strong>：<br>最後の購入日（最後のイベント）: <code>&quot;10/31/2019&quot;</code><br>最後の購入日（このイベント）: <code>&quot;12/31/2019&quot;</code></li><li><strong>結果</strong>： 2 (月)</li></ul><h3 id=\"配列内のアイテム数に設定\">配列内のアイテム数に設定</h3><p>配列内のアイテム数に設定します。例えば、カート内の商品数を保存するために、このエンリッチメントを使用して<code>cart_product_id</code>配列内のアイテム数を取得します。</p><p><strong>属性名</strong>：<code>num_cart_items</code></p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： product_id: <code>[&quot;prod123&quot;, &quot;prod456&quot;]</code></li><li><strong>結果</strong>： <code>2.00</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/date/",
            "title": "日付属性",
            "body":"<p>日付属性を使用して、最初の購入日、最後のチェックアウト日、最後の訪問日などの重要なタイムスタンプを保存します。</p><p>日付属性は次の範囲で利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/attribute-scopes-table-all.png\"><img src=\"https://docs.tealium.com/images/server-side/attribute-scopes-table-all.png\"         alt=\"attribute-scopes-table-all.png\"         title=\"attribute-scopes-table-all.png\" width=\"400\" height=\"110\"/>    </a></figure><h2 id=\"日付フォーマッター\">日付フォーマッター</h2><p>文字列属性を日付に変換するには、日付フォーマッターを使用します。日付形式パネルから文字列値に一致するタイムスタンプコンポーネントを選択します。例えば、&ldquo;01/31/2020&quot;のような文字列値は、&ldquo;MM/dd/yyyy&quot;の形式を使用して日付に変換できます。</p><p>日付と時間の文字列パターン：</p><pre tabindex=\"0\"><code>G 紀元表示（紀元前、紀元後）y 年（例：12または2012）。yyまたはyyyyを使用します。M 年の中の月。Mの数が形式の長さを決定します（例：MM、MMM、MMMMM）d 月の中の日。dの数が形式の長さを決定します（例：dまたはdd）h 日の中の時間、1-12（AM / PM）（通常はhh）H 日の中の時間、0-23（通常はHH）m 時間の中の分、0-59（通常はmm）s 分の中の秒、0-59（通常はss）S 秒の中のミリ秒、0-999（通常はSSS）a AM / PMマーカーz タイムゾーンZ RFC 822タイムゾーン&#39; テキスト区切りのエスケープ&#39; シングルクォート</code></pre><p>参考（例付き）：<a href=\"https://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html\">SimpleDateFormat Java Class</a></p><h2 id=\"日付のエンリッチメント\">日付のエンリッチメント</h2><h3 id=\"日付の取得\">日付の取得</h3><p>Capture Dateエンリッチメントは、イベント条件の時点での現在のタイムスタンプを属性に構成します。このエンリッチメントは、イベント、訪問、訪問の範囲で利用可能です。</p><p>例えば、最後の購入日を取得するには、購入イベントを識別するルールとこのエンリッチメントを使用します。</p><p><strong>属性名:</strong> 最後の購入日</p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメントされた値</strong>:</li><li><strong>結果の値</strong>: <code>1491233145706</code></li></ul><h3 id=\"日付の構成\">日付の構成</h3><p>Set Dateエンリッチメントは、属性を別の属性の値に構成します。もし他の属性が文字列であれば、<a href=\"#date-formatter\">Date Formatter</a>を使用してそれを日付に変換します。このエンリッチメントは、イベント、訪問、訪問の属性で利用可能です。</p><p><strong>属性名</strong>: 最後の購入日</p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメントされた値</strong>:| <code>1491233145706</code></li><li><strong>結果の値</strong>: <code>1491233145706</code></li></ul><h3 id=\"日付の削除\">日付の削除</h3><p>Remove Dateエンリッチメントは、日付属性の値を消去します。このエンリッチメントは、イベント、訪問、訪問の属性で利用可能です。</p><p><strong>属性名</strong>: 最後の訪問日</p><ul><li><strong>初期値</strong>: <code>1491233145706</code></li><li><strong>結果の値</strong>: <code>&quot;&quot;</code></li></ul><h3 id=\"日付の形式\">日付の形式</h3><p>Format Dateエンリッチメントは、入力値の予想される日付形式に基づいて値を構成します。&ldquo;TiQ変数&quot;もネイティブ属性タイプも存在しない場合に使用されます。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>このエンリッチメントはイベント属性のみで利用可能です。</p>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/set-of-strings/",
            "title": "文字列のセット属性",
            "body":"<h2 id=\"仕組み\">仕組み</h2><p>セット内の値は、訪問や訪問の回数に関係なく、一度だけ保存されます。文字列のセット属性は、最も一般的には、閲覧した商品カテゴリ、閲覧したページ、購入した商品に使用されます。</p><p>例：</p><table><thead><tr><th>属性名</th><th>値</th></tr></thead><tbody><tr><td>閲覧した商品カテゴリ</td><td>&ldquo;ホームインプルーブメント&rdquo;, &ldquo;エレクトロニクス&rdquo;, &ldquo;アパレル&rdquo;, &ldquo;キッチン&rdquo;</td></tr><tr><td>使用したブラウザ</td><td>&ldquo;Chrome&rdquo;, &ldquo;Safari&rdquo;</td></tr><tr><td>カートのアイテム</td><td>&ldquo;iPad&rdquo;, &ldquo;スクリーンプロテクター&rdquo;, &ldquo;ヘッドフォン&rdquo;</td></tr></tbody></table><p>文字列のセット属性は、次のスコープで利用可能です：訪問と訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"/>    </a></figure><p>文字列のセットには保存容量の制限はありませんが、これらの属性は依然としてプロファイルの最大サイズに制限されます（暗号化と圧縮後）。</p><h2 id=\"文字列のセットのエンリッチメント\">文字列のセットのエンリッチメント</h2><h3 id=\"文字列のセットに追加\">文字列のセットに追加</h3><p>文字列の値を文字列のセットに追加します。一意の文字列のみを追加します。</p><p><strong>属性名</strong>： <code>product_category</code></p><ul><li><strong>開始値</strong>：  <code>&quot;ホームインプルーブメント&quot;, &quot;エレクトロニクス&quot;, &quot;キッチン&quot;</code></li><li><strong>エンリッチメントされたもの</strong>： <code>&quot;アパレル&quot;, &quot;エレクトロニクス&quot;</code></li><li><strong>結果の値</strong>： <code>&quot;ホームインプルーブメント&quot;, &quot;エレクトロニクス&quot;, &quot;キッチン&quot;, &quot;アパレル&quot;</code></li></ul><p>結果は、&ldquo;エレクトロニクス&quot;アイテムを無視します。なぜなら、それはすでに文字列のセットに存在しているからです。</p><h3 id=\"配列を文字列のセットとして保存\">配列を文字列のセットとして保存</h3><p>このエンリッチメントは、文字列の配列属性からの値を文字列のセット属性に保存するために使用されます。新しいセットでは、配列内のすべての重複要素が無視され、一意の文字列のみが許可されます。</p><p><strong>属性名</strong>： <code>閲覧した商品カテゴリ</code></p><ul><li><strong>開始値</strong>：  <code>&quot;キッチン&quot;</code></li><li><strong>エンリッチメントされたもの</strong>： <code>[&quot;ホームインプルーブメント&quot;, &quot;エレクトロニクス&quot;, &quot;キッチン&quot;]</code></li><li><strong>結果の値</strong>： <code>&quot;ホームインプルーブメント&quot;, &quot;エレクトロニクス&quot;, &quot;キッチン&quot;</code></li></ul><h3 id=\"文字列のセットを文字列のセットで更新\">文字列のセットを文字列のセットで更新</h3><p>このエンリッチメントは、別の文字列のセット属性からの値を文字列のセットに追加します。例えば、訪問があなたから購入した商品カテゴリを追跡するために、&ldquo;購入したカテゴリ&quot;という名前の2つの文字列のセット属性を持つことがあります。一つは購入が発生したときにキャプチャするために訪問にスコープを持ち、もう一つはマスターセットを保存するために訪問にスコープを持ちます。</p><table><thead><tr><th><strong>訪問：購入したカテゴリ</strong></th><th><strong>訪問：購入したカテゴリ</strong></th></tr></thead><tbody><tr><td><code>&quot;エレクトロニクス&quot;</code></td><td><code>&quot;エレクトロニクス&quot;</code></td></tr><tr><td><code>&quot;キッチン&quot;, &quot;アパレル&quot;</code></td><td><code>&quot;エレクトロニクス&quot;, &quot;キッチン&quot;, &quot;アパレル&quot;</code></td></tr><tr><td><code>&quot;キッチン&quot;, &quot;エレクトロニクス&quot;</code></td><td><code>&quot;エレクトロニクス&quot;, &quot;キッチン&quot;, &quot;アパレル&quot;</code></td></tr></tbody></table><p>訪問にスコープを持つ文字列のセットは、毎回新しい値で上書きされますが、エンリッチメントはそれらの値を訪問にスコープを持つ文字列のセットにコピーし、マスターリストが拡大し、遭遇した各一意の値を保存します。</p><p><strong>属性名</strong>： <code>購入した商品カテゴリ</code></p><ul><li><strong>開始値</strong>：  <code>&quot;エレクトロニクス&quot;</code></li><li><strong>エンリッチメントされたもの</strong>： <code>&quot;ホームインプルーブメント&quot;, &quot;エレクトロニクス&quot;, &quot;キッチン&quot;</code></li><li><strong>結果の値</strong>： <code>&quot;エレクトロニクス&quot;, &quot;ホームインプルーブメント&quot;, &quot;キッチン&quot;</code></li></ul><h3 id=\"2つの文字列のセットの違い\">2つの文字列のセットの違い</h3><p>一つの文字列のセットから他の文字列のセットに現れないアイテムを含む新しい文字列のセット属性を作成します。例えば、顧客が閲覧したが購入しなかったカテゴリを見つけるために、&ldquo;閲覧したカテゴリ&quot;と&quot;購入したカテゴリ&quot;の違いを見つけるためにこのエンリッチメントを使用します。</p><p>例：</p><p><code>閲覧したカテゴリ</code>に存在し、<code>購入したカテゴリ</code>には存在しない値を見つける。</p><p><strong>属性名</strong>： <code>購入されなかった閲覧カテゴリ</code></p><ul><li><strong>開始値</strong>：</li><li><strong>エンリッチメントされたもの</strong>：  &ldquo;閲覧したカテゴリ&rdquo;: <code>&quot;ホームインプルーブメント&quot;, &quot;キッチン&quot;, &quot;ウィンドウズ&quot;</code> &ldquo;購入したカテゴリ&rdquo;: <code>&quot;ホームインプルーブメント&quot;</code></li><li><strong>結果の値</strong>： <code>&quot;キッチン&quot;, &quot;ウィンドウズ&quot;</code></li></ul><h3 id=\"文字列のセットの削除\">文字列のセットの削除</h3><p>一連の条件に基づいて文字列のセットを削除します。これはセットの削除と同等です。</p><p><strong>属性名</strong>： <code>product_category</code></p><ul><li><strong>開始値</strong>：  <code>&quot;ホームインプルーブメント&quot;, &quot;キッチン&quot;, &quot;ウィンドウズ&quot;</code></li><li><strong>結果の値</strong>：</li></ul><h3 id=\"文字列のセットを小文字にする\">文字列のセットを小文字にする</h3><p>一連の条件に基づいて文字列のセットを小文字にします。</p><p><strong>属性名</strong>： <code>product_category</code></p><ul><li><strong>開始値</strong>：  <code>&quot;ホームインプルーブメント&quot;, &quot;エレクトロニクス&quot;, &quot;キッチン&quot;</code></li><li><strong>結果の値</strong>： <code>&quot;home improvement&quot;, &quot;electronics&quot;, &quot;kitchen&quot;</code></li></ul><h3 id=\"トップ集計アイテムに構成\">トップ集計アイテムに構成</h3><p>集計から最も高い値のアイテムを使用して文字列のセットを作成します。例えば、最も閲覧された商品の3つを追跡するために、閲覧された商品の発生を追跡する集計属性からトップ3エントリをキャプチャする文字列のセットを作成します。</p><p><strong>属性名</strong>： <code>トップ3の閲覧商品</code></p><ul><li><strong>開始値</strong>：  &ndash;</li><li><strong>エンリッチメントされたもの</strong>： &ldquo;閲覧した商品&quot;のトップ3アイテム: <br> <code>{ &quot;AirPods Pro&quot; : 3 &quot;iPhone 10&quot; : 6 &quot;iPhone Case&quot; : 10 &quot;MacBook Pro&quot; : 1 &quot;iMac&quot; : 2 }</code></li><li><strong>結果の値</strong>： <code>&quot;iPhone Case&quot;, &quot;iPhone 10&quot;, &quot;AirPods Pro&quot;</code></li></ul><h3 id=\"ターゲット値以上の集計アイテムに構成\">ターゲット値以上の集計アイテムに構成</h3><p>構成した閾値を超える値を持つ集計からアイテムを使用して文字列のセットを作成します。例えば、20回以上閲覧された商品を追跡するために、閲覧された商品の発生を追跡する集計属性からエントリをキャプチャする文字列のセットを作成します。</p><p><strong>属性名</strong>： <code>20回以上閲覧された商品</code></p><ul><li><strong>開始値</strong>： &ndash;</li><li><strong>エンリッチメントされたもの</strong>：  &ldquo;閲覧した商品&quot;の中で20以上のもの: <br><code>{  &quot;AirPods Pro&quot; : 21,  &quot;iPhone 10&quot; : 35, &quot;iPhone Case&quot; : 12, &quot;MacBook Pro&quot; : 1 &quot;iMac&quot; : 2 }</code></li><li><strong>結果の値</strong>：  <code>&quot;iPhone 10&quot;, &quot;AirPods Pro&quot;</code></li></ul><h3 id=\"文字列のセットからエントリを削除\">文字列のセットからエントリを削除</h3><p>一連の条件に基づいて文字列のセットからエントリを削除します。例えば、購入されたために商品ウィッシュリストを追跡する文字列のセットから&quot;iPhone Case&quot;エントリを削除します。</p><p><strong>属性名</strong>： <code>商品ウィッシュリスト</code></p><ul><li><strong>開始値</strong>：  <code>&quot;iPhone 10&quot;, &quot;AirPods Pro&quot;, &quot;iPhone Case&quot;</code></li><li><strong>エンリッチメントされたもの</strong>：  <code>purchased_product</code>（値 &ldquo;iPhone Case&rdquo;）を削除</li><li><strong>結果の値</strong>： <code>&quot;iPhone 10&quot;, &quot;AirPods Pro&quot;</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/arrays/arrays/",
            "title": "文字列の配列",
            "body":"<h2 id=\"エンリッチメント\">エンリッチメント</h2><p>文字列の配列属性は、テキスト値のリストを保存します。</p><p>文字列の配列は次のスコープで利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"         alt=\"array of strings\"         title=\"array of strings\"/>    </a></figure><h3 id=\"文字列の追加\">文字列の追加</h3><p>このエンリッチメントは、文字列属性の値を配列に追加します。追加される属性は、文字列、iQ変数、またはオムニチャネル属性のみです。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Pants&quot;]</code></li><li><strong>エンリッチメント</strong>: <code>&quot;Shirts&quot;</code></li><li><strong>結果の値</strong>: <code>[&quot;Pants&quot;, &quot;Shirts&quot;]</code></li></ul><h3 id=\"文字列の配列の追加\">文字列の配列の追加</h3><p>このエンリッチメントは、別の配列からすべての値を配列に追加します。追加される属性は、文字列の配列またはiQ変数のみです。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Pants&quot;]</code></li><li><strong>エンリッチメント</strong>: <code>[&quot;Shirts&quot;, &quot;Shoes&quot;]</code></li><li><strong>結果の値</strong>: <code>[&quot;Pants&quot;, &quot;Shirts&quot;, &quot;Shoes&quot;]</code></li></ul><h3 id=\"二つの配列間の差分\">二つの配列間の差分</h3><p>このエンリッチメントは、二つの配列を入力として取り、第一の配列には存在するが第二の配列には存在しないすべての値を含む新しい配列を返します。この例では、<code>Wishlist Products</code>から<code>Purchased Products</code>にも存在しない値が結果の配列に追加されます。</p><p><strong>属性名</strong>: <code> Unpurchased Products</code></p><ul><li><strong>初期値</strong>: <code>[]</code></li><li><strong>エンリッチメント</strong>:<br>差分: Wishlist Products  <code>[&quot;Pants&quot;, &quot;Shirt&quot;, &quot;Shoes&quot;, &quot;Belt&quot;]</code> と Purchased Products <code>[&quot;Pants&quot;, &quot;Shirt&quot;]</code></li><li><strong>結果の値</strong>: <code>[&quot;Shoes&quot;, &quot;Belt&quot;]</code></li></ul><p>この例は、結果の属性値が置き換えられ、追加されず、最初の配列の重複した値が削除されることを示しています。</p><ul><li><strong>初期値</strong>: <code>[7, 8, 9]</code></li><li><strong>エンリッチメント</strong>:  差分: Some Numbers <code>[1, 3, 1, 2, 3]</code> と Some Other Numbers <code>[3]</code></li><li><strong>結果の値</strong>: <code>[1, 1, 2]</code></li></ul><h3 id=\"リセット\">リセット</h3><p>このエンリッチメントは、配列からすべての値を削除します。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Shoes&quot;, &quot;Belt&quot;]</code></li><li><strong>エンリッチメント</strong>:</li><li><strong>結果の値</strong>: <code>[]</code></li></ul><h3 id=\"小文字化\">小文字化</h3><p>このエンリッチメントは、配列内のすべての値を小文字にします。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Shoes&quot;, &quot;BELT&quot;]</code></li><li><strong>エンリッチメント</strong>:</li><li><strong>結果の値</strong>: <code>[&quot;shoes&quot;, &quot;belt&quot;]</code></li></ul><h3 id=\"文字列のセットに構成\">文字列のセットに構成</h3><p>文字列の配列を文字列のセットに構成します。このエンリッチメントは、配列内のすべての値を置き換えます。</p><p><strong>属性名</strong>: <code>Active Browser Types</code></p><ul><li><strong>初期値</strong>: <code>[&quot;IE&quot;]</code></li><li><strong>エンリッチメント</strong>: <code>[&quot;Chrome&quot; &quot;FireFox&quot;, &quot;Opera&quot;]</code></li><li><strong>結果の値</strong>: <code>[&quot;Chrome&quot; &quot;FireFox&quot;, &quot;Opera&quot;]</code></li></ul><h3 id=\"文字列のセットの追加\">文字列のセットの追加</h3><p>文字列のセットを文字列の配列に追加します。このエンリッチメントは、配列内の既存の値を保持するため、結果の値には重複する項目が存在する可能性があります。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Pants&quot;]</code></li><li><strong>エンリッチメント</strong>: <code>[&quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li><li><strong>結果の値</strong>: <code>[&quot;Pants&quot;, &quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li></ul><h3 id=\"配列から文字列の削除\">配列から文字列の削除</h3><p>削除する文字列の最初、最後、またはすべてのインスタンスを指定します。このエンリッチメントは、削除する項目のすべてのインスタンスを配列から削除します。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Pants&quot;, &quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li><li><strong>エンリッチメント</strong>: <code>&quot;Pants&quot;</code></li><li><strong>結果の値</strong>: <code>[&quot;Shoes&quot;, &quot;Ties&quot;]</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/string/",
            "title": "文字列属性",
            "body":"<p>例えば、文字列は、名前や郵便番号などの顧客情報、注文IDや配送方法などの注文情報、サイトセクションやサイト言語などのサイト情報に使用されます。</p><p>文字列属性は次のスコープで利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/attribute-scopes-table-all.png\"><img src=\"https://docs.tealium.com/images/server-side/attribute-scopes-table-all.png\"         alt=\"attribute-scopes-table-all.png\"         title=\"attribute-scopes-table-all.png\"/>    </a></figure><h2 id=\"サイズ制限\">サイズ制限</h2><p>EventStreamの文字列属性は最大長が1,500文字です。この制限を超えると、文字列は1,500文字に切り捨てられます。</p><p>AudienceStreamの文字列属性の値は最大長が1,000文字です。エンリッチメントにより1,000文字を超える文字列が生成された場合、その値は保存されません。</p><h2 id=\"文字列のエンリッチメント\">文字列のエンリッチメント</h2><p>以下のエンリッチメントが文字列属性に利用可能です。</p><h3 id=\"文字列の構成\">文字列の構成</h3><p>このエンリッチメントは、文字列属性の値を構成します。これは、あなたが提供する定数値または別の文字列属性の値から構成することができます。ソース値は文字列、iQ変数、またはOmnichannel属性のみ可能です。</p><p><strong>属性名</strong>: <code>customer_type</code></p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメント</strong>: <code>&quot;unknown&quot;</code></li><li><strong>結果の値</strong>: <code>&quot;unknown&quot;</code></li></ul><h3 id=\"文字列の分割\">文字列の分割</h3><p>このエンリッチメントでは、分布パーセントに基づいて複数の値を構成することができます。構成する各値にはパーセンテージ構成もあります。複数の値/パーセンテージエントリが存在することができますが、分布は合計で100%でなければなりません。分布はランダムな数値生成に基づいているため、小さなサンプルでは分布が一致しない場合がありますが、より多くの値が割り当てられるにつれて分布比率はより正確になります。ソース値は文字列、iQ変数、またはOmnichannel属性のみ可能です。</p><p>この例では、属性名<code>test_group</code>を使用して、ユーザーを&quot;GroupA&quot;と&quot;GroupB&quot;という2つの等しいグループ（50/50）に分けます。この属性は、各グループに関連する活動を識別するために使用できます。</p><p><strong>属性名</strong>: <code>test_group</code></p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>結果の値</strong>: 文字列の人口の<code>50%</code>に対して文字列の値を<code>&quot;GroupA&quot;</code>に構成<br> 文字列の人口の<code>50%</code>に対して文字列の値を<code>&quot;GroupB&quot;</code>に構成</li></ul><p>参照：<a href=\"https://support.tealiumiq.com/en/support/solutions/articles/36000363487-enrichment-example-split-string\">エンリッチメント例：文字列の分割</a></p><h3 id=\"文字列の削除\">文字列の削除</h3><p>このエンリッチメントは、属性から全ての値を削除します。</p><ul><li><strong>初期値</strong>: <code>&quot;Jane Smith&quot;</code></li><li><strong>結果の値</strong>: <code>&quot;&quot;</code></li></ul><h3 id=\"文字列の小文字化\">文字列の小文字化</h3><p>このエンリッチメントは、文字列属性の現在の値を小文字にします。</p><p><strong>属性名</strong>: <code>email_address</code></p><ul><li><strong>初期値</strong>: <code>&quot;First.Last@Example.com&quot;</code></li><li><strong>結果の値</strong>: <code>&quot;first.last@example.com&quot;</code></li></ul><h3 id=\"属性の結合\">属性の結合</h3><p>このエンリッチメントは、デリミタを使用して複数の値を結合し、単一のテキスト値を形成します。デリミタは1文字以上であることができます。例えば、<code>site_section</code>、<code>page_category</code>、その他のページレベルの属性を組み合わせてページ階層値を作成することができます。</p><p><strong>属性名</strong>: <code>page_path</code></p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメント</strong>:<br>属性1: <code>site_region=&quot;en-us&quot;</code><br>属性2: <code>site_section=&quot;Electronics&quot;</code><br>属性3: <code>category_name=&quot;Tablets&quot;</code><br>デリミタ: <code>&quot;:&quot;</code></li><li><strong>結果の値</strong>: <code>&quot;en-us:Electronics:Tablets&quot;</code></li></ul><h3 id=\"文字列を日付に構成\">文字列を日付に構成</h3><p>このエンリッチメントは、文字列属性の値を日付に変換し、カスタムフォーマットを許可します（<a href=\"/ja/server-side/attributes/data-types/date/\">日付フォーマッターについて詳しく学ぶ</a>）。ソース値は日付、文字列、iQ変数、またはファイルインポート属性であることができます。</p><p><strong>属性名</strong>: <code>last_purchase_date</code></p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメント</strong>: フォーマットが<code>&quot;yyy-MM-dd&quot;</code>の最終ログイン日</li><li><strong>結果の値</strong>: <code>&quot;2019-12-31&quot;</code></li></ul>"
        }  

    ]
}
