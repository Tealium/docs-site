
{
    "kind": "term",
    "name": "iq_tabs_consent_integrations",
    "count": 9,
    "items": [

    
        {
            "weight": "115",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-register/",
            "title": "Tealium同意登録",
            "body": "<p>Tealium同意登録は、<a href=\"/ja/iq-tag-management/consent/consent-integrations/about/\">Tealium iQ Consent Integrations</a>と<a href=\"/ja/iq-tag-management/consent/consent-management/about/\">Consent Manager</a>がウェブサイトのコード全体で同意信号を公開するために使用されます。また、Google同意モードタグがこれらの信号に直接アクセスし、適切な反応を可能にします。</p>\n<h2 id=\"主な特徴\">主な特徴</h2>\n<ul>\n<li><strong>ユニバーサル同意イベント</strong>: 最新のConsent Manager（<code>cmGeneral</code>テンプレートv3.1.0から）とConsent Integrations（フレームワークテンプレートv1.2.0から）は、同意構成がロードされたり更新されたりしたときにイベントを発行するために同意登録を使用します。これらの変更は、<code>window.tealiumConsentRegister</code>オブジェクトのページ全体でアクセス可能です。詳細については、<a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\">MDN Web Docs: イベントの紹介</a>を参照してください。</li>\n<li><strong>すべての同意信号のサポート</strong>: <code>implicit</code>と<code>explicit</code>の両方の同意信号を発行し、保持します。</li>\n<li><strong>イベントのリスニング</strong>: ページ上の任意のタグやスクリプトは、<code>consent_loaded</code>と<code>consent_changed</code>イベントをリッスンできます。これにより、同意ステータスの変更に基づくレスポンシブなアクションが可能になります。詳細については、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\">MDN Web Docs: EventTarget addEventListener() method</a>を参照してください。</li>\n<li><strong>拡張のための堅固な基盤</strong>: Tealium同意登録は、高度なカスタマイズオプションを提供し、将来の新機能の追加を効率化する新しい堅固なシステムを導入します。</li>\n</ul>\n<h2 id=\"仕組み\">仕組み</h2>\n<p>Tealium同意登録は、同意決定をウェブサイトのコード全体で共有することにより、同意管理を改善します。これにより、Google同意モードなどの機能がこれらの決定にアクセスし、適切なアクションを取ることが可能になります。同意信号の標準化レイヤーとして機能し、標準化された同意信号をウェブページで簡単に利用できるようにします。</p>\n<h2 id=\"google同意モード\">Google同意モード</h2>\n<p>必要な背景と文脈については、<a href=\"/ja/iq-tag-management/consent/google-consent-mode/\">Google同意モード</a>を参照してください。Googleタグをページに統合する適切なタイミングと方法については、リーダーシップと法務チームと相談することが重要です。</p>\n<h3 id=\"前提条件\">前提条件</h3>\n<ul>\n<li>CMPから既存の同意モード機能を無効化して、競合を防ぎます。</li>\n<li>使用ケースに基づいて、Consent IntegrationsフレームワークまたはConsent Manager <code>cmGeneral</code>テンプレートの最新バージョンに更新します。</li>\n<li>同意モードマッピングのためのJavaScript拡張を追加します。詳細については、<a href=\"/ja/iq-tag-management/consent/google-consent-mode/#consent-purpose-mapping\">同意目的マッピング</a>を参照してください。</li>\n<li><a href=\"/ja/client-side-tags/google-consent-mode-tag/\">Google同意モードタグ</a>をインストールします。同意目的マッピング拡張からの変数名を使用する場合、追加のマッピングは必要ありません。</li>\n<li>同意モードタグ（および関連するすべてのGoogleタグ）を適切にカテゴライズします。高度な同意モードを実装している場合は、常に発火が許可されていることを確認します。また、組織が取るアプローチに応じて、適切な同意がある場合にのみ発火が許可されていることを確認します。</li>\n</ul>\n<h2 id=\"高度な使用例\">高度な使用例</h2>\n<h3 id=\"同意決定へのアクセス\">同意決定へのアクセス</h3>\n<p><code>window.tealiumConsentRegister.currentDecision</code>オブジェクトは、ウェブページ上の現在の同意決定に直接アクセスすることを可能にします。これにより、以下のようなカスタムアクションの実装が簡素化されます：</p>\n<ul>\n<li>ベンダーにオプトアウトイベントを送信して、オーディエンスからの削除と完全なダウンストリームの無効化を可能にします。</li>\n<li>Tealium iQ拡張を使用して、CMPが提供するものの上に同意ログの追加レイヤーを追加します。</li>\n<li>同意の変更を追跡し、JavaScript API呼び出しを通じて現在の決定にアクセスを可能にします。</li>\n</ul>\n<p>Consent IntegrationsとConsent Managerの場合、配列内の目的IDは、特定の構成ごとに異なります。</p>\n<pre tabindex=\"0\"><code>// 現在の決定を取得する\nvar currentDecision = window.tealiumConsentRegister.currentDecision\n\n// 現在のページがロードされてから登録されたすべての決定を取得する\nvar allDecisionsOnThisPage = window.tealiumConsentRegister.decisions\n</code></pre><p><strong>OneTrustを使用したConsent Integrationsの例</strong></p>\n<p>この例では、オプトインモデル（暗黙の決定）から始め、説明のためにオプトインとオプトアウトを行います。</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-and-consent-integrations.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-and-consent-integrations.png\"\n         alt=\"OneTrustを使用したConsent Integrationsの例\"\n         title=\"OneTrustを使用したConsent Integrationsの例\"/>\n    </a>\n</figure>\n<h3 id=\"同意の変更を監視する\">同意の変更を監視する</h3>\n<p>同意登録は、<code>implicit</code>または<code>explicit</code>の同意信号が初めてページ上で検出されたとき、または同意決定が更新されたときにイベントを発行します。</p>\n<pre tabindex=\"0\"><code>// 同意の変更を表面化するための例のイベントリスナーを構成する\n\n// ページコードごとに一度実行できるように実装できます - 使用ケースに応じてPre LoaderまたはDOM Readyを使用できます\nwindow.addEventListener(&#39;consent_loaded&#39;, (event) =&gt; {\n  console.log(&#39;Consent loaded:&#39;, event.detail.decision);\n});\n\nwindow.addEventListener(&#39;consent_updated&#39;, (event) =&gt; {\n  console.log(&#39;Consent updated:&#39;, event.detail.decision);\n});\n</code></pre><p><strong>初回ランディングで欧州ユーザーがオプトインするConsent Managerの例</strong></p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-and-consent-manager.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-and-consent-manager.png\"\n         alt=\"Consent Managerの例\"\n         title=\"Consent Managerの例\"/>\n    </a>\n</figure>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>透明性のため、これらの決定には常に<code>always_on</code>カテゴリが含まれます。なぜなら、<code>omitted</code>タグは常に許可されているからです。</p>\n<h2 id=\"同意イベントとリスナーのフローダイアグラム\">同意イベントとリスナーのフローダイアグラム</h2>\n<p>新しいイベントとリスナーを示すフローの簡略化された概要。</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-flow.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-flow.png\"\n         alt=\"Consent Integrations decision flow\"\n         title=\"Consent Integrations decision flow\" width=\"1500\" height=\"2000\"/>\n    </a>\n</figure>\n<h2 id=\"tealium同意登録の抑制\">Tealium同意登録の抑制</h2>\n<p>Pre Loader拡張で<code>suppressConsentRegister</code>フラグを構成することで、同意登録を抑制できます。</p>\n<p>同意登録を抑制するには、Pre LoaderスコープのJavaScript Code Extensionに以下のコードを追加します：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-javascript\" data-lang=\"javascript\"><span style=\"display:flex;\"><span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {};\n</span></span><span style=\"display:flex;\"><span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">suppressConsentRegister</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span></code></pre></div><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>この構成は慎重に使用してください。なぜなら、これは<strong>すべて</strong>の同意登録機能を抑制します。</p>\n"
        }  

    , 
        {
            "weight": "120",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/google-consent-mode/",
            "title": "Google同意モード",
            "body": "<p>Google同意モードは、データ収集のためのユーザー同意を管理するための2つのアプローチを提供します：<strong>基本的な同意モード</strong>と<strong>高度な同意モード</strong>。これらのモードを理解することは、データプライバシー規制の遵守とデータ収集戦略の最適化にとって重要です。</p>\n<ul>\n<li>\n<p><strong>基本的な同意モード</strong>：ユーザーの同意が得られない場合、タグとコネクタアクションがブロックされる従来のアプローチです。これにより、同意なしに個人を特定可能な情報（PII）を含むデータの無許可収集が防止されます。</p>\n</li>\n<li>\n<p><strong>高度な同意モード</strong>：このアプローチは、同意の状態に関係なくGoogleのタグをロードし、ユーザーの同意決定をGoogleに通知することを提案します。その後、タグは以下のいずれかの方法で適応します：</p>\n<ul>\n<li>トラッキングに同意していないユーザーから匿名データを収集するためのクッキーレスエンドポイントを使用します。</li>\n<li>同意を提供したユーザーに対しては、標準エンドポイントを使用します。</li>\n</ul>\n<p>この高度な戦略は、PIIの使用に対するユーザーの同意を尊重しつつ、分析と広告のコンバージョンのためのデータ収集を最大化することを目指しています。</p>\n</li>\n</ul>\n<p>同意なしでのデータ収集をブロックする（基本）か、標準トラッキングに同意していない訪問の匿名データを収集するためのGoogleの方法を採用する（高度）か、どちらの同意モードがあなたのポリシーに合致するかを決定するためには、法務チームやリーダーシップチームと相談することが重要です。</p>\n<p>詳細については、<a href=\"https://support.google.com/google-ads/answer/10000067\">Google Ads Help: About consent mode</a>を参照してください。</p>\n<h2 id=\"使い方\">使い方</h2>\n<p>Google同意モードを実装するには、同意選択をGoogle同意モード構成にマッピングし、デフォルトの同意構成とあなたの同意管理プラットフォーム（CMP）からのカテゴリマッピングを持つ<a href=\"/ja/client-side-tags/google-consent-mode-tag/\">Google Consent Mode tag</a>を構成するためのJavaScript Code拡張機能を追加します。訪問が同意選択を行うと、Google同意モードタグはこれらの構成をGoogleタグに通知し、それが適切なデータ収集エンドポイント（デフォルトの収集エンドポイントまたはクッキーレスエンドポイント）を選択してデータをGoogleに送信します。</p>\n<p>基本的な同意モードと高度な同意モードの両方で、Google Consent Modeタグは自身でデータを送信しないため、常に発火させることができます。代わりに、他のタグが反応するための信号を提供します。</p>\n<h2 id=\"同意目的のマッピング\">同意目的のマッピング</h2>\n<p>エンドユーザーの同意選択をGoogle同意モード構成にマッピングするには、JavaScript Code拡張機能が必要です。この拡張機能を使用して、さまざまな目的やベンダーに対するエンドユーザーの現在の同意決定をキャプチャし、対応するGoogle同意モードの目的や構成に<code>granted</code>または<code>denied</code>（または特定のシナリオで<code>true</code> / <code>false</code>）のステータスを割り当てます。</p>\n<h3 id=\"javascript拡張機能のテンプレート\">JavaScript拡張機能のテンプレート</h3>\n<p>JavaScript拡張機能を構成するには、以下のテンプレートコードを使用します。これはロードルールの後に実行され、常に実行するように構成されます：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// After Load Rules - Run Always\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">consent_decision</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">tealiumConsentRegister</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tealiumConsentRegister</span>.<span style=\"color:#a6e22e\">currentDecision</span>) <span style=\"color:#f92672\">||</span> [];\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ad_storage_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ad_user_data_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_analytics_storage_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ad_personalization_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ads_data_redaction</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;true&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;false&#39;</span>;\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_url_passthrough</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;true&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;false&#39;</span>;\n</span></span></code></pre></div><p><code>&lt;your-logic-here&gt;</code>を、ユーザーの同意に基づいて<code>granted</code>または<code>denied</code>、<code>true</code>または<code>false</code>のいずれかに評価される条件で置き換えます。</p>\n<h3 id=\"例\">例</h3>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>あなたの実装はあなたの同意構成によって異なります。</p>\n<h4 id=\"consent-managerの例\">Consent Managerの例</h4>\n<p>Consent Managerを使用している場合、同意状態を決定するロジックは次のようになるかもしれません：</p>\n<pre tabindex=\"0\"><code>// After Load Rules - Run Always\nb.consent_decision = (tealiumConsentRegister &amp;&amp; tealiumConsentRegister.currentDecision) || [];\nb.google_ad_storage_consent = b.consent_decision.indexOf(&#39;display_ads&#39;) !== -1  ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ad_user_data_consent = b.consent_decision.indexOf(&#39;personalization&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_analytics_storage_consent = b.consent_decision.indexOf(&#39;analytics&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ad_personalization_consent = b.consent_decision.indexOf(&#39;personalization&#39;) !== -1 &amp;&amp; b.consent_decision.indexOf(&#39;display_ads&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ads_data_redaction = b.consent_decision.indexOf(&#39;personalization&#39;) === -1 || b.consent_decision.indexOf(&#39;display_ads&#39;) === -1 ? &#39;true&#39; : &#39;false&#39;;\nb.google_url_passthrough = b.consent_decision.indexOf(&#39;personalization&#39;) !== -1 ? &#39;true&#39; : &#39;false&#39;;\n</code></pre><h4 id=\"onetrustとのconsent-integrationsの例\">OneTrustとのConsent Integrationsの例</h4>\n<p>Consent IntegrationsとOneTrustを使用している場合、ロジックは次のようになるかもしれません：</p>\n<pre tabindex=\"0\"><code>// After Load Rules - Run Always\nb.consent_decision = (tealiumConsentRegister &amp;&amp; tealiumConsentRegister.currentDecision) || [];\nb.google_ad_storage_consent = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1  ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ad_user_data_consent = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_analytics_storage_consent = b.consent_decision.indexOf(&#39;C0001&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ad_personalization_consent = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1 &amp;&amp; b.consent_decision.indexOf(&#39;C0003&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ads_data_redaction = b.consent_decision.indexOf(&#39;C0004&#39;) === -1 || b.consent_decision.indexOf(&#39;C0003&#39;) === -1 ? &#39;true&#39; : &#39;false&#39;;\nb.google_url_passthrough = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1 ? &#39;true&#39; : &#39;false&#39;;\n</code></pre><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>これらの正確な変数名を使用する場合、追加のマッピングは必要ありません。Google同意モードタグの最新バージョンは、デフォルトでこれらの変数を使用します。</p>\n<h3 id=\"拡張機能の同意パラメータの選択\">拡張機能の同意パラメータの選択</h3>\n<p>JavaScript拡張機能で使用する同意パラメータを特定するには、次の手順を実行します：</p>\n<ol>\n<li>\n<p>ブラウザのクッキーとキャッシュをクリアします。</p>\n</li>\n<li>\n<p>最新のConsent ManagerまたはConsent Integrationsテンプレートがアクティブなあなたのウェブサイトまたはステージング環境を訪れます。</p>\n</li>\n<li>\n<p>オプトインモデル（GDPRスタイル）を使用している場合、同意ダイアログですべてのトラッキングを受け入れます。</p>\n</li>\n<li>\n<p>ブラウザの開発者ツールを開き、コンソールに移動します。</p>\n</li>\n<li>\n<p><code>TealiumConsentRegister</code>オブジェクトを表示するには、<code>tealiumConsentRegister</code>を入力します。このオブジェクトには<code>currentDecision</code>と<code>decisions</code>の配列が含まれています。<code>currentDecision</code>配列には、現在許可されている目的が含まれています。</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-and-consent-integrations.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-and-consent-integrations.png\"\n             alt=\"OneTrustを使用したConsent Integrationsの例\"\n             title=\"OneTrustを使用したConsent Integrationsの例\"/>\n        </a>\n    </figure>\n</li>\n</ol>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i><code>currentDecision</code>オブジェクトは、あなたのロジックで使用可能な同意オプションを<code>b.consent_decision.indexOf('&lt;Value to change&gt;')</code>でリストします。</p>\n"
        }  

    , 
        {
            "weight": "465",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/about/",
            "title": "同意統合について",
            "body": "<p>新しいConsent Enforcement Frameworkは、Tealium iQ Consent Integrationsの主要な機能であり、Tealium iQ Tag Managementの外部でキャプチャされた同意信号の強力で信頼性の高い強制を可能にします。この機能は、顧客の同意が得られないか曖昧な場合にトラッキングをブロックします。</p>\n<p>Tealium iQ Consent Integrationsは、サポートされている同意管理プラットフォーム（CMP）に対して、オプトイン（GDPRスタイル）とオプトアウト（CCPAスタイル）の強制パターンの両方を提供します。統合は、ほとんどのCMPまたはカスタムソリューションをサポートするテンプレートの形式で記述することができます。</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Tealium iQ Consent Integrationsは、最新のutagバージョン4.49に依存しています。以前のバージョンでサポートを有効にするには、<strong>uTag Loader</strong>テンプレートを編集し、<code>##UTGEN##</code>publish engine flagの下に<code>##UTCM##</code>を追加します。</p>\n<p>以下の用語は、同意統合フレームワークに関連しています：</p>\n<ul>\n<li><strong>目的</strong> - あなたのウェブサイトのユーザーが同意（または同意を拒否）できる特定のデータ使用目的。</li>\n<li><strong>目的グループ</strong> - 目的のリスト。タグが割り当てられる同意目的のグループの形での強制ポリシーの表現。</li>\n<li><strong>免除</strong> - 強制が必要ない場合と、同意の決定に基づいてタグをブロックする必要がない場合。強制免除は、同意統合強制ルールが適用されない場合の動作とは異なります。明示的な免除がない限り、または一致する同意統合と適切な同意決定がない限り、タグは発火することは許可されません。</li>\n<li><strong>強制ルール</strong> - 同意統合または免除を強制するタイミングを決定するルール。</li>\n<li><strong>同意決定</strong> - 同意された目的の配列。同意決定は<code>type</code>属性で決定され、ユーザーがアクティブな決定を下したか（<code>explicit</code>）、下さなかったか（<code>implicit</code>）により、<code>explicit</code>または<code>implicit</code>のいずれかになります。</li>\n<li><strong>暗黙の決定</strong> - ユーザーの行動から推測される決定。サイトを訪問することで、ユーザーはサイトのプライバシーポリシーで説明されている必要なタグに同意します。ユーザーは自分のデータの販売に反対することができますが、デフォルトではこれが有効になっています（暗黙の&rsquo;それはOK、私のデータを共有/販売する&rsquo;決定があります）。</li>\n<li><strong>明示的な決定</strong> - ユーザーによる明確で正確なトラッキングへの同意決定。</li>\n<li><strong>統合</strong> 特定のCMPから同意決定をキャプチャする機能と構成（事前ロードまたはカスタム）のセット。統合は目的グループに関連付けられています。</li>\n</ul>\n<h2 id=\"仕組み\">仕組み</h2>\n<p>Tealium iQ Consent Integrationsを使用すると、サポートされている非Tealiumの同意管理プラットフォームと統合できます。あなたのCMPは、必要に応じてエンドユーザーに目的ベースの同意を求め、そのユーザーの同意決定をキャプチャして保存します。統合がアクティブな場合、タグは目的グループ内の目的に割り当てられる必要があります。目的に同意されると、その目的に割り当てられたタグがトリガーされます。</p>\n<p>各同意統合は、基礎となるフレームワークに、単一のCMPとどのように通信するかを指示します。一度にアクティブにできる統合は1つだけです。ただし、必要に応じて<strong>強制ルール</strong>を使用して、複数のアクティブな統合を条件付きで適用し、競合を避けることができます。</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>ページにCMPを注入するタグは、Tealium iQ Consent Integrationと互換性がありません。統合は、タグがロードされる前にCMPからの信号を必要とします。Consent IntegrationsとあなたのCMPを統合するには、Pre LoaderまたはDOM Ready拡張機能を使用するか、CMPをTealium iQの外部のページに追加します。</p>\n<p>Tealium iQダッシュボードでサポートされているCMPとの統合を構成するか、<strong>カスタムテンプレート</strong>を編集してカスタム統合を作成することができます。</p>\n<h2 id=\"サポートされている統合\">サポートされている統合</h2>\n<p>現在サポートされている統合の完全なリストについては、<a href=\"/ja/iq-tag-management/consent/consent-integrations/supported-vendors/\">Supported Vendor Integrations</a>を参照してください。</p>\n<h2 id=\"タグの再発火\">タグの再発火</h2>\n<p>各タグには、<strong>Map Tags</strong>画面で<strong>Tag Refire</strong>スイッチがあります：</p>\n<figure><a class=\"slb\" href=\"/images/early-access/map-tags.png\"><img src=\"https://docs.tealium.com/images/early-access/map-tags.png\"\n         alt=\"map_tags.png\"\n         title=\"map_tags.png\" width=\"790\" height=\"417\"/>\n    </a>\n</figure>\n<p>このオプションを有効にすると、タグは各ユーザーアクションごとに最大2回トリガーされます（一度は暗黙の決定で、一度は明示的な決定で）。マップされた目的が同意されていない場合、タグはトリガーされません。</p>\n<p>ほとんどのタグは、これらのケースのそれぞれで同意がある場合、再度トリガーする必要はありません。タグを2回トリガーすると、ダブルトラッキングが発生する可能性があり、これは避けるべきです。</p>\n<p>サーバーサイドコネクタ（特にイベントコネクタ）を持つアカウントは、Tealium Collectタグを再発火させて、<code>tci.purposes_with_consent_unprocessed</code>属性を使用することで利益を得ることができます。これにより、同じイベントに対してサーバーサイドコネクタが再発火されないことを確認します。<code>tci.purposes_with_consent_unprocessed</code>属性を使用すると、サーバーサイドコネクタが重複せずに可能な限り迅速にトリガーできます。</p>\n<h2 id=\"サーバーサイド属性---consent-integrationsとcollectの使用\">サーバーサイド属性 - Consent IntegrationsとCollectの使用</h2>\n<p>Tealium Collectは、他のすべてのタグと同様に、同意された目的にマップする必要があります。ただし、<code>refiringAllowed</code>オプションにより、新しい決定でタグを再発火することができます。このプロセスは、タグがさまざまなサーバーサイド目的に使用されており、利用可能なサーバーサイドフィルタとロジックが使用されて、信号が適切に処理されるだけであり、再発火を許可することを示しています。</p>\n<p>使用するサーバーサイドツールによりますが、Tealium Collectは、各イベントに対して以下のイベントレベル属性でトリガーされます：</p>\n<ul>\n<li><code>tci.purposes_with_consent_unprocessed</code>（再発火あり）</li>\n<li><code>tci.purposes_with_consent_all</code>（再発火なし）</li>\n</ul>\n<h2 id=\"tealium-iq内での同意決定のアクセス\">Tealium iQ内での同意決定のアクセス</h2>\n<p>同意決定は、各イベントのデータレイヤーに追加されます。これらの変数はタグで使用でき、Tealium Collectタグによって自動的に送信されますが、拡張機能では直接利用できません。</p>\n<ul>\n<li><code>tci.consent_type</code> - 同意決定のタイプ（<code>implicit</code>または<code>explicit</code>）。</li>\n<li><code>tci.purposes_with_consent_all</code> - 処理済みと未処理の両方の同意された目的の完全な配列。</li>\n<li><code>tci.purposes_with_consent_processed</code> - 処理済みの同意された目的の配列。</li>\n<li><code>tci.purposes_with_consent_unprocessed</code> - 未処理の同意された目的の配列。</li>\n</ul>\n<h3 id=\"拡張機能からの同意決定へのアクセス\">拡張機能からの同意決定へのアクセス</h3>\n<p>拡張機能で現在の同意決定オブジェクトにアクセスするには、<code>tealiumCmpIntegration.GetCurrentConsentDecision()</code>メソッドを使用します。</p>\n<p>次のコマンドは、現在の同意決定を<code>b</code>オブジェクトに追加します：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">current_consent_decision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">getCurrentConsentDecision</span>()\n</span></span></code></pre></div><h2 id=\"javascriptコンソールの使用\">JavaScriptコンソールの使用</h2>\n<p>アクティブな場合、utag.js（Tealium iQ）が実装されているページのJavaScriptコンソールで同意統合と対話できます。JavaScriptコンソールを使用すると、CMPから取得される現在の同意決定を取得できます。同意決定はキャッシュされず、常に最新の状態を保証します。</p>\n<p>詳細については、<a href=\"/ja/iq-tag-management/consent/consent-integrations/validate-and-debug/\">Validate and debug consent integrations</a>を参照してください。</p>\n<h2 id=\"同意登録\">同意登録</h2>\n<p>同意統合は、Tealiumの同意登録を使用して、同意構成がロードまたは更新されたときにイベントを発行できます。これらの変更はページ全体で利用可能であり、ウェブサイト全体で同意決定を管理するのがより簡単になります。詳細については、<a href=\"/ja/iq-tag-management/consent/consent-register/\">Tealium consent register</a>を参照してください。</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>同意登録は、同意統合フレームワークテンプレートのバージョン1.2.0以降が必要です。このテンプレートを更新するには、<a href=\"/ja/iq-tag-management/templates/manage/#update-a-template\">テンプレートを更新する</a>を参照してください。</p>\n"
        }  

    , 
        {
            "weight": "466",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/consent-integrations-decision-flow/",
            "title": "同意統合の決定フロー",
            "body": "<p>Tealium iQ Consent Integrationsは、サポートされている同意管理プラットフォーム（CMP）に対して、オプトイン（GDPRスタイル）とオプトアウト（CCPAスタイル）の強制パターンの両方を提供します。以下の図の同意統合の決定フローでは、これらの強制パターンでユーザーの同意決定がどのように処理されるかを示しています。</p>\n<h3 id=\"同意統合の同意フロー\">同意統合の同意フロー</h3>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-integrations-consent-flow.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-integrations-consent-flow.png\"\n         alt=\"Consent Integrations decision flow\"\n         title=\"Consent Integrations decision flow\" width=\"1500\" height=\"2000\"/>\n    </a>\n</figure>\n<h3 id=\"11---タグの詳細を発火\">1.1 - タグの詳細を発火</h3>\n<p><strong>各タグとイベントについて：</strong></p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-integrations-fire-tags.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-integrations-fire-tags.png\"\n         alt=\"Consent Integrations fire tags detail \"\n         title=\"Consent Integrations fire tags detail\"/>\n    </a>\n</figure>\n<h2 id=\"オプトインモデル\">オプトインモデル</h2>\n<p>Tealium iQは、CMPからの同意決定が受け取られるまで、タグを発火させたりクッキーを構成したりしません。期待されるCMPがページ上でアクティブでない場合やTealium iQが同意されていない場合、Tealium iQは実行されず、タグは発火されません。</p>\n<p>Tealium iQがロードされたときに同意決定が見つからない場合、Tealium iQの同意統合は、決定が見つかるまでポーリングします。</p>\n<p>CMPからの同意決定が受け取られるまで、すべてのイベントは、決定が見つかったら処理されるようにキューに入れられます。同意決定が受け取られない場合、イベントは処理されません。</p>\n<p>CMPからの同意決定（<code>implicit</code>または<code>explicit</code>）が利用可能な場合、以下のアクションがTealium iQ Consent Integrationによって開始されます：</p>\n<ul>\n<li>最初にTealium iQが実行可能かどうかを確認します。</li>\n<li>Tealium iQが実行可能であれば、各タグが実行可能かどうかを確認します。</li>\n<li>タグが実行可能であれば、すべてのキューに入れられたイベントに対して同意に基づいてタグをトリガーします。</li>\n</ul>\n<p>同意決定が暗黙的な場合、イベントは初めてキューに入れられ、暗黙的な同意を持つタグがトリガーされます。ユーザーがその後明示的な同意決定を行うと、これらのキューに入れられたイベントは、新たに同意されたタグを考慮に入れて再処理されます。Tealium iQ Consent Integrationは、明示的な決定が見つかるまで検索します。</p>\n<p>同意決定が明示的な場合、すべてのキューは空になり、ポーリングは停止します。暗黙的な同意で発火されたタグは、明示的な同意決定が処理されるときに再発火されません（タグの再発火が有効で、処理する新たな同意目的がある場合を除く）。</p>\n<p>ユーザーがインタラクティブなCMPレイヤーを再度開き、新たな明示的な同意決定を行うと、以前のイベントは新たな同意決定で再処理されません。</p>\n<p>Tealium iQが最初にロードされた後に処理される新しいイベントについては、新しい同意決定がCMPから取得され、各イベントがTealium iQによって処理されるたびに、CMPが普遍的な真実の源として扱われることを確認します。</p>\n<h2 id=\"オプトアウトモデル\">オプトアウトモデル</h2>\n<p>オプトアウトモデルはオプトインモデルに似ていますが、明示的な決定は、オプトアウトモデルのデフォルト構成（CCPA/CPRAスタイル）よりも制限的であるため、ポーリングされません。</p>\n"
        }  

    , 
        {
            "weight": "467",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/manage/",
            "title": "同意統合と目的グループの管理",
            "body": "<p>Tealium iQタグ管理ダッシュボードでは、Consent Integrations画面で同意統合を追加し、構成することができます。</p>\n<h2 id=\"統合の追加\">統合の追加</h2>\n<p>以下の手順に従って統合を追加します：</p>\n<ol>\n<li><strong>iQタグ管理 &gt; Consent Integrations</strong>に移動します。</li>\n<li><strong>+ 統合を追加</strong>をクリックして統合構成画面を開きます。</li>\n</ol>\n<h3 id=\"ステップ1統合の構成\">ステップ1：統合の構成</h3>\n<ol>\n<li><strong>統合の構成</strong>スライドアウトで、統合にわかりやすい名前を入力します。</li>\n<li><strong>ベンダー</strong>リストからベンダーを選択します。選択したベンダーによっては、追加のフィールドが必要になることがあります。通常は、統合したいCMP構成の識別子です。</li>\n<li>（オプション）デフォルトのベンダーカテゴリーで統合を構成するには、<strong>{ベンダー}のデフォルトカテゴリーで新しい目的グループを作成</strong>を選択します。</li>\n<li>説明を入力します。</li>\n<li><strong>次へ</strong>をクリックします。</li>\n</ol>\n<h3 id=\"ステップ2強制ルール\">ステップ2：強制ルール</h3>\n<p>ドロップダウンリストを使用して新しいルールを作成するか、既存のルールを選択します。このルールは、同意統合をいつ強制するかを決定します。</p>\n<p>新しいルールを作成するには：</p>\n<ol>\n<li><strong>+ 新しいルール</strong>をクリックします。</li>\n<li><strong>ルールを追加</strong>スライドアウトで、ロードルールの<strong>タイトル</strong>を追加し、必要に応じて<strong>ノート</strong>を追加します。</li>\n<li>ドロップダウンリストから<strong>変数</strong>と<strong>演算子</strong>を選択し、<strong>値</strong>を入力します。</li>\n<li>ANDロジックを使用して別の条件を追加するには、以下のいずれかを行います：\n<ul>\n<li>デフォルトの条件文の隣にある**+**をクリックします。</li>\n<li>行メニューをクリックし、<strong>行の複製</strong>を選択して、ANDロジックを使用した条件文のコピーを作成します。<br>\n複製した条件文は必要に応じて編集できます。</li>\n</ul>\n</li>\n<li>ORロジックを使用して別の条件を追加するには、以下のいずれかを行います：\n<ul>\n<li><strong>+OR</strong>をクリックします。</li>\n<li>条件メニューをクリックし、<strong>複製</strong>を選択して、ORロジックを使用した条件のコピーを作成します。複製した条件は新しい条件を作成するために編集できます。</li>\n</ul>\n</li>\n<li>条件から条件文を削除するには、行メニューをクリックし、<strong>行を削除</strong>を選択します。</li>\n<li><strong>完了</strong>をクリックします。</li>\n</ol>\n<h3 id=\"ステップ3公開場所\">ステップ3：公開場所</h3>\n<ol>\n<li>この統合の強制を適用する環境を選択します。</li>\n<li><strong>次へ</strong>をクリックします。</li>\n</ol>\n<h3 id=\"ステップ4目的グループ\">ステップ4：目的グループ</h3>\n<ol>\n<li><strong>目的グループ</strong>ドロップダウンリストから統合の目的グループを選択します。\n<ul>\n<li>ステップ1でデフォルトのベンダーカテゴリーで統合を構成することを選択した場合は、以下の手順を完了し、統合の保存に進みます：\n<ol>\n<li>リストから**&lt;ベンダー&gt; デフォルト**を選択します。</li>\n</ol>\n</li>\n<li>ステップ4でデフォルトのベンダーカテゴリーで統合を構成することを選択しなかった場合：\n<ol>\n<li>ドロップダウンリストから**+ 新しい目的グループ**を選択します。</li>\n<li><strong>新しい目的グループ</strong>ダイアログで、<strong>目的グループを作成</strong>をクリックします。<strong>新しい目的グループ</strong>画面にリダイレクトされます。<strong>統合を追加</strong>ウィザードでの進行状況は保存され、目的グループの構成が完了した後にリダイレクトされます。</li>\n<li><strong>目的グループ</strong>ダイアログで、<a href=\"#add-a-purpose-group\">目的グループを追加</a>セクションの手順を完了して目的グループを追加します。</li>\n<li><strong>統合を追加</strong>ウィザードで、<strong>目的グループ</strong>ドロップダウンリストから目的グループを選択します。\n統合の構成を完了するために、<strong>統合を追加</strong>ウィザードにリダイレクトされます。</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><strong>保存</strong>をクリックして新しい統合を作成します。</li>\n</ol>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>OneTrustのデフォルトベンダーカテゴリーを初めて使用する場合は、統合を作成した後、<a href=\"#edit-a-purpose-group\">目的グループの編集</a>の手順に従って、タグを<strong>デフォルト</strong>目的グループに割り当てます。</p>\n<h2 id=\"目的グループの管理\">目的グループの管理</h2>\n<p>目的グループを管理するには、<strong>iQタグ管理 &gt; Consent Integrations &gt; Purpose Groups</strong>タブに移動します。</p>\n<h3 id=\"目的グループの追加\">目的グループの追加</h3>\n<p>以下の手順に従って目的グループを追加します：</p>\n<ol>\n<li><strong>iQタグ管理 &gt; Consent Integrations</strong>に移動します。</li>\n<li><strong>+ 目的グループを追加</strong>をクリックして、目的グループ構成モーダルを開きます。</li>\n</ol>\n<h4 id=\"ステップ1目的グループ\">ステップ1：目的グループ</h4>\n<ol>\n<li>名前と説明を入力します。</li>\n<li><strong>次へ</strong>をクリックします。</li>\n</ol>\n<h4 id=\"ステップ2目的\">ステップ2：目的</h4>\n<ol>\n<li>目的の名前と説明を入力します。各目的の名前は、統合するベンダーの同意カテゴリーの名前と一致する必要があります。</li>\n<li>目的グループに複数の目的を作成できます。目的グループにさらに目的を追加するには、<strong>+ 目的を追加</strong>をクリックします。</li>\n<li><strong>次へ</strong>をクリックします。</li>\n</ol>\n<h4 id=\"ステップ3tealium-iqの目的\">ステップ3：Tealium iQの目的</h4>\n<ol>\n<li><strong>Tealiumタグ目的</strong>からTealium iQにマップする目的を選択します。Tealium iQはすべてのタグ操作を制御し、タグが機能するためには目的にマップする必要があります。</li>\n<li><strong>次へ</strong>をクリックします。</li>\n</ol>\n<h4 id=\"ステップ4タグのマッピング\">ステップ4：タグのマッピング</h4>\n<p>すべてのタグは、トリガーする前に目的にマップする必要があります。</p>\n<ol>\n<li>新しく作成した目的にタグをマップするには、各タグで<strong>割り当て/マップ</strong>をクリックし、ドロップダウンリストからそのタグにマップする目的を選択します。</li>\n<li>各タグのタグ再発火を有効または無効にするには、<strong>タグ再発火</strong>列の<strong>OFF/ON</strong>ボタンを切り替えます。タグ再発火についての詳細は、<a href=\"/ja/iq-tag-management/consent/consent-integrations/about/#tag-refire\">タグ再発火</a>を参照してください。</li>\n<li><strong>保存</strong>をクリックして新しい目的グループを作成します。</li>\n</ol>\n<h3 id=\"目的グループの編集\">目的グループの編集</h3>\n<p>以下の手順に従って目的グループを編集します：</p>\n<ol>\n<li>編集したい目的グループの横にあるオプションアイコンをクリックします。</li>\n<li><strong>編集</strong>をクリックして目的グループ構成を開きます。</li>\n<li>編集したいセクションのタブをクリックします。新しいデフォルト目的グループにタグをマップするには、<strong>タグのマッピング</strong>をクリックします。</li>\n<li><strong>保存</strong>をクリックして変更を保存します。</li>\n</ol>\n<p>Tealium iQタグ管理でサポートされているベンダー統合の構成方法のステップバイステップの例については、<a href=\"/ja/guides/supported-consent-integration/\">Consent Integration Guide</a>を参照してください。</p>\n"
        }  

    , 
        {
            "weight": "470",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/supported-vendors/",
            "title": "サポートされているベンダー統合",
            "body": "<h2 id=\"仕組み\">仕組み</h2>\n<p>Tealium iQ Consent Integrationsは、さまざまなコンセント管理プラットフォーム（CMP）との統合をサポートしています。サポートされているコンセント管理プラットフォーム（CMP）のユーザーインターフェースまたはウェブページから、関連するベンダー固有の情報にアクセスできます。このドキュメントを信頼性が高くユーザーフレンドリーに保つために、このセクションではウェブページからベンダー固有の情報を取得する手順のみをカバーしています。各パートナーCMPのユーザーインターフェースでベンダーIDと目的を取得する手順については、各CMPのドキュメントを参照してください。</p>\n<p>ウェブページから関連情報を取得するには、以下の手順に従ってください：</p>\n<ol>\n<li>CMPが実装されているウェブサイトを訪問します。</li>\n<li>すべてのトラッキングを受け入れます。</li>\n<li>開発者ツールのJavaScriptコンソールを開きます。</li>\n<li>下記のコードスニペットからCMP固有のコードをコンソールに貼り付けます。</li>\n<li>表示された<strong>ベンダーID</strong>、<strong>目的キー</strong>、および<strong>目的名</strong>をあなたのConsent Integrationに入力します。</li>\n</ol>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>同意決定を更新した後、最新の解釈を確認するためにコードを再貼り付けしてください。</p>\n<h2 id=\"統合固有の指示とコードスニペット\">統合固有の指示とコードスニペット</h2>\n<h3 id=\"cookiebot\">Cookiebot</h3>\n<p><a href=\"https://www.cookiebot.com/\">cookiebot.com</a>または<a href=\"#how-it-works\">仕組みセクション</a>の指示に従ってあなたのウェブサイトでこのスニペットをテストし、統合に必要な情報を確認してください。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tコードスニペットを表示するには展開\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cookiebotIntegration</span> (window) {\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Cookiebot&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;v1.0.0&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// GDPRスタイルの「オプトイン」モデルを実行しているかどうかを真偽値で返す必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Cookiebot</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">regulations</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">regulations</span>.<span style=\"color:#a6e22e\">gdprApplies</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;boolean&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">regulations</span>.<span style=\"color:#a6e22e\">gdprApplies</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 決定に必要な情報を含むCMP固有の生オブジェクト（オブジェクトでなければならない）を返す必要があります。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#75715e\">// この出力は、以下の関数でcmpRawOutput引数として使用されます。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Cookiebot</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">hasResponse</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;boolean&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">consent</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Tealium iQが正しいCMP構成を持っていることを確認するのに役立つ文字列を返す必要があります（他のページ/ CMPの顧客ではない）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>() {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Cookiebot</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">serial</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">serial</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 生の決定がCMPの期待に合っているかどうかを真偽値で返す必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;object&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span>  <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">stamp</span> <span style=\"color:#f92672\">===</span><span style=\"color:#e6db74\">&#39;string&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 同意決定がユーザーによって明示的に行われたかどうかを真偽値で返す必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#75715e\">// この例では、決定が明示的であるかどうかを判断する唯一の方法は、オプトアウトクッキーが構成されているかどうかを確認することです\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">method</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;explicit&#39;</span><span style=\"color:#f92672\">?</span> <span style=\"color:#66d9ef\">true</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 同意されたベンダー/目的の配列を返す必要があります - これらはTealium iQの目的と正確に一致する必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">consentDecision</span> <span style=\"color:#f92672\">=</span> []\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// データの販売/共有が許可されているかどうかを判断するために、空でないオプトアウトクッキーを非常に単純にチェックします\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">necessary</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">consentDecision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;necessary&#39;</span>) <span style=\"color:#75715e\">// クッキーが見えないので、データの販売/共有が問題ないと仮定しなければなりません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">preferences</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">consentDecision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;preferences&#39;</span>) <span style=\"color:#75715e\">// クッキーが見えないので、データの販売/共有が問題ないと仮定しなければなりません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">marketing</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">consentDecision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;marketing&#39;</span>) <span style=\"color:#75715e\">// クッキーが見えないので、データの販売/共有が問題ないと仮定しなければなりません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">statistics</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">consentDecision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;statistics&#39;</span>) <span style=\"color:#75715e\">// クッキーが見えないので、データの販売/共有が問題ないと仮定しなければなりません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">consentDecision</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// この関数やそれ以下のものを変更する必要はありません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#75715e\">// 理解できないものはオプトアウトとして扱います\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>  })(window)\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    // デバッグ/開発出力 - このブロックのコメントを外し、テストページにこのテンプレート全体を貼り付け/再貼り付けしてください\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    var outputString = `${tealiumCmpIntegration.cmpCheckIfOptInModel() ? &#39;Opt-in&#39; : &#39;Opt-out&#39;} Model\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      - id:          ${tealiumCmpIntegration.cmpFetchCurrentLookupKey()}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      - well-formed: ${tealiumCmpIntegration.cmpCheckForWellFormedDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      - explicit:    ${tealiumCmpIntegration.cmpCheckForExplicitConsentDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      - group list:  ${JSON.stringify(tealiumCmpIntegration.cmpConvertResponseToGroupList(tealiumCmpIntegration.cmpFetchCurrentConsentDecision()))}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    `\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    console.log(outputString);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  */</span>\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"didomi\">Didomi</h3>\n<p>このスニペットを <a href=\"https://didomi.io\">didomi.io</a> または<a href=\"#how-it-works\">上記の指示に従って</a> あなたのウェブサイトでテストして、互換性を確認し、統合に必要な情報を取得してください。</p>\n<p>Didomi統合は、<strong>ベンダー</strong>を<strong>目的</strong>として使用します。</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Didomiは暗黙の同意を得た目的やベンダーを返さないことが知られています。このバグが修正されるまでの間、暗黙のトリガーを許可するために、アウトバウンドの同意決定に<code>always_consented</code>目的キーを無条件に追加することが回避策となります。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tコードスニペットを表示する\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">didomiIntegration</span> (window) {\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP特有の機能とラベル\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Didomi&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;didomi-1.0.1&#39;</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Didomi</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span>().<span style=\"color:#a6e22e\">notice</span>.<span style=\"color:#a6e22e\">type</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;optin&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Didomi</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getUserStatus</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> {}\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getUserStatus</span>()\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">vendorInfo</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getVendors</span>()\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span>()\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Didomi</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#e6db74\">&#39;&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">id</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span>().<span style=\"color:#a6e22e\">app</span>.<span style=\"color:#a6e22e\">deploymentId</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">id</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 理解できないものはオプトアウトとして扱う\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 期待を確認するために必要以上のチェックを行う\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">purposes</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">purposes</span>.<span style=\"color:#a6e22e\">global</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span>.<span style=\"color:#a6e22e\">global</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">purposes</span>.<span style=\"color:#a6e22e\">global</span>.<span style=\"color:#a6e22e\">enabled</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span>.<span style=\"color:#a6e22e\">global</span>.<span style=\"color:#a6e22e\">enabled</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">vendorInfo</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;boolean&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 理解できないものはオプトアウトとして扱う\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span> <span style=\"color:#75715e\">// 明示的な決定が行われた後はfalse\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Didomiは各ベンダーの必要な目的をチェックする\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> []\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// IABベンダーIDであっても文字列を強制する\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span>.<span style=\"color:#a6e22e\">global</span>.<span style=\"color:#a6e22e\">enabled</span>.<span style=\"color:#a6e22e\">map</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">vendorId</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> String(<span style=\"color:#a6e22e\">vendorId</span>)\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;always_consented&#39;</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">decision</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedVendors</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allVendors</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">vendorInfo</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">lookupObject</span> <span style=\"color:#f92672\">=</span> {}\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Didomiのバグが修正されるまで暗黙のトリガーを許可するための回避策\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#a6e22e\">lookupObject</span>.<span style=\"color:#a6e22e\">always_consented</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Always consented (to allow strictly needed triggering)&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">allVendors</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">vendorObject</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">allowedVendors</span>.<span style=\"color:#a6e22e\">indexOf</span>(String(<span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">id</span>)) <span style=\"color:#f92672\">===</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>) <span style=\"color:#66d9ef\">return</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">lookupObject</span>[<span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">id</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;iab-vendor-&#39;</span> <span style=\"color:#f92672\">+</span> <span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">id</span>\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">lookupObject</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 理解できないものはオプトアウトとして扱う\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>})(window)\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// デバッグ/開発出力 - 同意状態を変更するたびにテストページに統合を再貼り付けてください\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`CMP Found: </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> (</span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - id:          </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed: </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit:    </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - group list:  </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()))<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - name lookup: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()), <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">6</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"デジタルコントロールルーム\">デジタルコントロールルーム</h3>\n<p>このスニペットを <a href=\"https://www.digitalcontrolroom.com/\">digitalcontrolroom.com</a> またはお使いのウェブサイトでテストし、<a href=\"#how-it-works\">操作方法セクション</a> の指示に従って互換性を確認し、統合に必要な情報を取得してください。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tコードスニペットを表示するには展開してください\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">digitalControlRoom</span>(window) {\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {};\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Digital Control Room&#39;</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;v1.0.0&#39;</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>;\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> (\n</span></span><span style=\"display:flex;\"><span>      window.<span style=\"color:#a6e22e\">_cookiereports</span> <span style=\"color:#f92672\">&amp;&amp;</span>\n</span></span><span style=\"display:flex;\"><span>      window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span> <span style=\"color:#f92672\">&amp;&amp;</span>\n</span></span><span style=\"display:flex;\"><span>      window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span>\n</span></span><span style=\"display:flex;\"><span>      window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consentExplicit</span>\n</span></span><span style=\"display:flex;\"><span>    );\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// This output is used as the cmpRawOutput argument in functions below.\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>() {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">_cookiereports</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> {};\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">levels</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">loadConsent</span>();\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">levels</span>[<span style=\"color:#ae81ff\">1</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">output</span> <span style=\"color:#f92672\">=</span> { <span style=\"color:#e6db74\">&#34;levels&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">levels</span> };\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">output</span>.<span style=\"color:#a6e22e\">panels</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">output</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// Should return a string that helps Tealium iQ confirm that it&#39;s got the right CMP configuration (and not one from some other page / customer of the CMP)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>() {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (window.<span style=\"color:#a6e22e\">_cookiereports</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">&gt;</span> <span style=\"color:#ae81ff\">0</span>)\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">storagekey</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#e6db74\">&#34;&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">levels</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;object&#34;</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">levels</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">null</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">panels</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;object&#34;</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">panels</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">null</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// Should return a boolean - true if the consent decision was explicitly made by the user\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">panels</span>)\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">panels</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consentDecisionIsExplicit</span>();\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> [<span style=\"color:#e6db74\">&#34;1&#34;</span>];\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">levels</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">levels</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">consentDecision</span> <span style=\"color:#f92672\">=</span> [];\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">key</span> <span style=\"color:#66d9ef\">in</span> <span style=\"color:#a6e22e\">levels</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">levels</span>.<span style=\"color:#a6e22e\">hasOwnProperty</span>(<span style=\"color:#a6e22e\">key</span>)) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">levels</span>[<span style=\"color:#a6e22e\">key</span>] <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>) {\n</span></span><span style=\"display:flex;\"><span>          <span style=\"color:#a6e22e\">consentDecision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#a6e22e\">key</span>);\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>      }\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">consentDecision</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// You shouldn&#39;t need to change this function, or anything below it\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#34;tiq-group-name-missing&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>);\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>})(window);\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// Debugging / development output - uncomment this block, then paste/repaste this entire template on your test pages\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">var outputString = `${tealiumCmpIntegration.cmpCheckIfOptInModel() ? &#34;Opt-in&#34; : &#34;Opt-out&#34;} Model\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - id:          ${tealiumCmpIntegration.cmpFetchCurrentLookupKey()}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - well-formed: ${tealiumCmpIntegration.cmpCheckForWellFormedDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - explicit:    ${tealiumCmpIntegration.cmpCheckForExplicitConsentDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - group list:  ${JSON.stringify(tealiumCmpIntegration.cmpConvertResponseToGroupList(tealiumCmpIntegration.cmpFetchCurrentConsentDecision()))}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  `;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">console.log(outputString);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">*/</span>\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"onetrust\">OneTrust</h3>\n<p><a href=\"https://onetrust.com\">https://onetrust.com</a> またはあなたのウェブサイトでこのスニペットをテストし、<a href=\"#how-it-works\">上記の指示に従って</a>互換性を確認し、統合に必要な情報を取得してください。</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>OneTrustは構成をプレビューするためのテストモードを提供しており、ベンダーIDに <code>-test</code> を追加することでアクティブになります。統合を簡素化するために、OneTrust Consent IntegrationsはベンダーIDから <code>-test</code> 接尾辞を削除します。シームレスな統合のために、ページで <code>-test</code> 接尾辞を使用している場合でも、Tealium iQ Consent Integrations UIで統合を構成する際には <code>-test</code> を除いたベンダーIDを入力してください。Tealium iQ UIとアクティブな統合間でベンダーIDが一致しない場合、Tealium iQタグ管理はページ上でクッキーを構成したりタグをトリガーしたりすることができません。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tコードスニペットを表示する\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <p>OneTrustは <code>cmpAddCallbackToTriggerRecheck</code> を通じてコールバック関数をサポートしています。これにより、Tealium iQは同意状態の変更に関するリアルタイムの更新を受け取ることができます。詳細については、<a href=\"/ja/iq-tag-management/consent/consent-integrations/custom-cmp/\">カスタムCMP統合</a>を参照してください。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">oneTrust</span>(window) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 名前/IDの挙動を簡単に調整する\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">useNamesInsteadOfKeys</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 構成の簡素化のために予想されるベンダーIDの安全チェックを回避することができるが、リスクが増加する\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">disableVendorIdValidation</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// CMP特有の機能とラベル\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {};\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#34;OneTrust&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#34;onetrust-2.1.0&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpAddCallbackToTriggerRecheck</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpAddCallbackToTriggerRecheck</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>();\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">ConsentModel</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">ConsentModel</span>.<span style=\"color:#a6e22e\">Name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#34;opt-out&#34;</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>() {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">OneTrust</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">GetDomainData</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;function&#34;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">GetDomainData</span>();\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">dataLayer</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>() {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// 2022年末からの新しいバージョンのOneTrustでは、cctIdが定義されていない\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#75715e\">// しかし、このHTML属性はOneTrustが識別する方法である\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">scrapeOneTrustVendorId</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">function</span> () {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allScripts</span> <span style=\"color:#f92672\">=</span> document.<span style=\"color:#a6e22e\">getElementsByTagName</span>(<span style=\"color:#e6db74\">&#34;script&#34;</span>);\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">re</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">/\\/otSDKStub\\.js(\\?.*)*$/</span>;\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">&lt;</span> <span style=\"color:#a6e22e\">allScripts</span>.<span style=\"color:#a6e22e\">length</span>; <span style=\"color:#a6e22e\">i</span><span style=\"color:#f92672\">++</span>) {\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">isOneTrustScript</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">re</span>.<span style=\"color:#a6e22e\">test</span>(<span style=\"color:#a6e22e\">allScripts</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">src</span>); <span style=\"color:#75715e\">// nullの可能性あり\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>                <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">isOneTrustScript</span>) {\n</span></span><span style=\"display:flex;\"><span>                    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">fullVendorId</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">allScripts</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">getAttribute</span>(<span style=\"color:#e6db74\">&#34;data-domain-script&#34;</span>); <span style=\"color:#75715e\">// スクリプトから解析する\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>                    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">fullVendorId</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#34;-test&#34;</span>)[<span style=\"color:#ae81ff\">0</span>];\n</span></span><span style=\"display:flex;\"><span>                }\n</span></span><span style=\"display:flex;\"><span>            }\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#e6db74\">&#34;error-not-found&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">disableVendorIdValidation</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#75715e\">// 予想されるアクティブなベンダーIDをそのまま返す\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>            <span style=\"color:#66d9ef\">return</span> (window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span> <span style=\"color:#f92672\">&amp;&amp;</span> Object.<span style=\"color:#a6e22e\">keys</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>)[<span style=\"color:#ae81ff\">0</span>]) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#34;(ベンダーIDチェック無効)&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">scrapeOneTrustVendorId</span>();\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// 理解できないものはオプトアウトとして扱う\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;object&#34;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">Groups</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;[object Array]&#34;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;[object Array]&#34;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// 理解できないものは暗黙的として扱う\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">OneTrust</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">IsAlertBoxClosed</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#34;function&#34;</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">IsAlertBoxClosed</span>();\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// オブジェクトの配列から簡単な検索のためのオブジェクトに変換する\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">decisionString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#34;&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">foundOneTrustEntry</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> {};\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">-</span> <span style=\"color:#ae81ff\">1</span>; <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">&gt;=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">i</span><span style=\"color:#f92672\">--</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">if</span> ([<span style=\"color:#e6db74\">&#34;OneTrustGroupsUpdated&#34;</span>, <span style=\"color:#e6db74\">&#34;OneTrustLoaded&#34;</span>].<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">event</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>) {\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#a6e22e\">decisionString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">OnetrustActiveGroups</span>;\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#a6e22e\">foundOneTrustEntry</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#66d9ef\">break</span>;\n</span></span><span style=\"display:flex;\"><span>            }\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposeIds</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">decisionString</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#34;,&#34;</span>).<span style=\"color:#a6e22e\">filter</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">group</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">group</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        });\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">decisionString</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#34;&#34;</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#ae81ff\">1000</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">foundOneTrustEntry</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">permittedPurposeIds</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span>.<span style=\"color:#a6e22e\">getCurrentDecision</span>();\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span> <span style=\"color:#f92672\">=</span> {};\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">Groups</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">groupInfo</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">permittedPurposeIds</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">OptanonGroupId</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>) {\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#a6e22e\">permittedPurposesWithNames</span>[<span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">OptanonGroupId</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">GroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#34;ERROR-MISSING&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>            }\n</span></span><span style=\"display:flex;\"><span>        })\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span>; <span style=\"color:#75715e\">// キーはID、値は名前\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>);\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">keysOrValues</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">useNamesInsteadOfKeys</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#34;values&#34;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;keys&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> Object[<span style=\"color:#a6e22e\">keysOrValues</span>](<span style=\"color:#a6e22e\">permittedPurposesWithNames</span>); <span style=\"color:#75715e\">// キーはID、値は名前\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpAddCallbackToTriggerRecheck</span>(<span style=\"color:#a6e22e\">triggerRecheck</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">triggerRecheck</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// 公式のGoogle dataLayerリスナー、https://github.com/google/data-layer-helper/blob/master/dist/data-layer-helper.js から引用、詳細は https://github.com/google/data-layer-helper を参照\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        (<span style=\"color:#66d9ef\">function</span> () {<span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">         Copyright The Closure Library Authors.\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">         SPDX-License-Identifier: Apache-2.0\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        */</span>\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#e6db74\">&#39;use strict&#39;</span>;<span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">         jQuery v1.9.1 (c) 2005, 2012\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">         jQuery Foundation, Inc. jquery.org/license.\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        */</span>\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">f</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">/\\[object (Boolean|Number|String|Function|Array|Date|RegExp|Arguments)\\]/</span>; <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">g</span>(<span style=\"color:#a6e22e\">a</span>) { <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">null</span> <span style=\"color:#f92672\">==</span> <span style=\"color:#a6e22e\">a</span> <span style=\"color:#f92672\">?</span> String(<span style=\"color:#a6e22e\">a</span>) <span style=\"color:#f92672\">:</span> (<span style=\"color:#a6e22e\">a</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">f</span>.<span style=\"color:#a6e22e\">exec</span>(Object.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(Object(<span style=\"color:#a6e22e\">a</span>)))) <span style=\"color:#f92672\">?</span> <span style=\"color:#a6e22e\">a</span>[<span style=\"color:#ae81ff\">1</span>].<span style=\"color:#a6e22e\">toLowerCase</span>() <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;object&#34;</span> } <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">m</span>(<span style=\"color:#a6e22e\">a</span>, <span style=\"color:#a6e22e\">b</span>) { <span style=\"color:#66d9ef\">return</span> Object.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">hasOwnProperty</span>.<span style=\"color:#a6e22e\">call</span>(Object(<span style=\"color:#a6e22e\">a</span>), <span style=\"color:#a6e22e\">b</span>) } <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">n</span>(<span style=\"color:#a6e22e\">a</span>) { <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">a</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#34;object&#34;</span> <span style=\"color:#f92672\">!=</span> <span style=\"color:#a6e22e\">g</span>(<span style=\"color:#a6e22e\">a</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">nodeType</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#a6e22e\">a</span> <span style=\"color:#f92672\">==</span> <span style=\"color:#a6e22e\">a</span>.window) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">1</span>; <span style=\"color:#66d9ef\">try</span> { <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">constructor</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">m</span>(<span style=\"color:#a6e22e\">a</span>, <span style=\"color:#e6db74\">&#34;constructor&#34;</span>) <span style=\"color:#a6e22e\">and</span> <span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">m</span>(<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">constructor</span>.<span style=\"color:#a6e22e\">prototype</span>, <span style=\"color:#e6db74\">&#34;isPrototypeOf&#34;</span>)) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">1</span> } <span style=\"color:#66d9ef\">catch</span> (<span style=\"color:#a6e22e\">c</span>) { <span style=\"color:#66d9ef\">return</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">1</span> } <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">b</span> <span style=\"color:#66d9ef\">in</span> <span style=\"color:#a6e22e\">a</span>); <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">void</span> <span style=\"color:#ae81ff\">0</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#a6e22e\">m</span>(<span style=\"color:#a6e22e\">a</span>, <span style=\"color:#a6e22e\">b</span>) }; <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">p</span>(<span style=\"color:#a6e22e\">a</span>, <span style=\"color:#a6e22e\">b</span>) { <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">=</span> {}, <span style=\"color:#a6e22e\">d</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">c</span>; <span style=\"color:#a6e22e\">a</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#34;.&#34;</span>); <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">e</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">e</span> <span style=\"color:#f92672\">&lt;</span> <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">-</span> <span style=\"color:#ae81ff\">1</span>; <span style=\"color:#a6e22e\">e</span><span style=\"color:#f92672\">++</span>)<span style=\"color:#a6e22e\">d</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">d</span>[<span style=\"color:#a6e22e\">a</span>[<span style=\"color:#a6e22e\">e</span>]] <span style=\"color:#f92672\">=</span> {}; <span style=\"color:#a6e22e\">d</span>[<span style=\"color:#a6e22e\">a</span>[<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">-</span> <span style=\"color:#ae81ff\">1</span>]] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">b</span>; <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">c</span> } <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">q</span>(<span style=\"color:#a6e22e\">a</span>, <span style=\"color:#a6e22e\">b</span>) { <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">_clear</span>, <span style=\"color:#a6e22e\">d</span>; <span style=\"color:#66d9ef\">for</span> <span style=\"color:#a6e22e\">d</span> <span style=\"color:#66d9ef\">in</span> <span style=\"color:#a6e22e\">a</span>) <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">m</span>(<span style=\"color:#a6e22e\">a</span>, <span style=\"color:#a6e22e\">d</span>)) { <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">e</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">a</span>[<span style=\"color:#a6e22e\">d</span>]; <span style=\"color:#e6db74\">&#34;array&#34;</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">g</span>(<span style=\"color:#a6e22e\">e</span>) <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">?</span> (<span style=\"color:#e6db74\">&#34;array&#34;</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">g</span>(<span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">d</span>]) <span style=\"color:#f92672\">||</span> (<span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">d</span>] <span style=\"color:#f92672\">=</span> []), <span style=\"color:#a6e22e\">q</span>(<span style=\"color:#a6e22e\">e</span>, <span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">d</span>])) <span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">n</span>(<span style=\"color:#a6e22e\">e</span>) <span style=\"color:#a6e22e\">and</span> <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">?</span> (<span style=\"color:#a6e22e\">n</span>(<span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">d</span>]) <span style=\"color:#f92672\">||</span> (<span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">d</span>] <span style=\"color:#f92672\">=</span> {}), <span style=\"color:#a6e22e\">q</span>(<span style=\"color:#a6e22e\">e</span>, <span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">d</span>])) <span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">d</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">e</span> } <span style=\"color:#66d9ef\">delete</span> <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">_clear</span> };<span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">          著作権 2012 Google Inc. 保留されています。 */</span>\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">r</span>(<span style=\"color:#a6e22e\">a</span>, <span style=\"color:#a6e22e\">b</span>, <span style=\"color:#a6e22e\">c</span>) {\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">void</span> <span style=\"color:#ae81ff\">0</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">?</span> {} <span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">b</span>; <span style=\"color:#e6db74\">&#34;function&#34;</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">=</span> { <span style=\"color:#a6e22e\">listener</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">b</span>, <span style=\"color:#a6e22e\">listenToPast</span><span style=\"color:#f92672\">:</span> <span style=\"color:#66d9ef\">void</span> <span style=\"color:#ae81ff\">0</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">1</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">c</span>, <span style=\"color:#a6e22e\">processNow</span><span style=\"color:#f92672\">:</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">0</span>, <span style=\"color:#a6e22e\">commandProcessors</span><span style=\"color:#f92672\">:</span> {} } <span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">=</span> { <span style=\"color:#a6e22e\">listener</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">listener</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">function</span> () { }, <span style=\"color:#a6e22e\">listenToPast</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">listenToPast</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">1</span>, <span style=\"color:#a6e22e\">processNow</span><span style=\"color:#f92672\">:</span> <span style=\"color:#66d9ef\">void</span> <span style=\"color:#ae81ff\">0</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">processNow</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">0</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">processNow</span>, <span style=\"color:#a6e22e\">commandProcessors</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">commandProcessors</span> <span style=\"color:#f92672\">||</span> {} }; <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">a</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">a</span>; <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">l</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">listener</span>; <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">j</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">listenToPast</span>; <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">g</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">1</span>; <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">=</span> {}; <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">f</span> <span style=\"color:#f92672\">=</span> []; <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">commandProcessors</span>; <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">h</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">u</span>(<span style=\"color:#66d9ef\">this</span>); <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">d</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">push</span>, <span style=\"color:#a6e22e\">e</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">this</span>; <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">push</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">function</span> () {\n</span></span><span style=\"display:flex;\"><span>                    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">k</span> <span style=\"color:#f92672\">=</span> [].<span style=\"color:#a6e22e\">slice</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">arguments</span>,\n</span></span><span style=\"display:flex;\"><span>                        <span style=\"color:#ae81ff\">0</span>), <span style=\"color:#a6e22e\">l</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">d</span>.<span style=\"color:#a6e22e\">apply</span>(<span style=\"color:#a6e22e\">e</span>.<span style=\"color:#a6e22e\">a</span>, <span style=\"color:#a6e22e\">k</span>); <span style=\"color:#a6e22e\">v</span>(<span style=\"color:#a6e22e\">e</span>, <span style=\"color:#a6e22e\">k</span>); <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">l</span>\n</span></span><span style=\"display:flex;\"><span>                }; <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">processNow</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">process</span>()\n</span></span><span style=\"display:flex;\"><span>            } <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">process</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">function</span> () { <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">registerProcessor</span>(<span style=\"color:#e6db74\">&#34;set&#34;</span>, <span style=\"color:#66d9ef\">function</span> () { <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">=</span> {}; <span style=\"color:#ae81ff\">1</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">arguments</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#e6db74\">&#34;object&#34;</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">g</span>(<span style=\"color:#a6e22e\">arguments</span>[<span style=\"color:#ae81ff\">0</span>]) <span style=\"color:#f92672\">?</span> <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">arguments</span>[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">:</span> <span style=\"color:#ae81ff\">2</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">arguments</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#e6db74\">&#34;string&#34;</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">g</span>(<span style=\"color:#a6e22e\">arguments</span>[<span style=\"color:#ae81ff\">0</span>]) <span style=\"color:#f92672\">&amp;&amp;</span> (<span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">p</span>(<span style=\"color:#a6e22e\">arguments</span>[<span style=\"color:#ae81ff\">0</span>], <span style=\"color:#a6e22e\">arguments</span>[<span style=\"color:#ae81ff\">1</span>])); <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">c</span> }); <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">0</span>; <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">a</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">length</span>, <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">&lt;</span> <span style=\"color:#a6e22e\">a</span>; <span style=\"color:#a6e22e\">b</span><span style=\"color:#f92672\">++</span>)<span style=\"color:#a6e22e\">v</span>(<span style=\"color:#66d9ef\">this</span>, [<span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">a</span>[<span style=\"color:#a6e22e\">b</span>]], <span style=\"color:#f92672\">!</span><span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">j</span>) }; <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">get</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">a</span>) { <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">c</span>; <span style=\"color:#a6e22e\">a</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#34;.&#34;</span>); <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">&lt;</span> <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">length</span>; <span style=\"color:#a6e22e\">c</span><span style=\"color:#f92672\">++</span>) { <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">void</span> <span style=\"color:#ae81ff\">0</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">a</span>[<span style=\"color:#a6e22e\">c</span>]]) <span style=\"color:#66d9ef\">return</span>; <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">a</span>[<span style=\"color:#a6e22e\">c</span>]] } <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">b</span> };\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">flatten</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">function</span> () { <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">splice</span>(<span style=\"color:#ae81ff\">0</span>, <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">length</span>); <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">a</span>[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">=</span> {}; <span style=\"color:#a6e22e\">q</span>(<span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">c</span>, <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">a</span>[<span style=\"color:#ae81ff\">0</span>]) }; <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">registerProcessor</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">a</span>, <span style=\"color:#a6e22e\">b</span>) { <span style=\"color:#a6e22e\">a</span> <span style=\"color:#66d9ef\">in</span> <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">||</span> (<span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">a</span>] <span style=\"color:#f92672\">=</span> []); <span style=\"color:#66d9ef\">this</span>.<span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">a</span>].<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#a6e22e\">b</span>) };\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">v</span>(<span style=\"color:#a6e22e\">a</span>, <span style=\"color:#a6e22e\">b</span>, <span style=\"color:#a6e22e\">c</span>) {\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">void</span> <span style=\"color:#ae81ff\">0</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">1</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">c</span>; <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">&amp;&amp;</span> (<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">f</span>.<span style=\"color:#a6e22e\">push</span>.<span style=\"color:#a6e22e\">apply</span>(<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">f</span>, <span style=\"color:#a6e22e\">b</span>), <span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">g</span>)) <span style=\"color:#66d9ef\">for</span> (; <span style=\"color:#ae81ff\">0</span> <span style=\"color:#f92672\">&lt;</span> <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">f</span>.<span style=\"color:#a6e22e\">length</span>;) {\n</span></span><span style=\"display:flex;\"><span>                    <span style=\"color:#a6e22e\">b</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">f</span>.<span style=\"color:#a6e22e\">shift</span>(); <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#e6db74\">&#34;array&#34;</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">g</span>(<span style=\"color:#a6e22e\">b</span>)) <span style=\"color:#a6e22e\">a</span><span style=\"color:#f92672\">:</span> { <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">d</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">c</span>; <span style=\"color:#a6e22e\">g</span>(<span style=\"color:#a6e22e\">b</span>[<span style=\"color:#ae81ff\">0</span>]); <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">e</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">b</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#34;.&#34;</span>), <span style=\"color:#a6e22e\">k</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">e</span>.<span style=\"color:#a6e22e\">pop</span>(), <span style=\"color:#a6e22e\">l</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">slice</span>(<span style=\"color:#ae81ff\">1</span>), <span style=\"color:#a6e22e\">h</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">h</span> <span style=\"color:#f92672\">&lt;</span> <span style=\"color:#a6e22e\">e</span>.<span style=\"color:#a6e22e\">length</span>; <span style=\"color:#a6e22e\">h</span><span style=\"color:#f92672\">++</span>) { <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">void</span> <span style=\"color:#ae81ff\">0</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">d</span>[<span style=\"color:#a6e22e\">e</span>[<span style=\"color:#a6e22e\">h</span>]]) <span style=\"color:#66d9ef\">break</span> <span style=\"color:#a6e22e\">a</span>; <span style=\"color:#a6e22e\">d</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">d</span>[<span style=\"color:#a6e22e\">e</span>[<span style=\"color:#a6e22e\">h</span>]] } <span style=\"color:#66d9ef\">try</span> { <span style=\"color:#a6e22e\">d</span>[<span style=\"color:#a6e22e\">k</span>].<span style=\"color:#a6e22e\">apply</span>(<span style=\"color:#a6e22e\">d</span>, <span style=\"color:#a6e22e\">l</span>) } <span style=\"color:#66d9ef\">catch</span> (<span style=\"color:#a6e22e\">w</span>) { } } <span style=\"color:#66d9ef\">else</span> <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#e6db74\">&#34;arguments&#34;</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">g</span>(<span style=\"color:#a6e22e\">b</span>)) { <span style=\"color:#a6e22e\">e</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">a</span>; <span style=\"color:#a6e22e\">k</span> <span style=\"color:#f92672\">=</span> []; <span style=\"color:#a6e22e\">l</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">b</span>[<span style=\"color:#ae81ff\">0</span>]; <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">e</span>.<span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">l</span>]) <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#a6e22e\">d</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">e</span>.<span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">l</span>].<span style=\"color:#a6e22e\">length</span>, <span style=\"color:#a6e22e\">h</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">h</span> <span style=\"color:#f92672\">&lt;</span> <span style=\"color:#a6e22e\">d</span>; <span style=\"color:#a6e22e\">h</span><span style=\"color:#f92672\">++</span>)<span style=\"color:#a6e22e\">k</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#a6e22e\">e</span>.<span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">l</span>][<span style=\"color:#a6e22e\">h</span>].<span style=\"color:#a6e22e\">apply</span>(<span style=\"color:#a6e22e\">e</span>.<span style=\"color:#a6e22e\">h</span>, [].<span style=\"color:#a6e22e\">slice</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">b</span>, <span style=\"color:#ae81ff\">1</span>))); <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">f</span>.<span style=\"color:#a6e22e\">push</span>.<span style=\"color:#a6e22e\">apply</span>(<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">f</span>, <span style=\"color:#a6e22e\">k</span>) } <span style=\"color:#66d9ef\">else</span> <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#e6db74\">&#34;function&#34;</span> <span style=\"color:#f92672\">==</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">b</span>) <span style=\"color:#66d9ef\">try</span> { <span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">h</span>) } <span style=\"color:#66d9ef\">catch</span> (<span style=\"color:#a6e22e\">w</span>) { } <span style=\"color:#66d9ef\">else</span> <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">n</span>(<span style=\"color:#a6e22e\">b</span>)) <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">t</span> <span style=\"color:#66d9ef\">in</span> <span style=\"color:#a6e22e\">b</span>) <span style=\"color:#a6e22e\">q</span>(<span style=\"color:#a6e22e\">p</span>(<span style=\"color:#a6e22e\">t</span>,\n</span></span><span style=\"display:flex;\"><span>                        <span style=\"color:#a6e22e\">b</span>[<span style=\"color:#a6e22e\">t</span>]), <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">c</span>); <span style=\"color:#66d9ef\">else</span> <span style=\"color:#66d9ef\">continue</span>; <span style=\"color:#a6e22e\">c</span> <span style=\"color:#f92672\">||</span> (<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">g</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">0</span>, <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">l</span>(<span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">c</span>, <span style=\"color:#a6e22e\">b</span>), <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">g</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">!</span><span style=\"color:#ae81ff\">1</span>)\n</span></span><span style=\"display:flex;\"><span>                }\n</span></span><span style=\"display:flex;\"><span>            } <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">registerProcessor</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">registerProcessor</span>; <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">flatten</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">flatten</span>; <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">get</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">get</span>; <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">process</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">r</span>.<span style=\"color:#a6e22e\">prototype</span>.<span style=\"color:#a6e22e\">process</span>; window.<span style=\"color:#a6e22e\">DataLayerHelper</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">r</span>; <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">u</span>(<span style=\"color:#a6e22e\">a</span>) { <span style=\"color:#66d9ef\">return</span> { <span style=\"color:#a6e22e\">set</span><span style=\"color:#f92672\">:</span> <span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">b</span>, <span style=\"color:#a6e22e\">c</span>) { <span style=\"color:#a6e22e\">q</span>(<span style=\"color:#a6e22e\">p</span>(<span style=\"color:#a6e22e\">b</span>, <span style=\"color:#a6e22e\">c</span>), <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">c</span>) }, <span style=\"color:#a6e22e\">get</span><span style=\"color:#f92672\">:</span> <span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">b</span>) { <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">a</span>.<span style=\"color:#a6e22e\">get</span>(<span style=\"color:#a6e22e\">b</span>) } } };\n</span></span><span style=\"display:flex;\"><span>        })();\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">listener</span>(<span style=\"color:#a6e22e\">model</span>, <span style=\"color:#a6e22e\">message</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#75715e\">// メッセージがプッシュされました。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>            <span style=\"color:#75715e\">// ヘルパーがモデルにマージしました。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>            <span style=\"color:#75715e\">// これでメッセージと更新されたモデルを使用して何かを行います。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>            <span style=\"color:#66d9ef\">if</span> ([<span style=\"color:#e6db74\">&#34;OneTrustGroupsUpdated&#34;</span>, <span style=\"color:#e6db74\">&#34;OneTrustLoaded&#34;</span>].<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">message</span>.<span style=\"color:#a6e22e\">event</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>) {\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#a6e22e\">triggerRecheck</span>()\n</span></span><span style=\"display:flex;\"><span>            }\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        window.<span style=\"color:#a6e22e\">dataLayer</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">dataLayer</span> <span style=\"color:#f92672\">||</span> [];\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">helper</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">new</span> <span style=\"color:#a6e22e\">DataLayerHelper</span>(window.<span style=\"color:#a6e22e\">dataLayer</span>, { <span style=\"color:#a6e22e\">listener</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">listener</span> });\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">oldWrapper</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">OptanonWrapper</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">function</span> () { }\n</span></span><span style=\"display:flex;\"><span>        window.<span style=\"color:#a6e22e\">OptanonWrapper</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">function</span> () {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">oldWrapper</span>();\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">triggerRecheck</span>();\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// 理解できないものはオプトアウトとして扱います\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#34;tiq-group-name-missing&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>);\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>})(window);\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// デバッグ/開発出力 - コンソールに貼り付けるか、カスタム統合の開発中に全体のテンプレートをアンコメントして貼り付けます\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">function outputDebuggingInfo () {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  var outputString = `${tealiumCmpIntegration.cmpCheckIfOptInModel() ? &#39;Opt-in&#39; : &#39;Opt-out&#39;} Model\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - id:                 ${tealiumCmpIntegration.cmpFetchCurrentLookupKey()}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - well-formed:        ${tealiumCmpIntegration.cmpCheckForWellFormedDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - explicit:           ${tealiumCmpIntegration.cmpCheckForExplicitConsentDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - using callback:     ${typeof tealiumCmpIntegration.cmpAddCallbackToTriggerRecheck === &#39;function&#39;}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - consented purposes: ${JSON.stringify(tealiumCmpIntegration.cmpConvertResponseToGroupList(tealiumCmpIntegration.cmpFetchCurrentConsentDecision()))}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  `\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  console.log(outputString);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// コールバック関数を使用してデバッグ中にコンソールへの投稿を避け、コールバック関数自体のテストを可能にします\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">if (typeof tealiumCmpIntegration.cmpAddCallbackToTriggerRecheck === &#39;function&#39;) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    tealiumCmpIntegration.cmpAddCallbackToTriggerRecheck(outputDebuggingInfo)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">outputDebuggingInfo();\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">*/</span>\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"opt-out-cookie--gpc\">Opt-out Cookie + GPC</h3>\n<p>この統合は、CCPA/CPRAなどの非常にシンプルなオプトアウトモデルをサポートすることを目的としています。<strong>Vendor ID</strong> フィールドはオプトアウトクッキーのクッキー名として解釈され、大文字と小文字が区別されます。このクッキーが任意の値で見つかった場合、または <a href=\"/ja/iq-tag-management/consent/consent-management/global-privacy-control/about/\">Global Privacy Control (GPC)</a> のオプトアウト信号が見つかった場合、ユーザーはオプトアウトしたと見なされます。</p>\n<p>統合で使用される <strong>Purpose Keys</strong> とデフォルトの <strong>Purpose Group</strong> に含まれるものは次のとおりです:</p>\n<ul>\n<li><code>no-selling</code> - ユーザーのオプトアウト信号に関係なく許可するタグ。これらのタグはデータを販売/共有しないか、法務チームなどが厳密に必要と見なしています。</li>\n<li><code>yes-selling</code> - 適用される規制やポリシーがユーザーがオプトアウトした後の追跡を禁止しているため、オプトアウトユーザーに対してブロックするタグ。</li>\n</ul>\n<h3 id=\"trustarc\">TrustArc</h3>\n<p>このスニペットを <a href=\"https://trustarc.com/\">trustarc.com</a> またはあなたのウェブサイトでテストし、<a href=\"#how-it-works\">操作方法セクション</a> の指示に従って互換性を確認し、統合に必要な情報を取得してください。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tExpand to view code snippet\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">trustarc</span> (window) {\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;TrustArc&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;trustarc-1.0.3&#39;</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">modeCookieValue</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">truste</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span>(<span style=\"color:#e6db74\">&#39;notice_behavior&#39;</span>)) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;expressed|eu&#39;</span> <span style=\"color:#75715e\">// default to strict EU rules if no cookie\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">modeCookieValue</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#e6db74\">&#39;expressed&#39;</span>) <span style=\"color:#f92672\">===</span> <span style=\"color:#ae81ff\">0</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cookieValue</span> <span style=\"color:#f92672\">=</span>  window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span>(<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">eu</span>.<span style=\"color:#a6e22e\">COOKIE_GDPR_PREF_NAME</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;0,&#39;</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// if we&#39;re in the opt-out model and it&#39;s an implicit decision, we should allow all tags to fire\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">map</span> <span style=\"color:#f92672\">=</span> (window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span> <span style=\"color:#f92672\">&amp;&amp;</span> Object.<span style=\"color:#a6e22e\">keys</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>)[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>[Object.<span style=\"color:#a6e22e\">keys</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>)[<span style=\"color:#ae81ff\">0</span>]]) <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">cookieValue</span> <span style=\"color:#f92672\">=</span> Object.<span style=\"color:#a6e22e\">keys</span>(<span style=\"color:#a6e22e\">map</span>).<span style=\"color:#a6e22e\">join</span>(<span style=\"color:#e6db74\">&#39;,&#39;</span>) <span style=\"color:#75715e\">// all purpose keys that have been added in the UI are returned as consented\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    } \n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">cookie</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">cookieValue</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// just return whatever Vendor ID is expected be active to short-circuit the ID-based double check for now\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">return</span> (window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span> <span style=\"color:#f92672\">&amp;&amp;</span> Object.<span style=\"color:#a6e22e\">keys</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>)[<span style=\"color:#ae81ff\">0</span>]) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;(Vendor ID check disabled)&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">cookie</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span>(<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">eu</span>.<span style=\"color:#a6e22e\">COOKIE_GDPR_PREF_NAME</span>) <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)) <span style=\"color:#66d9ef\">return</span> []\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">cookieConsentValues</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">cookie</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;:&#39;</span>)[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;,&#39;</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">extraSplit</span> <span style=\"color:#f92672\">=</span> []\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cookieConsentValues</span>.<span style=\"color:#a6e22e\">forEach</span>((<span style=\"color:#a6e22e\">el</span>) =&gt; {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">el</span>) <span style=\"color:#66d9ef\">return</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">extraSplit</span>.<span style=\"color:#a6e22e\">push</span>.<span style=\"color:#a6e22e\">apply</span>(<span style=\"color:#a6e22e\">extraSplit</span>, <span style=\"color:#a6e22e\">el</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;|&#39;</span>))\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">trustArcMap</span> <span style=\"color:#f92672\">=</span> {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#ae81ff\">0</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Required&#39;</span>,\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#ae81ff\">1</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Functional&#39;</span>,\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#ae81ff\">2</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Personalization/Advertising&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">output</span> <span style=\"color:#f92672\">=</span> {}\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">extraSplit</span>.<span style=\"color:#a6e22e\">forEach</span>((<span style=\"color:#a6e22e\">key</span>) =&gt; {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">key</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;&#39;</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">output</span>[<span style=\"color:#a6e22e\">key</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">trustArcMap</span>[<span style=\"color:#a6e22e\">key</span>] <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;Category name unknown&#39;</span>\n</span></span><span style=\"display:flex;\"><span>      }\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">output</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">keysOrValues</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;keys&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> Object[<span style=\"color:#a6e22e\">keysOrValues</span>](<span style=\"color:#a6e22e\">permittedPurposesWithNames</span>) <span style=\"color:#75715e\">// keys are IDs, values are names\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>})(window)\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// Debugging / development output - uncomment this code and paste the integration into the console on your test pages each time you make a change to your consent state to test without publishing\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`CMP Found: </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> (</span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - id:          </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - well-formed: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - explicit:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - group list:  </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()))<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - name lookup: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()), <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">6</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;(All purposes are consented in opt-out mode with an implicit decision, but the full purpose list can\\&#39;t be shown in this debug output for technical reasons.)&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    `</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"usercentrics\">Usercentrics</h3>\n<p>このスニペットをあなたのウェブサイトでテストし、互換性を確認し統合に必要な情報を得るために、<a href=\"#how-it-works\">How it works</a> セクションの指示に従ってください。\nUsercentricsの統合では、<strong>Vendors</strong> を <strong>Purposes</strong> として使用します。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tExpand to view code snippet\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">usercentricsBrowserSdkV2</span> (window) {\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Usercentrics Browser SDK&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;usercentrics-1.0.3&#39;</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getServicesBaseInfo</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getServicesBaseInfo</span>()\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> (window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getSettingsCore</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getSettingsCore</span>().<span style=\"color:#a6e22e\">id</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// only support opt-In model for Usercentrics for now, can be added if needed\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">isConsentRequired</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">isConsentRequired</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the first entry as a proxy for all\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the first entry as a proxy for all\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">consentHistory</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">history</span>) <span style=\"color:#f92672\">||</span> []\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">lastHistoryEntryType</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">consentHistory</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">consentHistory</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">consentHistory</span>[<span style=\"color:#a6e22e\">consentHistory</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">-</span> <span style=\"color:#ae81ff\">1</span>].<span style=\"color:#a6e22e\">type</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">lastHistoryEntryType</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;explicit&#39;</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">foundOptIn</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the mapping if found, with a fallback (Usercentrics default value) if not specified in the mapping\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// check vendors if there&#39;s an object, look for at least one\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">tagInfo</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> ((<span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">status</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">foundOptIn</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>      }\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">foundOptIn</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">vendorArray</span> <span style=\"color:#f92672\">=</span> []\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">tagConsent</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">status</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">vendorArray</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">name</span>)\n</span></span><span style=\"display:flex;\"><span>      }\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">vendorArray</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>\n</span></span><span style=\"display:flex;\"><span>})(window)\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> - </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - vendor id:            </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed decision: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit decision:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - consented purposes:   </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()).<span style=\"color:#a6e22e\">sort</span>(),<span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">8</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"カスタム統合テンプレート\">カスタム統合テンプレート</h3>\n<p>カスタム統合テンプレートについての詳細と使用方法については、<a href=\"/ja/iq-tag-management/consent/consent-integrations/custom-cmp/\">custom integration</a> を参照してください。</p>\n"
        }  

    , 
        {
            "weight": "475",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/validate-and-debug/",
            "title": "同意統合の検証とデバッグ",
            "body": "<h2 id=\"公開前にconsent-integrationsを検証する\">公開前にConsent Integrationsを検証する</h2>\n<p>あなたの同意統合を検証し、デバッグするために、統合テンプレートを他の依存関係なしにサイトのJavaScriptコンソールに貼り付けます。Consent Integrationテンプレートは編集可能で、スタンドアロンで設計されているため、ウェブサイトのコンソールからデバッグが可能です。</p>\n<p>テンプレートの使用は、<a href=\"/ja/iq-tag-management/consent/consent-integrations/custom-cmp/\">カスタム統合の作成</a>に役立ち、また、ベンダーID、目的キーを取得したり、構成前にデフォルトのテンプレートがCMPのインスタンスでカスタマイズなしで動作することを確認するためにも使用できます。現在のテンプレートには、検証スニペットが含まれており、<a href=\"/ja/iq-tag-management/consent/consent-integrations/supported-vendors/\">ドキュメンテーション</a>で提供されています。</p>\n<h2 id=\"公開後にデバッグモードを有効にする\">公開後にデバッグモードを有効にする</h2>\n<p>Tealium iQの<a href=\"/ja/platforms/javascript/debugging/\">デバッグモード</a>は、機能がアクティブである場合、あなたのConsent Integrationsからの詳細なステータスとエラーメッセージを含んでいます。ただし、免除が適用される場合は除きます。免除が適用されると、<code>window.tealiumCmpIntegration</code>が定義され、<code>window.tealiumCmpIntegration.exemptionMap</code>にアクティブな免除が表示されます。</p>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>コンソール出力でのフィルタとして<code>/SENDING|****/</code>を使用して、関連するデバッグメッセージのみを表示します。</p>\n<h2 id=\"公開後にconsent-integrationsを検証する\">公開後にConsent Integrationsを検証する</h2>\n<p>Tealium iQ Consent Integrationsは、DOMに<code>window.tealiumCmpIntegration</code>という名前のグローバルオブジェクトを作成し、デバッグに役立ついくつかのプロパティを持っています。また、デバッグと検証を容易にするために、コンポーネント関数を個別に呼び出すこともできます。コンポーネント関数の詳細については、<a href=\"/ja/iq-tag-management/consent/consent-integrations/custom-cmp/\">カスタムCMP統合</a>を参照してください。</p>\n<h3 id=\"例\">例</h3>\n<p>この例では、CMP統合に関する重要な情報を取得する方法について説明します。</p>\n<p>CMP統合に関する重要な情報を確認し、顧客の決定が正しくキャプチャされていることを確認するために、以下の手順を完了します：</p>\n<ol>\n<li>この<a href=\"https://www.otprivacy.com/user/jmyles/TagManagerDemo/OTKicks_Tealium/index.html?otreset=false&amp;otpreview=true&amp;otgeo=IE\">デモサイト</a>またはアクティブな同意統合がある任意のサイトを訪れ、以下のスニペットをブラウザのコンソールに貼り付けます：\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> - </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - vendor id:            </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed decision: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit decision:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - consented purposes:   </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()).<span style=\"color:#a6e22e\">sort</span>(),<span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">8</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)\n</span></span></code></pre></div></li>\n<li>上記のスニペットをデモサイトのコンソールに貼り付けると、次のような結果が返されます：\n<pre tabindex=\"0\"><code>OneTrust - Opt-in Model\n\nChecks:\n  - vendor id:            b38364e4-b2c4-4349-8e4e-48cf28a35db8\n  - well-formed decision: true\n  - explicit decision:    false\n  - consented purposes:   [\n        &#34;C0001&#34;\n]\n</code></pre></li>\n<li>Webページ上で<strong>全てのクッキーを承認する</strong>をクリックし、同じスニペットを再度貼り付けます。次の出力は、決定が統合によって正しく理解され、キャプチャされたことを示しています：\n<pre tabindex=\"0\"><code>OneTrust - Opt-in Model\n\nChecks:\n  - vendor id:            b38364e4-b2c4-4349-8e4e-48cf28a35db8\n  - well-formed decision: true\n  - explicit decision:    true\n  - consented purposes:   [\n        &#34;C0001&#34;,\n        &#34;C0002&#34;,\n        &#34;C0003&#34;,\n        &#34;C0004&#34;\n]\n</code></pre></li>\n</ol>\n<h2 id=\"公開後に衝突とenforcement-rulesをデバッグする\">公開後に衝突とEnforcement Rulesをデバッグする</h2>\n<p>​<code>window.tealiumCmpIntegrations</code>には、ページ上でどの統合が強制されているかを理解するのに役立ついくつかの便利なプロパティがあります。例えば、<code>loadRules</code>には、どの同意統合が強制されていて、衝突があったかどうか（これによりTealium iQとすべてのタグがブロックされます）を示す子プロパティがあります。</p>\n<ul>\n<li><code>map</code>と<code>tagBasedMap</code>は、タグUIDとPurpose Keysの関係の異なるビューを示します。</li>\n<li><code>tiqGroupName</code>は、Purpose KeyとTealium iQ自体のマッピングを示します。</li>\n<li><code>cmpName</code>は、現在アクティブなCMP（テンプレートによる）を示します。</li>\n<li><code>cmpIntegrationVersion</code>は、使用しているベンダー固有の統合テンプレートの現在のバージョンを示します。</li>\n<li><code>version</code>は、使用している基本的な同意強制フレームワークのバージョンを示します。</li>\n</ul>\n<p>このオブジェクトに含まれる特定の統合機能の詳細については、カスタム統合の作成に関する関連<a href=\"/ja/iq-tag-management/consent/consent-integrations/custom-cmp/\">ドキュメンテーション</a>を参照してください。</p>\n"
        }  

    , 
        {
            "weight": "480",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/custom-cmp/",
            "title": "カスタムCMP統合",
            "body": "<h2 id=\"仕組み\">仕組み</h2>\n<p>Tealium Consent Integrationsは、以下の二部分から構成されています：</p>\n<ul>\n<li>Tealium iQ用の同意強制フレームワーク（<code>utcm_framework</code> テンプレート）。</li>\n<li>Tealium iQの同意強制フレームワークを活用するCMP特有の統合テンプレート。これらの統合テンプレートはできるだけ軽量に設計されています。</li>\n</ul>\n<p>私たちの<a href=\"/ja/iq-tag-management/consent/consent-integrations/supported-vendors/\">事前構築された統合</a>は、様々な同意管理プラットフォーム（CMP）との統合をサポートしています。しかし、以下のような場合にはカスタム統合が推奨されます：</p>\n<ul>\n<li>事前に構築された統合がないCMPを使用する場合。</li>\n<li>同意をキャプチャするための内部ツールを使用する場合。</li>\n<li>標準の統合を破壊する広範なカスタマイズを伴うサポートされているCMPを使用する場合。</li>\n</ul>\n<p>このような場合には、カスタム統合を使用できます。JavaScript関数を使用することで、任意の同意キャプチャツールが強制フレームワークを活用できます。</p>\n<p>新しいカスタム統合を追加するには、既存の統合と提供されたテンプレートをガイドとして使用してください。</p>\n<p>以下は、カスタム統合を作成するための基本的なワークフローを説明しています：</p>\n<ol>\n<li>Tealium iQ外部（CMPが実装されているウェブサイト）で統合を開発およびデバッグします。</li>\n<li>Tealium iQで新しいカスタム同意統合および目的グループを追加します。詳細については、<a href=\"/ja/iq-tag-management/consent/consent-integrations/manage/\">同意統合と目的グループの管理</a>を参照してください。</li>\n<li>Tealium iQと適切なタグを目的グループ内の目的に割り当てます。</li>\n<li>テンプレートを作成するために、プロファイルを保存します。</li>\n<li>新しく作成されたテンプレートを編集します。詳細については、<a href=\"/ja/iq-tag-management/templates/manage/\">テンプレートの管理</a>を参照してください。</li>\n<li>テンプレートを開発またはテスト環境に公開して、すべてが期待通りに動作することを確認し、その後通常のテストおよび公開フローに従います。</li>\n</ol>\n<h2 id=\"カスタム統合の開発デバッグおよび検証\">カスタム統合の開発、デバッグ、および検証</h2>\n<p>カスタムCMP統合を作成するには、以下の<a href=\"#custom-integration-template\">カスタムテンプレート</a>を編集してCMPの要件に合わせます。カスタムテンプレートのコメントで動作例を参照してください。</p>\n<h3 id=\"公開前の開発とデバッグ\">公開前の開発とデバッグ</h3>\n<p>開発中にデバッグするために以下の手順を完了します：</p>\n<ol>\n<li><a href=\"#custom-integration-template\">カスタムテンプレート</a>の最後にある<strong>デバッグ</strong>ブロックのコメントを外します。</li>\n<li>サポートしたいCMPを実行しているウェブサイトのコンソールにテンプレートを貼り付けます。</li>\n<li>デバッグコードブロックが同意決定を出力します。</li>\n<li>決定をカスタマイズしてテンプレートを再度貼り付け、新しく解釈された同意決定を確認します。</li>\n<li>テンプレートに満足したら、Tealium iQに貼り付けて公開する前に再度デバッグブロックをコメントアウトします。</li>\n</ol>\n<p>プロファイルを保存して<a href=\"/ja/iq-tag-management/templates/manage/\">テンプレートを編集</a>することで、デバッグスニペットも見つけることができます。</p>\n<h3 id=\"公開後の検証\">公開後の検証</h3>\n<p>公開後にテンプレートをデバッグおよび検証する方法は二つあります：デバッグモードを使用するか、<code>window.tealiumCmpOutput</code>オブジェクトを使用するかです。</p>\n<h4 id=\"デバッグモードの使用\">デバッグモードの使用</h4>\n<p><a href=\"/ja/platforms/javascript/debugging/\">デバッグモード</a>を使用するには：</p>\n<ul>\n<li>コンソールで<code>document.cookie = &quot;utagdb=true&quot;</code>を構成して<code>utagdb</code>クッキーを<code>true</code>に構成します。</li>\n<li>関連する出力のみを表示するようにコンソールフィルタを構成します（デバッグ出力で提案されたフィルタを使用）。</li>\n<li>期待通りに動作するかどうかを確認するために異なるオプションをテストします。</li>\n</ul>\n<h4 id=\"windowtealiumcmpoutputオブジェクトの使用\"><code>window.tealiumCmpOutput</code>オブジェクトの使用</h4>\n<p><code>window.tealiumCmpOutput</code>オブジェクトを使用するには：</p>\n<ul>\n<li>テンプレートの最後にコメントアウトされたデバッグコードブロックをコンソールに貼り付けて、あなたの決定と関連する出力のみを出力します。</li>\n<li>必要に応じて、テンプレート内の関数を個別に呼び出すか、このオブジェクトの他の便利なプロパティにアクセスすることもできます。</li>\n</ul>\n<p>事前構築された統合およびカスタム統合の詳細なデバッグのヒントについては、<a href=\"/ja/iq-tag-management/consent/consent-integrations/validate-and-debug/\">同意統合の検証とデバッグ</a>を参照してください。</p>\n<h2 id=\"統合関数\">統合関数</h2>\n<p>統合のCMP特有のコンポーネントは、<code>window.tealiumCmpIntegration</code>オブジェクトを使用して定義されます。</p>\n<p><code>window.tealiumCmpIntegration</code>オブジェクトは、名前<code>.cmpName</code>、バージョン<code>.cmpIntegrationVersion</code>、および以下の関数で構成されています：</p>\n<h3 id=\"動作モードの決定\">動作モードの決定</h3>\n<ul>\n<li><code>.cmpCheckIfOptInModel</code> - 統合が<code>opt-in</code>モデルまたは<code>opt-out</code>モデルで動作するかどうかを決定します。ブール値を返します。</li>\n</ul>\n<h3 id=\"決定の取得\">決定の取得</h3>\n<ul>\n<li><code>.cmpFetchCurrentConsentDecision</code> - 同意決定の現在の生バージョン（CMPからの生バージョン）を取得します。結果はオブジェクトでなければならず、すべての後続の関数に引数として渡されます。</li>\n</ul>\n<h3 id=\"決定の検証と標準化\">決定の検証と標準化</h3>\n<ul>\n<li>\n<p><code>.cmpCheckForWellFormedDecision</code> - 同意決定の生バージョンが適切に形成され、理解可能であるかどうかをチェックします。ブール値を返します。</p>\n</li>\n<li>\n<p><code>.cmpCheckForTiqConsent</code> - 生の同意決定にTealium iQによるデータ処理の許可が含まれているかどうかを決定します。falseの場合、何も実行されません。ブール値を返します。</p>\n</li>\n<li>\n<p><code>.cmpCheckForExplicitConsentDecision</code> - 生の同意決定が<code>explicit</code>（明示的）か<code>implicit</code>（暗黙的）かを決定します。ブール値を返します。</p>\n</li>\n<li>\n<p><code>.cmpConvertResponseToGroupList</code> - 生の決定を下流の強制のために許可された目的キーの単純な配列に変換します。同意された目的キーの配列を返します。</p>\n</li>\n</ul>\n<h3 id=\"同意更新の監視とトリガー\">同意更新の監視とトリガー</h3>\n<ul>\n<li>\n<p><code>.cmpAddCallbackToTriggerRecheck</code> - CMPの同意ステータスが変更されるたびに呼び出されるコールバック関数を登録します。これにより、ポーリングに依存せずにTealium iQが最新の同意決定を迅速に更新できるようになります。</p>\n<p><code>cmpAddCallbackToTriggerRecheck</code>は、CMPがコールバックまたは代替実装方法を通じて同意ステータスの変更を通知するたびに<code>triggerRecheck()</code>を呼び出すように構成されていることを確認してください。バナーが暗黙の同意のために入れるときやCMPのロード時の類似点で<code>triggerRecheck()</code>を呼び出します。詳細については、<a href=\"#custom-integration-template\">カスタム統合テンプレート</a>のコメントを参照してください。現在コールバックをサポートしている統合については、<a href=\"/ja/iq-tag-management/consent/consent-integrations/supported-vendors/\">サポートされているベンダー統合</a>を参照してください。</p>\n</li>\n</ul>\n<h2 id=\"カスタム統合テンプレート\">カスタム統合テンプレート</h2>\n<p>以下は、独自のカスタム統合を開始するための空白のテンプレートです。テンプレートには、同意統合をデバッグおよび検証するために使用できるデバッグスニペットがテンプレートの最後に含まれています。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tコードスニペットを表示する\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">myCustomConsentIntegration</span> (window) {\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">/**\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * このテンプレートは編集されることを意図しており、カスタムCMP / キャプチャツールのサポートを構築するためのものです。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * 例として挙げられるコード（コメントアウトされています）は、オプトアウトクッキーをチェックし、以下のいずれかの決定を返す統合から取られています：\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *  - [&#39;no-selling&#39;] (任意の値が見つかったオプトアウトクッキー) - 常に明示的な決定（オプトアウトクッキーが構成されています）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *  - [&#39;no-selling&#39;, &#39;yes-selling&#39;] (オプトアウトクッキーが見つからない) - 常に暗黙的な決定（クッキーが構成されていません）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * オプトアウトクッキーの（大文字と小文字を区別する）名前はUIの「Vendor ID」フィールドから取られます。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * 詳細については、https://docs.tealium.com/iq-tag-management/consent-integrations/supported-vendors/#opt-out-cookie--gpc を参照してください\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * \n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * (上記の統合はこの例のために単純化されました - GPCロジックは削除されました)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP特有の機能とラベル\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Custom Example&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;v1.1.0&#39;</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">```window.tealiumCmpIntegration.cmpFetchCurrentLookupKey = cmpFetchCurrentLookupKey\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">window.tealiumCmpIntegration.cmpCheckIfOptInModel = cmpCheckIfOptInModel\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">window.tealiumCmpIntegration.cmpCheckForWellFormedDecision = cmpCheckForWellFormedDecision\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">window.tealiumCmpIntegration.cmpCheckForExplicitConsentDecision = cmpCheckForExplicitConsentDecision\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">window.tealiumCmpIntegration.cmpCheckForTiqConsent = cmpCheckForTiqConsent\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">window.tealiumCmpIntegration.cmpConvertResponseToGroupList = cmpConvertResponseToGroupList\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// 下記の行を削除（コメントアウト）してください。ポーリングを使用する場合や、コールバックをサポートしていないソリューションを使用する場合はこの行を削除してください。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">window.tealiumCmpIntegration.cmpAddCallbackToTriggerRecheck = cmpAddCallbackToTriggerRecheck;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// UIで入力されたベンダーIDを単一の関連統合のために引き出す\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">var optOutCookieName = (window.tealiumCmpIntegration &amp;&amp; window.tealiumCmpIntegration.map &amp;&amp; Object.keys(window.tealiumCmpIntegration.map)[0]) || &#39;error-no-map-found-so-no-cookie-name-available&#39;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">*/\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// CMPが「オプトイン」モデル（GDPRスタイル）を実行しているかどうかを返す必要があります。このオプトアウトクッキーの例はオプトアウトモデル（CCPA/CPRAスタイル）のみをサポートしているため、これはfalseを返すようにハードコードされています。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">function cmpCheckIfOptInModel () {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  /*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  return false\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  */\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// CMP固有の生のオブジェクト（オブジェクトでなければならない）を返す必要があります。この出力は、以下の関数でcmpRawOutput引数として使用されます。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">function cmpFetchCurrentConsentDecision () {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  /*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  // まだ許可されていないため、ここではタグマネージャー機能を使用できません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  var readCookie = function (name) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    var reString = &#39;(?:(?:^|.*;\\\\s*)&#39; + name + &#39;\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$&#39;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    var re = new RegExp(reString)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    var cookieValue = document.cookie.replace(re, &#39;$1&#39;)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    if (!cookieValue) return undefined\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    return cookieValue\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  var cookie = readCookie(optOutCookieName) || &#39;opt-out-cookie-not-found&#39;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  return { cookieState: cookie } // 統合を機能させるためにオブジェクトを返す必要があります - これにより、後で他のプロパティ（グローバルプライバシーコントロールなど）を追加できます\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  */\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// CMPの構成が正しいことをTealium iQが確認するのに役立つ文字列を返す必要があります（他のページ/ CMPの他の顧客からではない）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">function cmpFetchCurrentLookupKey () {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  /*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  return optOutCookieName\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  */\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// 生の決定がCMPの期待に合っているかどうかを返す必要があります。真偽値を返す必要があります。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">function cmpCheckForWellFormedDecision (cmpRawOutput) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  /*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  return typeof cmpRawOutput === &#39;object&#39; &amp;&amp; typeof cmpRawOutput.cookieState === &#39;string&#39;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  */\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// 同意決定がユーザーによって明示的に行われたかどうかを返す必要があります。真偽値を返す必要があります。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">function cmpCheckForExplicitConsentDecision (cmpRawOutput) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  /*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  // この例では、オプトアウトクッキーが構成されているかどうかを確認することで、決定が明示的であるかどうかを判断することしかできません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  if ((typeof cmpRawOutput === &#39;object&#39; &amp;&amp; typeof cmpRawOutput.cookieState === &#39;string&#39; &amp;&amp; cmpRawOutput.cookieState !== &#39;opt-out-cookie-not-found&#39;)) return true\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  return false\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  */\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// 同意されたベンダー/目的の配列を返す必要があります。これらはTealium iQの目的と正確に一致する必要があります。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">function cmpConvertResponseToGroupList (cmpRawOutput) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  /*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  var consentDecision = [&#39;no-selling&#39;] // データを販売/共有しないタグは常に許可されます\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  // データを販売するタグが許可されているかどうかを判断するために、空でないオプトアウトクッキーを簡単にチェックします\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  if (cmpRawOutput.cookieState === &#39;opt-out-cookie-not-found&#39;) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    consentDecision.push(&#39;yes-selling&#39;) // クッキーが見つからないので、データの販売/共有が問題ないと仮定する必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  return consentDecision\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  */\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// 基盤となるフレームワークがサポートしている場合、ポーリングを避けるために着信コールバック機能を使用します\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// トリガーチェック関数を頻繁に呼び出す方が良いです（ネガティブな影響はありません）が、少ないと（同意の変更とそれに伴うデータが見逃される）問題があります。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// CMPの同意ステータスに変更があるたびにトリガーチェックを呼び出す必要があります。例えば：\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">//  - 初期同意ポップアップ（オプトインモデルでの暗黙の同意）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">//  - 明示的な同意の変更\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">//  - 以前の決定が行われたときの初期CMPロード\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// この関数がwindowスコープのオブジェクトに含まれていない場合、ポーリングが使用されます\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">function cmpAddCallbackToTriggerRecheck (triggerRecheck) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  // この例では、例と一致するようにクッキーの変更をリスンするリスナーを構成しますが、適切なものをリスンすることができます\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  /*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  (function() {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      // 元のdocument.cookie記述子\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      const originalCookieDescriptor = Object.getOwnPropertyDescriptor(Document.prototype, &#39;cookie&#39;);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      // カスタムイベントを作成\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      function emitCookieChange(value) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">        const event = new CustomEvent(&#39;cookieUpdated&#39;, {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">          detail: {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">            cookies: value\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">          }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">        });\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">        document.dispatchEvent(event);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      // document.cookieプロパティをオーバーライド\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      Object.defineProperty(document, &#39;cookie&#39;, {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">        get: function() {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">          return originalCookieDescriptor.get.call(document);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">        },\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">        set: function(value) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">          originalCookieDescriptor.set.call(document, value);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">          emitCookieChange(value);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">        }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      });\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    })();\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    // 例のリスナー\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    document.addEventListener(&#39;cookieUpdated&#39;, (e) =&gt; {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      // オプトアウトクッキーが更新されたときにコールバック関数をトリガーします（ここではいくつかの誤検知があります）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      if ((e.detail.cookies.indexOf(optOutCookieName)) !== -1) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">          triggerRecheck();\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    });\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  */\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// この関数やそれ以下のものを変更する必要はありません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">function cmpCheckForTiqConsent (cmpRawOutput, tiqGroupName) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  // 理解できないものはオプトアウトとして扱います\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  if (cmpCheckForWellFormedDecision(cmpRawOutput) !== true) return false\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  tiqGroupName = tiqGroupName || &#39;tiq-group-name-missing&#39;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  var allowedGroups = cmpConvertResponseToGroupList(cmpRawOutput)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  return allowedGroups.indexOf(tiqGroupName) !== -1\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">})(window)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">// デバッグ/開発出力 - このブロックのコメントを外し、このテンプレート全体をテストページに貼り付け/再貼り付けしてください\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">var outputString = `</span><span style=\"color:#a6e22e\">$</span>{<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span>} <span style=\"color:#a6e22e\">Model</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">Checks</span><span style=\"color:#f92672\">:</span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">-</span> <span style=\"color:#a6e22e\">id</span><span style=\"color:#f92672\">:</span>          <span style=\"color:#a6e22e\">$</span>{<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()}\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">-</span> <span style=\"color:#a6e22e\">well</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">formed</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">$</span>{<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())}\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">-</span> <span style=\"color:#a6e22e\">explicit</span><span style=\"color:#f92672\">:</span>    <span style=\"color:#a6e22e\">$</span>{<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())}\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">-</span> <span style=\"color:#a6e22e\">group</span> <span style=\"color:#a6e22e\">list</span><span style=\"color:#f92672\">:</span>  <span style=\"color:#a6e22e\">$</span>{<span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()))}\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">console.log(outputString);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">*/\n</span></span></span></code></pre></div>\n    </div>\n</div>\n</div>\n"
        }  

    , 
        {
            "weight": "485",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/enforcement-conditions-conflict/",
            "title": "実施条件の競合の取り扱い",
            "body": "<h2 id=\"プライバシー原則\">プライバシー原則</h2>\n<p>私たちは、プライバシーバイデザインとプライバシーバイデフォルトの原則を厳格に遵守してConsent Integrationsを構築しました。Consent Integrationsは、ビジネスのデータ活性化が関連するポリシーや規制を遵守し、ユーザーエラーや誤構成によるデータ漏洩を防ぐことを保証します。これらの原則は、データの処理と活性化が明確な同意または明確な条件が満たされた場合にのみ許可されることを要求します。</p>\n<h2 id=\"consent-integrationsが実施条件の競合をどのように取り扱うか\">Consent Integrationsが実施条件の競合をどのように取り扱うか</h2>\n<ul>\n<li><strong>少なくとも1つの同意統合または免除がアクティブな場合</strong>：あなたの同意管理プラットフォーム（CMP）からの特定の信号がなければ、データの処理は許可されません。</li>\n<li><strong>2つ以上の実施ルールが統合で重なる場合</strong>：Tealium iQはロードされず、タグは発火しません。</li>\n<li><strong>統合が免除と重なる場合</strong>：単一の統合が任意の数の免除と重なる場合、統合が強制され、免除は無視されます。</li>\n</ul>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>曖昧なシナリオでは、2つの統合がアクティブで、その両方の実施ルールが<code>true</code>と評価される場合など、Consent Integrationsは潜在的なデータ漏洩を防ぐためにデータの処理と活性化を保留します。この動作は、ブロックされたタグからのデータの損失を招く可能性がありますが、データ漏洩のリスクを軽減するための予防措置です。</p>\n<p>以下の表は、アクティブな免除と統合の数に応じて、Consent Integrationsが競合をどのように取り扱うかを示しています：</p>\n<table>\n<thead>\n<tr>\n<th>免除</th>\n<th>統合</th>\n<th>競合の取り扱い</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>すべてのデータ処理をブロック</td>\n</tr>\n<tr>\n<td>1+</td>\n<td>0</td>\n<td>すべてのデータ処理を許可</td>\n</tr>\n<tr>\n<td>任意</td>\n<td>1</td>\n<td>目的特定のブロックを適用</td>\n</tr>\n<tr>\n<td>任意</td>\n<td>2+</td>\n<td>すべてのデータ処理をブロック</td>\n</tr>\n</tbody>\n</table>\n"
        }  

    ]
}
