
{
    "kind": "term",
    "name": "iq_tabs_consent_integrations",
    "count": 9,
    "items": [

    
        {
            "weight": "115",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-register/",
            "title": "Tealium同意登録",
            "body":"<p>Tealium同意登録は、<a href=\"/ja/iq-tag-management/consent/consent-integrations/about/\">Tealium iQ Consent Integrations</a>と<a href=\"/ja/iq-tag-management/consent/consent-management/about/\">Consent Manager</a>が、ウェブサイトのコード全体で同意信号を公開するために使用されます。また、Google同意モードタグがこれらの信号に直接アクセスし、適切な反応を可能にします。</p><h2 id=\"主な特徴\">主な特徴</h2><ul><li><strong>ユニバーサル同意イベント</strong>: 最新のConsent Manager（<code>cmGeneral</code>テンプレートv3.1.0から）とConsent Integrations（フレームワークテンプレートv1.2.0から）は、同意構成がロードされたり更新されたりするときにイベントを発行するために同意登録を使用します。これらの変更は、<code>window.tealiumConsentRegister</code>オブジェクトのページ全体でアクセス可能です。詳細については、<a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\">MDN Web Docs: イベントの紹介</a>を参照してください。</li><li><strong>すべての同意信号のサポート</strong>: <code>implicit</code>と<code>explicit</code>の両方の同意信号を発行し、保持します。</li><li><strong>イベントのリスニング</strong>: ページ上の任意のタグやスクリプトは、<code>consent_loaded</code>と<code>consent_changed</code>イベントをリッスンできます。これにより、同意ステータスの変更に基づくレスポンシブなアクションが可能になります。詳細については、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\">MDN Web Docs: EventTarget addEventListener() method</a>を参照してください。</li><li><strong>拡張のための堅固な基盤</strong>: Tealium同意登録は、高度なカスタマイズオプションを提供し、将来の新機能の追加を効率化する新しい堅固なシステムを導入します。</li></ul><h2 id=\"仕組み\">仕組み</h2><p>Tealium同意登録は、同意決定をウェブサイトのコード全体で共有できるようにすることで、同意管理を改善します。これにより、Google同意モードなどの機能がこれらの決定にアクセスし、適切なアクションを取ることが可能になります。同意信号の標準化レイヤーとして機能し、標準化された同意信号をウェブページで簡単に利用できるようにします。</p><h2 id=\"google同意モード\">Google同意モード</h2><p>必要な背景と文脈については、<a href=\"/ja/iq-tag-management/consent/google-consent-mode/\">Google同意モード</a>を参照してください。Googleタグをページに統合する適切なタイミングと方法については、リーダーシップと法務チームと相談することが重要です。</p><h3 id=\"前提条件\">前提条件</h3><ul><li>CMPから既存の同意モード機能を無効化して、競合を防ぎます。</li><li>使用ケースに基づいて、Consent IntegrationsフレームワークまたはConsent Manager <code>cmGeneral</code>テンプレートの最新バージョンに更新します。</li><li>同意モードマッピングのためのJavaScript拡張を追加します。詳細については、<a href=\"/ja/iq-tag-management/consent/google-consent-mode/#consent-purpose-mapping\">同意目的マッピング</a>を参照してください。</li><li><a href=\"/ja/client-side-tags/google-consent-mode-tag/\">Google同意モードタグ</a>をインストールします。同意目的マッピング拡張からの変数名を使用する場合、追加のマッピングは必要ありません。</li><li>同意モードタグ（および関連するすべてのGoogleタグ）を適切にカテゴライズします。高度な同意モードを実装している場合は、常に発火が許可されていることを確認します。また、組織が取るアプローチに応じて、適切な同意がある場合にのみ発火が許可されていることを確認します。</li></ul><h2 id=\"高度な使用例\">高度な使用例</h2><h3 id=\"同意決定へのアクセス\">同意決定へのアクセス</h3><p><code>window.tealiumConsentRegister.currentDecision</code>オブジェクトは、ウェブページ上の現在の同意決定に直接アクセスすることを可能にします。これにより、以下のようなカスタムアクションの実装が簡素化されます：</p><ul><li>ベンダーにオプトアウトイベントを送信して、オーディエンスからの削除と完全なダウンストリームの無効化を可能にします。</li><li>Tealium iQ拡張を使用して、CMPが提供するものに加えて同意ログの追加レイヤーを追加します。</li><li>同意の変更を追跡し、JavaScript API呼び出しを通じて現在の決定にアクセスを可能にします。</li></ul><p>Consent IntegrationsとConsent Managerでは、配列内の目的IDは特定の構成ごとに異なります。</p><pre tabindex=\"0\"><code>// 現在の決定を取得するvar currentDecision = window.tealiumConsentRegister.currentDecision// 現在のページがロードされてから登録されたすべての決定を取得するvar allDecisionsOnThisPage = window.tealiumConsentRegister.decisions</code></pre><p><strong>OneTrustを使用したConsent Integrationsの例</strong></p><p>この例では、最初にオプトインモデル（暗黙の決定）で始まり、次にオプトインとオプトアウトを行います。</p><figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-and-consent-integrations.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-and-consent-integrations.png\"         alt=\"OneTrustを使用したConsent Integrationsの例\"         title=\"OneTrustを使用したConsent Integrationsの例\"/>    </a></figure><h3 id=\"同意の変更を監視する\">同意の変更を監視する</h3><p>同意登録は、<code>implicit</code>または<code>explicit</code>の同意信号が初めてページ上で検出されたとき、または同意決定が更新されたときにイベントを発行します。</p><pre tabindex=\"0\"><code>// 同意の変更を表面化するための例のイベントリスナーを構成する// ページコードごとに一度実行できるように実装する - 使用ケースに応じて、Pre LoaderまたはDOM Readyを使用できますwindow.addEventListener(&#39;consent_loaded&#39;, (event) =&gt; {  console.log(&#39;Consent loaded:&#39;, event.detail.decision);});window.addEventListener(&#39;consent_updated&#39;, (event) =&gt; {  console.log(&#39;Consent updated:&#39;, event.detail.decision);});</code></pre><p><strong>初回ランディングでオプトインするヨーロッパのユーザーのConsent Manager例</strong></p><figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-and-consent-manager.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-and-consent-manager.png\"         alt=\"Consent Managerの例\"         title=\"Consent Managerの例\"/>    </a></figure><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>透明性のため、これらの決定には常に<code>always_on</code>カテゴリが含まれます。なぜなら、<code>omitted</code>タグは常に許可されているからです。</p><h2 id=\"同意イベントとリスナーのフローダイアグラム\">同意イベントとリスナーのフローダイアグラム</h2><p>新しいイベントとリスナーを示すフローの簡略化された概観。</p><figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-flow.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-flow.png\"         alt=\"Consent Integrations決定フロー\"         title=\"Consent Integrations決定フロー\" width=\"1500\" height=\"2000\"/>    </a></figure>"
        }  

    , 
        {
            "weight": "120",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/google-consent-mode/",
            "title": "Google同意モード",
            "body":"<p>Google同意モードは、データ収集のためのユーザー同意を管理するための2つのアプローチを提供します：<strong>基本的な同意モード</strong>と<strong>高度な同意モード</strong>。これらのモードを理解することは、データプライバシー規制の遵守とデータ収集戦略の最適化にとって重要です。</p><ul><li><p><strong>基本的な同意モード</strong>：ユーザーの同意が得られない場合にタグとコネクタアクションをブロックする従来のアプローチです。これにより、同意なしに個人を特定可能な情報（PII）を含むデータの無許可収集を防ぎます。</p></li><li><p><strong>高度な同意モード</strong>：このアプローチは、同意の状態に関係なくGoogleのタグをロードし、ユーザーの同意決定をGoogleに通知することを提案します。その後、タグは以下のいずれかの方法で適応します：</p><ul><li>トラッキングに同意していないユーザーから匿名データを収集するためのクッキーレスエンドポイントを使用する。</li><li>同意を提供したユーザーに対して標準エンドポイントを使用する。</li></ul><p>この高度な戦略は、PIIの使用に対するユーザーの同意を尊重しつつ、分析と広告のコンバージョンのためのデータ収集を最大化することを目指しています。</p></li></ul><p>同意なしでのデータ収集をブロックする（基本）か、標準的なトラッキングに同意していない訪問の匿名データを収集するためのGoogleの方法を採用する（高度）か、どちらの同意モードがあなたのポリシーに合致するかを決定するためには、法務チームやリーダーシップチームと相談することが重要です。</p><p>詳細については、<a href=\"https://support.google.com/google-ads/answer/10000067\">Google Ads Help: About consent mode</a>を参照してください。</p><h2 id=\"使い方\">使い方</h2><p>Google同意モードを実装するには、同意選択をGoogle同意モード構成にマッピングし、デフォルトの同意構成とあなたの同意管理プラットフォーム（CMP）からのカテゴリマッピングを持つ<a href=\"/ja/client-side-tags/google-consent-mode-tag/\">Google Consent Mode tag</a>を構成するためのJavaScript Code拡張を追加します。訪問が同意選択を行うと、Google同意モードタグはこれらの構成をGoogleタグに通知し、それが適切なデータ収集エンドポイント（デフォルトの収集エンドポイントまたはクッキーレスエンドポイント）を選択してデータをGoogleに送信します。</p><p>基本的な同意モードと高度な同意モードの両方で、Google Consent Modeタグは自身でデータを送信しないため、常に発火させることができます。代わりに、他のタグが反応するための信号を提供します。</p><h2 id=\"同意目的のマッピング\">同意目的のマッピング</h2><p>エンドユーザーの同意選択をGoogle同意モード構成にマッピングするには、JavaScript Code拡張が必要です。この拡張を使用して、さまざまな目的やベンダーに対するエンドユーザーの現在の同意決定をキャプチャし、対応するGoogle同意モードの目的や構成に<code>granted</code>または<code>denied</code>（または特定のシナリオで<code>true</code> / <code>false</code>）のステータスを割り当てます。</p><h3 id=\"javascript拡張テンプレート\">JavaScript拡張テンプレート</h3><p>Javascript拡張を構成するには、以下のテンプレートコードを使用します。これはロードルールの後に実行され、常に実行するように構成されています：</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// After Load Rules - Run Always</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">consent_decision</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">tealiumConsentRegister</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tealiumConsentRegister</span>.<span style=\"color:#a6e22e\">currentDecision</span>) <span style=\"color:#f92672\">||</span> [];</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ad_storage_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ad_user_data_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_analytics_storage_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ad_personalization_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ads_data_redaction</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;true&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;false&#39;</span>;</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_url_passthrough</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;true&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;false&#39;</span>;</span></span></code></pre></div><p><code>&lt;your-logic-here&gt;</code>を、ユーザーの同意に基づいて<code>granted</code>または<code>denied</code>、<code>true</code>または<code>false</code>のいずれかに評価される条件に置き換えます。</p><h3 id=\"例\">例</h3><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>あなたの同意構成により、実装は異なります。</p><h4 id=\"consent-managerの例\">Consent Managerの例</h4><p>Consent Managerを使用している場合、同意ステータスを決定するロジックは次のようになるかもしれません：</p><pre tabindex=\"0\"><code>// After Load Rules - Run Alwaysb.consent_decision = (tealiumConsentRegister &amp;&amp; tealiumConsentRegister.currentDecision) || [];b.google_ad_storage_consent = b.consent_decision.indexOf(&#39;display_ads&#39;) !== -1  ? &#39;granted&#39; : &#39;denied&#39;;b.google_ad_user_data_consent = b.consent_decision.indexOf(&#39;personalization&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;b.google_analytics_storage_consent = b.consent_decision.indexOf(&#39;analytics&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;b.google_ad_personalization_consent = b.consent_decision.indexOf(&#39;personalization&#39;) !== -1 &amp;&amp; b.consent_decision.indexOf(&#39;display_ads&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;b.google_ads_data_redaction = b.consent_decision.indexOf(&#39;personalization&#39;) === -1 || b.consent_decision.indexOf(&#39;display_ads&#39;) === -1 ? &#39;true&#39; : &#39;false&#39;;b.google_url_passthrough = b.consent_decision.indexOf(&#39;personalization&#39;) !== -1 ? &#39;true&#39; : &#39;false&#39;;</code></pre><h4 id=\"onetrustとのconsent-integrationsの例\">OneTrustとのConsent Integrationsの例</h4><p>Consent IntegrationsとOneTrustを使用している場合、ロジックは次のようになるかもしれません：</p><pre tabindex=\"0\"><code>// After Load Rules - Run Alwaysb.consent_decision = (tealiumConsentRegister &amp;&amp; tealiumConsentRegister.currentDecision) || [];b.google_ad_storage_consent = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1  ? &#39;granted&#39; : &#39;denied&#39;;b.google_ad_user_data_consent = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;b.google_analytics_storage_consent = b.consent_decision.indexOf(&#39;C0001&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;b.google_ad_personalization_consent = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1 &amp;&amp; b.consent_decision.indexOf(&#39;C0003&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;b.google_ads_data_redaction = b.consent_decision.indexOf(&#39;C0004&#39;) === -1 || b.consent_decision.indexOf(&#39;C0003&#39;) === -1 ? &#39;true&#39; : &#39;false&#39;;b.google_url_passthrough = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1 ? &#39;true&#39; : &#39;false&#39;;</code></pre><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>これらの正確な変数名を使用する場合、追加のマッピングは必要ありません。Google同意モードタグの最新バージョンは、デフォルトでこれらの変数を使用します。</p><h3 id=\"拡張機能の同意パラメータの選択\">拡張機能の同意パラメータの選択</h3><p>JavaScript拡張で使用する同意パラメータを特定するには、以下の手順に従います：</p><ol><li><p>ブラウザのクッキーとキャッシュをクリアします。</p></li><li><p>最新のConsent ManagerまたはConsent Integrationsテンプレートがアクティブなあなたのウェブサイトまたはステージング環境を訪れます。</p></li><li><p>オプトインモデル（GDPRスタイル）を使用している場合、同意ダイアログですべてのトラッキングを受け入れます。</p></li><li><p>ブラウザの開発者ツールを開き、コンソールに移動します。</p></li><li><p><code>TealiumConsentRegister</code>オブジェクトを表示するには、<code>tealiumConsentRegister</code>を入力します。このオブジェクトには<code>currentDecision</code>と<code>decisions</code>の配列が含まれています。<code>currentDecision</code>配列には、現在許可されている目的が含まれています。</p><figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-and-consent-integrations.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-and-consent-integrations.png\"             alt=\"OneTrustを使用したConsent Integrationsの例\"             title=\"OneTrustを使用したConsent Integrationsの例\"/>        </a>    </figure></li></ol><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i><code>currentDecision</code>オブジェクトは、あなたのロジックで使用可能な同意オプションを<code>b.consent_decision.indexOf('&lt;Value to change&gt;')</code>でリストします。</p>"
        }  

    , 
        {
            "weight": "465",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/about/",
            "title": "同意統合について",
            "body":"<p>新しいConsent Enforcement Frameworkは、Tealium iQ Consent Integrationsの主要な機能であり、Tealium iQ Tag Managementの外部でキャプチャされた同意信号の強力で信頼性の高い強制を可能にします。この機能は、顧客の同意が得られないか曖昧な場合にトラッキングをブロックします。</p><p>Tealium iQ Consent Integrationsは、サポートされている同意管理プラットフォーム（CMP）に対して、オプトイン（GDPRスタイル）とオプトアウト（CCPAスタイル）の両方の強制パターンを提供します。統合は、ほとんどのCMPまたはカスタムソリューションをサポートするテンプレートの形式で記述することができます。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Tealium iQ Consent Integrationsは、最新のutagバージョン4.49に依存しています。以前のバージョンでサポートを有効にするには、<strong>uTag Loader</strong>テンプレートを編集し、<code>##UTGEN##</code>publish engine flagの下に<code>##UTCM##</code>を追加します。</p><p>以下の用語は、同意統合フレームワークに関連しています：</p><ul><li><strong>目的</strong> - あなたのウェブサイトのユーザーが同意（または同意を拒否）できる特定のデータ使用目的。</li><li><strong>目的グループ</strong> - 目的のリスト。タグが割り当てられる同意目的のグループの形での強制ポリシーの表現。</li><li><strong>免除</strong> - 強制が必要ない場合と、同意の決定に基づいてタグをブロックする必要がない場合。強制免除は、同意統合強制ルールが適用されない場合の動作とは異なります。明示的な免除がない限り、または一致する同意統合と適切な同意決定がない限り、タグは発火することは許可されません。</li><li><strong>強制ルール</strong> - 同意統合または免除を強制するタイミングを決定するルール。</li><li><strong>同意決定</strong> - 同意された目的の配列。同意決定は<code>type</code>属性で決定され、ユーザーがアクティブな決定を下したか（<code>explicit</code>）否か（<code>implicit</code>）により、<code>explicit</code>または<code>implicit</code>のいずれかになります。</li><li><strong>暗黙の決定</strong> - ユーザーの行動から推測される決定。サイトを訪問することで、ユーザーはサイトのプライバシーポリシーに記載されている必要なタグに同意します。ユーザーは自分のデータの販売に反対することができますが、デフォルトではこれが有効になっています（暗黙の&rsquo;それはOK、私のデータを共有/販売する&rsquo;決定があります）。</li><li><strong>明示的な決定</strong> - ユーザーによる明確で正確なトラッキングへの同意決定。</li><li><strong>統合</strong> 特定のCMPから同意決定をキャプチャする機能と構成（事前ロードまたはカスタム）のセット。統合は目的グループに関連付けられています。</li></ul><h2 id=\"仕組み\">仕組み</h2><p>Tealium iQ Consent Integrationsを使用すると、サポートされている非Tealiumの同意管理プラットフォームと統合できます。あなたのCMPは、必要に応じてエンドユーザーに目的ベースの同意を求め、そのユーザーの同意決定をキャプチャして保存します。統合がアクティブな場合、タグは目的グループ内の目的に割り当てられる前にトリガーする必要があります。その目的に同意される前に、その目的に割り当てられたタグをトリガーすることができます。</p><p>各同意統合は、基礎となるフレームワークに、単一のCMPとどのように通信するかを指示します。一度にアクティブにできる統合は1つだけです。ただし、必要に応じて<strong>強制ルール</strong>を使用して、複数のアクティブな統合を条件付きで適用し、競合を避けることができます。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>ページにCMPを注入するタグは、Tealium iQ Consent Integrationと互換性がありません。統合は、タグがロードされる前にCMPからの信号を必要とします。Consent IntegrationsとあなたのCMPを統合するには、Pre LoaderまたはDOM Ready拡張機能を使用するか、CMPをTealium iQの外部のページに追加します。</p><p>Tealium iQダッシュボードでサポートされているCMPとの統合を構成するか、<strong>カスタムテンプレート</strong>を編集してカスタム統合を作成することができます。</p><h2 id=\"サポートされている統合\">サポートされている統合</h2><p>現在サポートされている統合の完全なリストについては、<a href=\"/ja/iq-tag-management/consent/consent-integrations/supported-vendors/\">Supported Vendor Integrations</a>を参照してください。</p><h2 id=\"タグの再発火\">タグの再発火</h2><p>各タグには、<strong>Map Tags</strong>画面で<strong>Tag Refire</strong>スイッチがあります：</p><figure><a class=\"slb\" href=\"/images/early-access/map-tags.png\"><img src=\"https://docs.tealium.com/images/early-access/map-tags.png\"         alt=\"map_tags.png\"         title=\"map_tags.png\" width=\"790\" height=\"417\"/>    </a></figure><p>このオプションを有効にすると、タグは各ユーザーアクションごとに最大2回トリガーすることができます（暗黙の決定と明示的な決定で1回ずつ）。マップされた目的が同意されていない場合、タグはトリガーされません。</p><p>ほとんどのタグは、これらのケースのそれぞれで同意がある場合、再度トリガーする必要はありません。タグを2回トリガーすると、ダブルトラッキングが発生する可能性があり、これは避けるべきです。</p><p>サーバーサイドコネクタ（特にイベントコネクタ）を持つアカウントは、Tealium Collectタグを再発火させて、<code>tci.purposes_with_consent_unprocessed</code>属性を使用することで利益を得ることができます。これにより、同じイベントに対してサーバーサイドコネクタが再発火されないことが保証されます。<code>tci.purposes_with_consent_unprocessed</code>属性を使用すると、サーバーサイドコネクタが重複せずに可能な限り迅速にトリガーすることができます。</p><h2 id=\"サーバーサイド属性---consent-integrationsとcollectの使用\">サーバーサイド属性 - Consent IntegrationsとCollectの使用</h2><p>Tealium Collectは、他のすべてのタグと同様に、同意された目的にマップする必要があります。ただし、<code>refiringAllowed</code>オプションにより、新しい決定でタグを再発火することができます。このプロセスは、タグがさまざまなサーバーサイド目的に使用されており、利用可能なサーバーサイドフィルタとロジックが使用されて、信号が適切にのみ処理されるようにしながら再発火を許可することを示しています。</p><p>使用するサーバーサイドツールによりますが、Tealium Collectは、各イベントに対して以下のイベントレベルの属性でトリガーされます：</p><ul><li><code>tci.purposes_with_consent_unprocessed</code>（再発火あり）</li><li><code>tci.purposes_with_consent_all</code>（再発火なし）</li></ul><h2 id=\"tealium-iq内での同意決定のアクセス\">Tealium iQ内での同意決定のアクセス</h2><p>同意決定は、各イベントのデータレイヤーに追加されます。これらの変数はタグで使用でき、Tealium Collectタグによって自動的に送信されますが、拡張機能では直接利用できません。</p><ul><li><code>tci.consent_type</code> - 同意決定のタイプ（<code>implicit</code>または<code>explicit</code>）。</li><li><code>tci.purposes_with_consent_all</code> - 処理済みと未処理の両方の同意された目的の完全な配列。</li><li><code>tci.purposes_with_consent_processed</code> - 処理済みの同意された目的の配列。</li><li><code>tci.purposes_with_consent_unprocessed</code> - 未処理の同意された目的の配列。</li></ul><h3 id=\"拡張機能からの同意決定へのアクセス\">拡張機能からの同意決定へのアクセス</h3><p>拡張機能で現在の同意決定オブジェクトにアクセスするには、<code>tealiumCmpIntegration.GetCurrentConsentDecision()</code>メソッドを使用します。</p><p>次のコマンドは、現在の同意決定を<code>b</code>オブジェクトに追加します：</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">current_consent_decision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">getCurrentConsentDecision</span>()</span></span></code></pre></div><h2 id=\"javascriptコンソールの使用\">JavaScriptコンソールの使用</h2><p>アクティブな場合、utag.js（Tealium iQ）が実装されているページのJavaScriptコンソールで同意統合と対話できます。JavaScriptコンソールを使用すると、CMPから取得される現在の同意決定を取得できます。同意決定はキャッシュされず、常に最新の状態を保証します。</p><p>詳細については、<a href=\"/ja/iq-tag-management/consent/consent-integrations/validate-and-debug/\">Validate and debug consent integrations</a>を参照してください。</p><h2 id=\"同意登録\">同意登録</h2><p>同意統合は、同意構成がロードまたは更新されたときにイベントを発行するためにTealium同意登録を使用できます。これらの変更はページ全体で利用可能であり、ウェブサイト全体で同意決定を管理するのがより簡単になります。詳細については、<a href=\"/ja/iq-tag-management/consent/consent-register/\">Tealium consent register</a>を参照してください。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>同意登録は、同意統合フレームワークテンプレートバージョン1.2.0以降が必要です。このテンプレートを更新するには、<a href=\"/ja/iq-tag-management/templates/manage/#update-a-template\">Update a template</a>を参照してください。</p>"
        }  

    , 
        {
            "weight": "466",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/consent-integrations-decision-flow/",
            "title": "同意統合の決定フロー",
            "body":"<p>Tealium iQ Consent Integrationsは、サポートされている同意管理プラットフォーム（CMP）に対して、オプトイン（GDPRスタイル）とオプトアウト（CCPAスタイル）の強制パターンの両方を提供します。以下の図の同意統合の決定フローでは、これらの強制パターンでユーザーの同意決定がどのように処理されるかを示しています。</p><h3 id=\"同意統合の同意フロー\">同意統合の同意フロー</h3><figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-integrations-consent-flow.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-integrations-consent-flow.png\"         alt=\"Consent Integrations decision flow\"         title=\"Consent Integrations decision flow\" width=\"1500\" height=\"2000\"/>    </a></figure><h3 id=\"11---タグの詳細を発火\">1.1 - タグの詳細を発火</h3><p><strong>各タグとイベントについて：</strong></p><figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-integrations-fire-tags.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-integrations-fire-tags.png\"         alt=\"Consent Integrations fire tags detail \"         title=\"Consent Integrations fire tags detail\"/>    </a></figure><h2 id=\"オプトインモデル\">オプトインモデル</h2><p>Tealium iQは、CMPからの同意決定が受け取られるまで、タグを発火させたりクッキーを構成したりしません。期待されるCMPがページ上でアクティブでない場合やTealium iQが同意されていない場合、Tealium iQは実行されず、タグは発火されません。</p><p>Tealium iQがロードされたときに同意決定が見つからない場合、Tealium iQの同意統合は、決定が見つかるまでポーリングします。</p><p>CMPからの同意決定が受け取られるまで、すべてのイベントは、決定が見つかったら処理されるようにキューに入れられます。同意決定が受け取られない場合、イベントは処理されません。</p><p>CMPからの同意決定（<code>implicit</code>または<code>explicit</code>）が利用可能な場合、以下のアクションがTealium iQ Consent Integrationによって開始されます：</p><ul><li>最初にTealium iQが実行可能かどうかを確認します。</li><li>Tealium iQが実行可能であれば、各タグが実行可能かどうかを確認します。</li><li>タグが実行可能であれば、すべてのキューに入れられたイベントに対して同意に基づいてタグをトリガーします。</li></ul><p>同意決定が暗黙的な場合、イベントは初めてキューに入れられ、暗黙的な同意を持つタグがトリガーされます。ユーザーがその後明示的な同意決定を行うと、これらのキューに入れられたイベントは、新たに同意されたタグを考慮に入れて再処理されます。Tealium iQ Consent Integrationは、明示的な決定が見つかるまで検索します。</p><p>同意決定が明示的な場合、すべてのキューは空になり、ポーリングは停止します。暗黙的な同意で発火されたタグは、明示的な同意決定が処理されるときに再発火されません（タグの再発火が有効で、処理する新たな同意目的がある場合を除く）。</p><p>ユーザーがインタラクティブなCMPレイヤーを再度開き、新たな明示的な同意決定を行うと、以前のイベントは新たな同意決定で再処理されません。</p><p>Tealium iQが最初にロードされた後に処理される新しいイベントについては、新しい同意決定がCMPから取得され、各イベントがTealium iQによって処理されるたびに、CMPが普遍的な真実の源として扱われることを確認します。</p><h2 id=\"オプトアウトモデル\">オプトアウトモデル</h2><p>オプトアウトモデルはオプトインモデルに似ていますが、明示的な決定は、オプトアウトモデルのデフォルト構成（CCPA/CPRAスタイル）よりも制限的であるため、ポーリングされません。</p>"
        }  

    , 
        {
            "weight": "467",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/manage/",
            "title": "同意統合と目的グループの管理",
            "body":"<p>Tealium iQタグ管理ダッシュボードでは、Consent Integrations画面で同意統合を追加し、構成することができます。</p><h2 id=\"統合の追加\">統合の追加</h2><p>以下の手順に従って統合を追加します：</p><ol><li><strong>iQタグ管理 &gt; Consent Integrations</strong>に移動します。</li><li><strong>+ 統合を追加</strong>をクリックして統合構成画面を開きます。</li></ol><h3 id=\"ステップ1統合の構成\">ステップ1：統合の構成</h3><ol><li><strong>統合の構成</strong>スライドアウトで、統合にわかりやすい名前を入力します。</li><li><strong>ベンダー</strong>リストからベンダーを選択します。選択したベンダーによっては、追加のフィールドが必要になることがあります。通常は、統合したいCMP構成の識別子です。</li><li>（オプション）デフォルトのベンダーカテゴリーで統合を構成するには、<strong>{ベンダー}のデフォルトカテゴリーで新しい目的グループを作成</strong>を選択します。</li><li>説明を入力します。</li><li><strong>次へ</strong>をクリックします。</li></ol><h3 id=\"ステップ2強制ルール\">ステップ2：強制ルール</h3><p>ドロップダウンリストを使用して新しいルールを作成するか、既存のルールを選択します。このルールは、同意統合をいつ強制するかを決定します。</p><p>新しいルールを作成するには：</p><ol><li><strong>+ 新しいルール</strong>をクリックします。</li><li><strong>ルールを追加</strong>スライドアウトで、ロードルールの<strong>タイトル</strong>を追加し、必要に応じて<strong>ノート</strong>を追加します。</li><li>ドロップダウンリストから<strong>変数</strong>と<strong>演算子</strong>を選択し、<strong>値</strong>を入力します。</li><li>ANDロジックを使用して別の条件を追加するには、以下のいずれかを行います：<ul><li>デフォルトの条件文の隣にある**+**をクリックします。</li><li>行メニューをクリックし、<strong>行の複製</strong>を選択してANDロジックを使用した条件文のコピーを作成します。<br>複製した条件文は必要に応じて編集できます。</li></ul></li><li>ORロジックを使用して別の条件を追加するには、以下のいずれかを行います：<ul><li><strong>+OR</strong>をクリックします。</li><li>条件メニューをクリックし、<strong>複製</strong>を選択してORロジックを使用した条件のコピーを作成します。複製した条件は新しい条件を作成するために編集できます。</li></ul></li><li>条件から条件文を削除するには、行メニューをクリックし、<strong>行を削除</strong>を選択します。</li><li><strong>完了</strong>をクリックします。</li></ol><h3 id=\"ステップ3公開場所\">ステップ3：公開場所</h3><ol><li>この統合の強制を適用する環境を選択します。</li><li><strong>次へ</strong>をクリックします。</li></ol><h3 id=\"ステップ4目的グループ\">ステップ4：目的グループ</h3><ol><li><strong>目的グループ</strong>ドロップダウンリストから統合の目的グループを選択します。<ul><li>ステップ1でデフォルトのベンダーカテゴリーで統合を構成することを選択した場合、以下の手順を完了し、統合の保存に進みます：<ol><li>リストから**&lt;ベンダー&gt; デフォルト**を選択します。</li></ol></li><li>ステップ4でデフォルトのベンダーカテゴリーで統合を構成することを選択しなかった場合：<ol><li>ドロップダウンリストから**+ 新しい目的グループ**を選択します。</li><li><strong>新しい目的グループ</strong>ダイアログで、<strong>目的グループを作成</strong>をクリックします。<strong>新しい目的グループ</strong>画面にリダイレクトされます。<strong>統合を追加</strong>ウィザードでの進行状況は保存され、目的グループの構成が完了した後にリダイレクトされます。</li><li><strong>目的グループ</strong>ダイアログで、<a href=\"#add-a-purpose-group\">目的グループを追加</a>セクションの手順を完了して目的グループを追加します。</li><li><strong>統合を追加</strong>ウィザードで、<strong>目的グループ</strong>ドロップダウンリストから目的グループを選択します。統合の構成を完了するために<strong>統合を追加</strong>ウィザードにリダイレクトされます。</li></ol></li></ul></li><li><strong>保存</strong>をクリックして新しい統合を作成します。</li></ol><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>OneTrustのデフォルトベンダーカテゴリーを初めて使用する場合、統合を作成した後、<a href=\"#edit-a-purpose-group\">目的グループを編集</a>の手順に従って、タグを<strong>デフォルト</strong>目的グループに割り当てます。</p><h2 id=\"目的グループの管理\">目的グループの管理</h2><p>目的グループを管理するには、<strong>iQタグ管理 &gt; Consent Integrations &gt; Purpose Groups</strong>タブに移動します。</p><h3 id=\"目的グループの追加\">目的グループの追加</h3><p>以下の手順に従って目的グループを追加します：</p><ol><li><strong>iQタグ管理 &gt; Consent Integrations</strong>に移動します。</li><li><strong>+ 目的グループを追加</strong>をクリックして、目的グループ構成モーダルを開きます。</li></ol><h4 id=\"ステップ1目的グループ\">ステップ1：目的グループ</h4><ol><li>名前と説明を入力します。</li><li><strong>次へ</strong>をクリックします。</li></ol><h4 id=\"ステップ2目的\">ステップ2：目的</h4><ol><li>目的の名前と説明を入力します。各目的の名前は、統合するベンダーの同意カテゴリーの名前と一致する必要があります。</li><li>目的グループに複数の目的を作成できます。目的グループにさらに目的を追加するには、<strong>+ 目的を追加</strong>をクリックします。</li><li><strong>次へ</strong>をクリックします。</li></ol><h4 id=\"ステップ3tealium-iqの目的\">ステップ3：Tealium iQの目的</h4><ol><li><strong>Tealiumタグ目的</strong>からTealium iQにマップする目的を選択します。Tealium iQはすべてのタグ操作を制御し、タグが機能するためには目的にマップする必要があります。</li><li><strong>次へ</strong>をクリックします。</li></ol><h4 id=\"ステップ4タグのマップ\">ステップ4：タグのマップ</h4><p>すべてのタグは、トリガーする前に目的にマップする必要があります。</p><ol><li>新しく作成した目的にタグをマップするには、各タグで<strong>割り当て/マップ</strong>をクリックし、ドロップダウンリストからそのタグにマップする目的を選択します。</li><li>各タグのタグ再発火を有効または無効にするには、<strong>タグ再発火</strong>列の<strong>OFF/ON</strong>ボタンを切り替えます。タグ再発火についての詳細は、<a href=\"/ja/iq-tag-management/consent/consent-integrations/about/#tag-refire\">タグ再発火</a>を参照してください。</li><li><strong>保存</strong>をクリックして新しい目的グループを作成します。</li></ol><h3 id=\"目的グループの編集\">目的グループの編集</h3><p>以下の手順に従って目的グループを編集します：</p><ol><li>編集したい目的グループの横にあるオプションアイコンをクリックします。</li><li><strong>編集</strong>をクリックして目的グループ構成を開きます。</li><li>編集したいセクションのタブをクリックします。新しいデフォルト目的グループにタグをマップするには、<strong>タグのマップ</strong>をクリックします。</li><li><strong>保存</strong>をクリックして変更を保存します。</li></ol>"
        }  

    , 
        {
            "weight": "470",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/supported-vendors/",
            "title": "同意の統合 - サポートされているベンダーの構成",
            "body":"<h2 id=\"動作原理\">動作原理</h2><p>Tealium iQ Consent Integrationsは、さまざまな同意管理プラットフォーム（CMP）との統合をサポートしています。サポートされている同意管理プラットフォーム（CMP）またはウェブページのユーザーインターフェースから、関連するベンダー固有の情報にアクセスできます。このドキュメントを信頼性があり使いやすいものにするため、このセクションではウェブページからベンダー固有の情報を取得する手順のみをカバーしています。各パートナーCMPのユーザーインターフェースでベンダーIDと目的を取得する手順については、各CMPのドキュメントを参照してください。</p><p>ウェブページから関連情報を取得する手順は次のとおりです。</p><ol><li>CMPが実装されているウェブサイトを訪れます。</li><li>すべてのトラッキングを許可します。</li><li>開発者ツールのJavaScriptコンソールを開きます。</li><li>下記のコードスニペットからCMP固有のコードをコンソールに貼り付けます。</li><li>表示された「ベンダーID」、「目的キー」、「目的名」をConsent Integrationに入力します。</li></ol><p class=\"tip\"><i class=\"fa fa-info-circle\"></i>同意の決定を更新した後に最新の解釈を表示するには、コードを再貼り付けしてください。</p><h2 id=\"統合固有の手順とコードスニペット\">統合固有の手順とコードスニペット</h2><h3 id=\"didomi\">Didomi</h3><p>このスニペットを<a href=\"https://didomi.io\">didomi.io</a>でテストするか、<a href=\"#how-it-works\">上記の手順</a>に従ってウェブサイトでテストして、統合に必要な情報の互換性と取得方法を確認します。</p><p>Didomiの統合では、<strong>ベンダー</strong>を<strong>目的</strong>として使用します。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Didomiは、暗黙の同意がある目的やベンダーを返さないという既知のバグがあります。このバグが修正されるまでの回避策として、この統合では常に<code>always_consented</code>目的キーを出力同意決定に追加して、暗黙のトリガリングを許可します。</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">didomiIntegration</span> (window) {</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Didomi&#39;</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;didomi-1.0.1&#39;</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Didomi</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span>().<span style=\"color:#a6e22e\">notice</span>.<span style=\"color:#a6e22e\">type</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;optin&#39;</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Didomi</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getUserStatus</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> {}</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getUserStatus</span>()</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">vendorInfo</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getVendors</span>()</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span>()</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Didomi</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#e6db74\">&#39;&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">id</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span>().<span style=\"color:#a6e22e\">app</span>.<span style=\"color:#a6e22e\">deploymentId</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">id</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// do more checks than strictly necessary to confirm expectations</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">purposes</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">purposes</span>.<span style=\"color:#a6e22e\">global</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span>.<span style=\"color:#a6e22e\">global</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">purposes</span>.<span style=\"color:#a6e22e\">global</span>.<span style=\"color:#a6e22e\">enabled</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span>.<span style=\"color:#a6e22e\">global</span>.<span style=\"color:#a6e22e\">enabled</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">vendorInfo</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;boolean&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span> <span style=\"color:#75715e\">// false after an explicit decision is made</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Didomi handles checking each vendor&#39;s required purposes</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> []</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// enforce strings, even for IAB vendor ids</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span>.<span style=\"color:#a6e22e\">global</span>.<span style=\"color:#a6e22e\">enabled</span>.<span style=\"color:#a6e22e\">map</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">vendorId</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> String(<span style=\"color:#a6e22e\">vendorId</span>)</span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;always_consented&#39;</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">decision</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedVendors</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allVendors</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">vendorInfo</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">lookupObject</span> <span style=\"color:#f92672\">=</span> {}</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// WORKAROUND to allow implicit triggering until the Didomi bug is fixed</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#a6e22e\">lookupObject</span>.<span style=\"color:#a6e22e\">always_consented</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Always consented (to allow strictly needed triggering)&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">allVendors</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">vendorObject</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">allowedVendors</span>.<span style=\"color:#a6e22e\">indexOf</span>(String(<span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">id</span>)) <span style=\"color:#f92672\">===</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>) <span style=\"color:#66d9ef\">return</span></span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">lookupObject</span>[<span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">id</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;iab-vendor-&#39;</span> <span style=\"color:#f92672\">+</span> <span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">id</span></span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">lookupObject</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span>})(window)</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// デバッグ/開発用の出力 - 同意の状態を変更するたびにテストページに統合を再貼り付けしてください</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`CMP Found: </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> (</span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model)</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - id:          </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed: </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit:    </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - group list:  </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()))<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - name lookup: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()), <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">6</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)</span></span></code></pre></div><h3 id=\"onetrust\">OneTrust</h3><p>このスニペットを<a href=\"https://onetrust.com\">onetrust.com</a>でテストするか、<a href=\"#how-it-works\">上記の手順</a>に従ってウェブサイトでテストして、統合に必要な情報の互換性と取得方法を確認します。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>OneTrustは、構成をプレビューするためのテストモードを提供しており、ベンダーIDに<code>-test</code>を追加することで有効化できます。統合を簡素化するため、OneTrust Consent Integrationsでは、ベンダーIDから<code>-test</code>サフィックスを削除します。シームレスな統合のために、ページで<code>-test</code>サフィックスを使用している場合でも、Tealium iQ Consent Integrations UIに<code>-test</code>を含まないベンダーIDを入力してください。Tealium iQ UIとアクティブな統合のベンダーIDが一致しない場合、Tealium iQ Tag Managementはクッキーを構成したり、ページ上でタグをトリガーしたりすることができません。</p><pre><code>;(function oneTrust (window) {  // allows simple adjustment of the name/id behavior  var useNamesInsteadOfKeys = false  // allow the safety check of the expected Vendor ID to be circumvented to simplify setup at the cost of increased risk  var disableVendorIdValidation = false  // CMP specific functionality and labels  window.tealiumCmpIntegration = window.tealiumCmpIntegration || {}  window.tealiumCmpIntegration.cmpName = 'OneTrust'  window.tealiumCmpIntegration.cmpIntegrationVersion = 'onetrust-2.0.1'  window.tealiumCmpIntegration.cmpFetchCurrentConsentDecision = cmpFetchCurrentConsentDecision  window.tealiumCmpIntegration.cmpFetchCurrentLookupKey = cmpFetchCurrentLookupKey  window.tealiumCmpIntegration.cmpCheckIfOptInModel = cmpCheckIfOptInModel  window.tealiumCmpIntegration.cmpCheckForWellFormedDecision = cmpCheckForWellFormedDecision  window.tealiumCmpIntegration.cmpCheckForExplicitConsentDecision = cmpCheckForExplicitConsentDecision  window.tealiumCmpIntegration.cmpCheckForTiqConsent = cmpCheckForTiqConsent  window.tealiumCmpIntegration.cmpConvertResponseToGroupList = cmpConvertResponseToGroupList  window.tealiumCmpIntegration.cmpConvertResponseToLookupObject = cmpConvertResponseToLookupObject  function cmpCheckIfOptInModel () {    var decision = cmpFetchCurrentConsentDecision()    if (decision && decision.ConsentModel && decision.ConsentModel.Name === 'opt-out') {      return false    }    return true  }  function cmpFetchCurrentConsentDecision () {    if (!window.OneTrust || typeof window.OneTrust.GetDomainData !== 'function') return false    var cmpRawOutput = window.OneTrust.GetDomainData()    cmpRawOutput.dataLayer = window.dataLayer    return cmpRawOutput  }  function cmpFetchCurrentLookupKey () {    // newer versions of OneTrust, starting at the end of 2022 no longer have cctId defined    // but this HTML attribute is the way OneTrust can tell    var scrapeOneTrustVendorId = function () {      var allScripts = document.getElementsByTagName('script')      var re = /\/otSDKStub&bsol;.js(&bsol;?.*)*$/      for (var i = 0; i < allScripts.length; i++) {        var isOneTrustScript = re.test(allScripts[i].src) // can be null        if (isOneTrustScript) {          var fullVendorId = allScripts[i].getAttribute('data-domain-script') // parse it from the script          return fullVendorId.split('-test')[0]        }      }      return 'error-not-found'    }    if (disableVendorIdValidation) {      // just return whatever Vendor ID is expected be active      return (window.tealiumCmpIntegration && window.tealiumCmpIntegration.map && Object.keys(window.tealiumCmpIntegration.map)[0]) || '(Vendor ID check disabled)' // just return whatever's mapped to short-circuit the check as a test    }    return scrapeOneTrustVendorId()  }  function cmpCheckForWellFormedDecision (cmpRawOutput) {    // treat things we don't understand as an opt-out    if (typeof cmpRawOutput !== 'object') return false    if (toString.call(cmpRawOutput.Groups) !== '[object Array]') return false    if (toString.call(cmpRawOutput.dataLayer) !== '[object Array]') return false    return true  }  function cmpCheckForExplicitConsentDecision (cmpRawOutput) {    // treat things we don't understand as an opt-out    if (cmpCheckForWellFormedDecision(cmpRawOutput) !== true) return false    return window.OneTrust && typeof window.OneTrust.IsAlertBoxClosed === 'function' && window.OneTrust.IsAlertBoxClosed()  }  function cmpConvertResponseToGroupList (cmpRawOutput) {    // Didomi handles checking each vendor's required purposes    if (cmpCheckForWellFormedDecision(cmpRawOutput) !== true) return []    // enforce strings, even for IAB vendor ids    const decision = cmpRawOutput.userStatus.vendors.global.enabled.map(function (vendorId) {      return String(vendorId)    })    decision.push('always_consented')    return decision  }  function cmpConvertResponseToLookupObject (cmpRawOutput) {    var allowedVendors = cmpConvertResponseToGroupList(cmpRawOutput)    var allVendors = cmpRawOutput.vendorInfo    var lookupObject = {}    // WORKAROUND to allow implicit triggering until the Didomi bug is fixed    lookupObject.always_consented = 'Always consented (to allow strictly needed triggering)'    allVendors.forEach(function (vendorObject) {      if (allowedVendors.indexOf(String(vendorObject.id)) === -1) return      lookupObject[vendorObject.id] = vendorObject.name || 'iab-vendor-' + vendorObject.id    })    return lookupObject  }  function cmpCheckForTiqConsent (cmpRawOutput, tiqGroupName) {    // treat things we don't understand as an opt-out    if (cmpCheckForWellFormedDecision(cmpRawOutput) !== true) return false    tiqGroupName = tiqGroupName || 'tiq-group-name-missing'    var allowedGroups = cmpConvertResponseToGroupList(cmpRawOutput)    return allowedGroups.indexOf(tiqGroupName) !== -1  }})(window)// デバッグ/開発用の出力 - 同意の状態を変更するたびにテストページに統合を再貼り付けしてくださいvar outputString = `CMP Found: ${window.tealiumCmpIntegration.cmpName} (${window.tealiumCmpIntegration.cmpCheckIfOptInModel() ? 'Opt-in' : 'Opt-out'} Model)  Checks:    - id:          ${tealiumCmpIntegration.cmpFetchCurrentLookupKey()}    - well-formed: ${tealiumCmpIntegration.cmpCheckForWellFormedDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}    - explicit:    ${tealiumCmpIntegration.cmpCheckForExplicitConsentDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}    - group list:  ${JSON.stringify(tealiumCmpIntegration.cmpConvertResponseToGroupList(tealiumCmpIntegration.cmpFetchCurrentConsentDecision()))}    - name lookup: ${JSON.stringify(tealiumCmpIntegration.cmpConvertResponseToLookupObject(tealiumCmpIntegration.cmpFetchCurrentConsentDecision()), null, 6)}  `console.log(outputString)</code></pre><h3 id=\"trustarc\">TrustArc</h3><p>このスニペットを<a href=\"https://trustarc.com/\">trustarc.com</a>でテストするか、<a href=\"#how-it-works\">上記の手順</a>に従ってウェブサイトでテストして、統合に必要な情報の互換性と取得方法を確認します。</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">trustarc</span> (window) {</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;TrustArc&#39;</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;trustarc-1.0.3&#39;</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">modeCookieValue</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">truste</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span>(<span style=\"color:#e6db74\">&#39;notice_behavior&#39;</span>)) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;expressed|eu&#39;</span> <span style=\"color:#75715e\">// default to strict EU rules if no cookie</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">modeCookieValue</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#e6db74\">&#39;expressed&#39;</span>) <span style=\"color:#f92672\">===</span> <span style=\"color:#ae81ff\">0</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span>(<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">eu</span>.<span style=\"color:#a6e22e\">COOKIE_GDPR_PREF_NAME</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;0,&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">cookie</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">cmpRawOutput</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// just return whatever Vendor ID is expected be active to short-circuit the ID-based double check for now</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">return</span> (window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span> <span style=\"color:#f92672\">&amp;&amp;</span> Object.<span style=\"color:#a6e22e\">keys</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>)[<span style=\"color:#ae81ff\">0</span>]) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;(Vendor ID check disabled)&#39;</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">cookie</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span>(<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">eu</span>.<span style=\"color:#a6e22e\">COOKIE_GDPR_PREF_NAME</span>) <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;string&#39;</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)) <span style=\"color:#66d9ef\">return</span> []</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">cookieConsentValues</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">cookie</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;:&#39;</span>)[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;,&#39;</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">extraSplit</span> <span style=\"color:#f92672\">=</span> []</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cookieConsentValues</span>.<span style=\"color:#a6e22e\">forEach</span>((<span style=\"color:#a6e22e\">el</span>) =&gt; {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">el</span>) <span style=\"color:#66d9ef\">return</span></span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">extraSplit</span>.<span style=\"color:#a6e22e\">push</span>.<span style=\"color:#a6e22e\">apply</span>(<span style=\"color:#a6e22e\">extraSplit</span>, <span style=\"color:#a6e22e\">el</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;|&#39;</span>))</span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">trustArcMap</span> <span style=\"color:#f92672\">=</span> {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#ae81ff\">0</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Required&#39;</span>,</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#ae81ff\">1</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Functional&#39;</span>,</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#ae81ff\">2</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Personalization/Advertising&#39;</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">output</span> <span style=\"color:#f92672\">=</span> {}</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">extraSplit</span>.<span style=\"color:#a6e22e\">forEach</span>((<span style=\"color:#a6e22e\">key</span>) =&gt; {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">key</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;&#39;</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">output</span>[<span style=\"color:#a6e22e\">key</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">trustArcMap</span>[<span style=\"color:#a6e22e\">key</span>] <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;Category name unknown&#39;</span></span></span><span style=\"display:flex;\"><span>      }</span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">output</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">keysOrValues</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;keys&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> Object[<span style=\"color:#a6e22e\">keysOrValues</span>](<span style=\"color:#a6e22e\">permittedPurposesWithNames</span>) <span style=\"color:#75715e\">// keys are IDs, values are names</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span>})(window)</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// デバッグ/開発用の出力 - テストページに統合を再貼り付けして、同意の状態を変更するたびに使用してください</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`CMP Found: </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> (</span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model)</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    Checks:</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - id:          </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - well-formed: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - explicit:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - group list:  </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()))<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - name lookup: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()), <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">6</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    `</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)</span></span></code></pre></div><h3 id=\"usercentrics\">Usercentrics</h3><p>このスニペットをウェブサイトでテストするには、<a href=\"#how-it-works\">How it works</a>セクションの手順に従ってください。Usercentricsの統合では、<strong>ベンダー</strong>を<strong>目的</strong>として使用します。</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">usercentricsBrowserSdkV2</span> (window) {</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Usercentrics Browser SDK&#39;</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;usercentrics-1.0.3&#39;</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getServicesBaseInfo</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getServicesBaseInfo</span>()</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> (window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getSettingsCore</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getSettingsCore</span>().<span style=\"color:#a6e22e\">id</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// only support opt-In model for Usercentrics for now, can be added if needed</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">isConsentRequired</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">isConsentRequired</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the first entry as a proxy for all</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the first entry as a proxy for all</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">consentHistory</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">history</span>) <span style=\"color:#f92672\">||</span> []</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">lastHistoryEntryType</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">consentHistory</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">consentHistory</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">consentHistory</span>[<span style=\"color:#a6e22e\">consentHistory</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">-</span> <span style=\"color:#ae81ff\">1</span>].<span style=\"color:#a6e22e\">type</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">lastHistoryEntryType</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;explicit&#39;</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">foundOptIn</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the mapping if found, with a fallback (Usercentrics default value) if not specified in the mapping</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// check vendors if there&#39;s an object, look for at least one</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">tagInfo</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> ((<span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">status</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">tiqGroupName</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">foundOptIn</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>      }</span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">foundOptIn</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">vendorArray</span> <span style=\"color:#f92672\">=</span> []</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">tagConsent</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">status</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">vendorArray</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">name</span>)</span></span><span style=\"display:flex;\"><span>      }</span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">vendorArray</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span></span></span><span style=\"display:flex;\"><span>})(window)</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> - </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - vendor id:            </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed decision: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit decision:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - consented purposes:   </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()).<span style=\"color:#a6e22e\">sort</span>(),<span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">8</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)</span></span></code></pre></div><h3 id=\"オプトアウトcookie--gpc\">オプトアウトCookie + GPC</h3><p>この統合は、CCPA/CPRAなどの非常にシンプルなオプトアウトモデルをサポートするためのものです。ベンダーIDフィールドをオプトアウトCookieの名前（大文字と小文字を区別する）と解釈します。ユーザーは、このCookieが任意の値で見つかる場合、または<a href=\"/ja/iq-tag-management/consent/consent-management/global-privacy-control/about/\">Global Privacy Control (GPC)</a>のオプトアウトシグナルが見つかる場合、オプトアウトしたと見なされます。</p><p>統合で使用される<strong>目的キー</strong>とデフォルトの<strong>目的グループ</strong>に含まれるものは次のとおりです。</p><ul><li><code>no-selling</code> - ユーザーのオプトアウトシグナルに関係なく許可するタグ。これらのタグはデータを販売/共有せず、法的チームによって厳密に必要とされるものなどです。</li><li><code>yes-selling</code> - オプトアウトしたユーザーに対してブロックするタグ。該当する規制やポリシーにより、ユーザーがオプトアウトした後のトラッキングが禁止されているためです。</li></ul><h3 id=\"カスタム統合テンプレート\">カスタム統合テンプレート</h3><p>カスタム統合テンプレートとその使用方法の詳細については、<a href=\"/ja/iq-tag-management/consent/consent-integrations/custom-cmp/\">カスタム統合</a>を参照してください。</p>"
        }  

    , 
        {
            "weight": "475",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/validate-and-debug/",
            "title": "同意統合の検証とデバッグ",
            "body":"<h2 id=\"公開前にconsent-integrationsを検証する\">公開前にConsent Integrationsを検証する</h2><p>あなたの同意統合を検証し、デバッグするために、統合テンプレートを他の依存関係なしにサイトのJavaScriptコンソールに貼り付けます。Consent Integrationテンプレートは編集可能で、スタンドアロンで設計されているため、ウェブサイトのコンソールからデバッグが可能です。</p><p>テンプレートの使用は、<a href=\"/ja/iq-tag-management/consent/consent-integrations/custom-cmp/\">カスタム統合の作成</a>に役立ち、また、ベンダーID、目的キーを取得したり、構成前にデフォルトのテンプレートがCMPのインスタンスでカスタマイズなしで動作することを確認するためにも使用できます。現在のテンプレートには、検証スニペットが含まれており、<a href=\"/ja/iq-tag-management/consent/consent-integrations/supported-vendors/\">ドキュメンテーション</a>で提供されています。</p><h2 id=\"公開後にデバッグモードを有効にする\">公開後にデバッグモードを有効にする</h2><p>Tealium iQの<a href=\"/ja/platforms/javascript/debugging/\">デバッグモード</a>は、機能がアクティブである場合、あなたのConsent Integrationsからの詳細なステータスとエラーメッセージを含んでいます。ただし、免除が適用される場合は除きます。免除が適用されると、<code>window.tealiumCmpIntegration</code>が定義され、<code>window.tealiumCmpIntegration.exemptionMap</code>にアクティブな免除が表示されます。</p><p class=\"tip\"><i class=\"fa fa-info-circle\"></i>コンソール出力でのフィルタとして<code>/SENDING|****/</code>を使用して、関連するデバッグメッセージのみを表示します。</p><h2 id=\"公開後にconsent-integrationsを検証する\">公開後にConsent Integrationsを検証する</h2><p>Tealium iQ Consent Integrationsは、DOMに<code>window.tealiumCmpIntegration</code>という名前のグローバルオブジェクトを作成し、デバッグに役立ついくつかのプロパティを持っています。また、デバッグと検証を容易にするために、コンポーネント関数を個別に呼び出すこともできます。コンポーネント関数の詳細については、<a href=\"/ja/iq-tag-management/consent/consent-integrations/custom-cmp/\">カスタムCMP統合</a>を参照してください。</p><h3 id=\"例\">例</h3><p>この例では、CMP統合に関する重要な情報を取得する方法について説明します。</p><p>CMP統合に関する重要な情報を確認し、顧客の決定が正しくキャプチャされていることを確認するために、以下の手順を完了します：</p><ol><li>この<a href=\"https://www.otprivacy.com/user/jmyles/TagManagerDemo/OTKicks_Tealium/index.html?otreset=false&amp;otpreview=true&amp;otgeo=IE\">デモサイト</a>またはアクティブな同意統合がある任意のサイトを訪れ、以下のスニペットをブラウザのコンソールに貼り付けます：<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> - </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - vendor id:            </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed decision: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit decision:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - consented purposes:   </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()).<span style=\"color:#a6e22e\">sort</span>(),<span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">8</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)</span></span></code></pre></div></li><li>上記のスニペットをデモサイトのコンソールに貼り付けると、次のような結果が返されます：<pre tabindex=\"0\"><code>OneTrust - Opt-in ModelChecks:  - vendor id:            b38364e4-b2c4-4349-8e4e-48cf28a35db8  - well-formed decision: true  - explicit decision:    false  - consented purposes:   [        &#34;C0001&#34;]</code></pre></li><li>Webページ上で<strong>全てのクッキーを承認する</strong>をクリックし、同じスニペットを再度貼り付けます。次の出力は、決定が統合によって正しく理解され、キャプチャされたことを示しています：<pre tabindex=\"0\"><code>OneTrust - Opt-in ModelChecks:  - vendor id:            b38364e4-b2c4-4349-8e4e-48cf28a35db8  - well-formed decision: true  - explicit decision:    true  - consented purposes:   [        &#34;C0001&#34;,        &#34;C0002&#34;,        &#34;C0003&#34;,        &#34;C0004&#34;]</code></pre></li></ol><h2 id=\"公開後に衝突とenforcement-rulesをデバッグする\">公開後に衝突とEnforcement Rulesをデバッグする</h2><p>​<code>window.tealiumCmpIntegrations</code>には、ページ上でどの統合が強制されているかを理解するのに役立ついくつかの便利なプロパティがあります。例えば、<code>loadRules</code>には、どの同意統合が強制されていて、衝突があったかどうか（これによりTealium iQとすべてのタグがブロックされます）を示す子プロパティがあります。</p><ul><li><code>map</code>と<code>tagBasedMap</code>は、タグUIDとPurpose Keysの関係の異なるビューを示します。</li><li><code>tiqGroupName</code>は、Purpose KeyとTealium iQ自体のマッピングを示します。</li><li><code>cmpName</code>は、現在アクティブなCMP（テンプレートによる）を示します。</li><li><code>cmpIntegrationVersion</code>は、使用しているベンダー固有の統合テンプレートの現在のバージョンを示します。</li><li><code>version</code>は、使用している基本的な同意強制フレームワークのバージョンを示します。</li></ul><p>このオブジェクトに含まれる特定の統合機能の詳細については、カスタム統合の作成に関する関連<a href=\"/ja/iq-tag-management/consent/consent-integrations/custom-cmp/\">ドキュメンテーション</a>を参照してください。</p>"
        }  

    , 
        {
            "weight": "480",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/custom-cmp/",
            "title": "同意統合 - カスタムCMP統合",
            "body":"<h2 id=\"動作原理\">動作原理</h2><p>Tealium Consent Integrationsは、2つのパートで構成されています。</p><ul><li>Tealium iQの同意強制フレームワーク（<code>utcm_framework</code>テンプレート）。</li><li>Tealium iQの同意強制フレームワークを活用するCMP固有の統合テンプレート。これらの統合テンプレートは、できるだけ軽量に設計されています。</li></ul><p>当社の<a href=\"/ja/iq-tag-management/consent/consent-integrations/supported-vendors/\">事前構築済みの統合</a>は、さまざまな同意管理プラットフォーム（CMP）との統合をサポートしています。ただし、次の場合にはカスタム統合が推奨されます。</p><ul><li>事前構築済みの統合がないCMPを使用する場合。</li><li>同意をキャプチャするための内部ツールを使用する場合。</li><li>標準の統合を破壊する大幅なカスタマイズが施されたサポートされているCMPを使用する場合。</li></ul><p>このような場合、カスタム統合を使用できます。JavaScript関数を使用することで、どの同意キャプチャツールでも強制フレームワークを活用できます。</p><p>新しいカスタム統合を追加するには、既存の統合と提供されたテンプレートをガイドとして使用します。</p><p>以下は、カスタム統合を作成するための基本的なワークフローの説明です。</p><ol><li>Tealium iQの外部（CMPが実装されているウェブサイト）で統合を開発およびデバッグします。</li><li>Tealium iQで新しいカスタム同意統合と目的グループを追加します。詳細については、<a href=\"/ja/iq-tag-management/consent/consent-integrations/manage/\">同意統合と目的グループの管理</a>を参照してください。</li><li>Tealium iQと適切なタグを目的グループ内の目的に割り当てます。</li><li>テンプレートを作成するために、プロファイルを保存します。</li><li>新しく作成したテンプレートを編集します。詳細については、<a href=\"/ja/iq-tag-management/templates/manage/\">テンプレートの管理</a>を参照してください。</li><li>テンプレートを開発環境またはテスト環境に公開して、すべてが予想どおりに動作することを確認し、通常のテストおよび公開フローに従います。</li></ol><h2 id=\"カスタム統合の開発デバッグ検証\">カスタム統合の開発、デバッグ、検証</h2><p>カスタムCMP統合を作成するには、以下の手順を完了します。</p><h3 id=\"公開前の開発とデバッグ\">公開前の開発とデバッグ</h3><p>開発中にデバッグするには、次の手順を実行します。</p><ol><li><a href=\"#custom-integration-template\">カスタムテンプレート</a>の末尾にある<strong>デバッグ</strong>ブロックのコメントを解除します。</li><li>テンプレートを、サポートするCMPが実行されているウェブサイトのコンソールに貼り付けます。</li><li>デバッグコードブロックが同意の決定を出力します。</li><li>決定をカスタマイズし、テンプレートを再度貼り付けて新しく解釈された同意の決定を確認します。</li><li>テンプレートに満足したら、テンプレートをTealium iQに貼り付けて公開する前に、再度デバッグブロックのコメントを解除します。</li></ol><p>また、プロファイルを保存し、<a href=\"/ja/iq-tag-management/templates/manage/\">テンプレートを編集</a>することで、デバッグスニペットを見つけることもできます。</p><h3 id=\"公開後の検証\">公開後の検証</h3><p>公開後のテンプレートのデバッグと検証には、デバッグモードまたは<code>window.tealiumCmpOutput</code>オブジェクトを使用する方法があります。</p><h4 id=\"デバッグモードの使用\">デバッグモードの使用</h4><p><a href=\"/ja/platforms/javascript/debugging/\">デバッグモード</a>を使用するには、次の手順を実行します。</p><ul><li>コンソールで<code>document.cookie = &quot;utagdb=true&quot;</code>と入力して、<code>utagdb</code>クッキーを<code>true</code>に設定します。</li><li>コンソールのフィルタを設定して、関連する出力のみ表示します（デバッグ出力には推奨されるフィルタが含まれています）。</li><li>予想どおりに動作するかを確認するために、さまざまなオプションをテストします。</li></ul><h4 id=\"windowtealiumcmpoutputオブジェクトの使用\"><code>window.tealiumCmpOutput</code>オブジェクトの使用</h4><p><code>window.tealiumCmpOutput</code>オブジェクトを使用するには、次の手順を実行します。</p><ul><li>テンプレートの末尾にコメントアウトされたデバッグコードブロックをコンソールに貼り付けて、決定と関連する出力のみを表示します。</li><li>必要に応じて、テンプレート内の関数を個別に呼び出すか、このオブジェクトの他の有用なプロパティにアクセスすることもできます。</li></ul><p>事前構築済みおよびカスタム統合の詳細なデバッグのヒントについては、<a href=\"/ja/iq-tag-management/consent/consent-integrations/validate-and-debug/\">同意統合の検証とデバッグ</a>を参照してください。</p><h2 id=\"統合関数\">統合関数</h2><p>統合のCMP固有のコンポーネントは、<code>window.tealiumCmpIntegration</code>オブジェクトを使用して定義されます。</p><p><code>window.tealiumCmpIntegration</code>オブジェクトは、<code>.cmpName</code>、<code>.cmpIntegrationVersion</code>の名前とバージョン、および次の関数から構成されています。</p><h3 id=\"動作モードの判定\">動作モードの判定</h3><ul><li><code>.cmpCheckIfOptInModel</code> - 統合が<code>オプトイン</code>モデルまたは<code>オプトアウト</code>モデルで動作するかを判定します。ブール値を返します。</li></ul><h3 id=\"決定の取得\">決定の取得</h3><ul><li><code>.cmpFetchCurrentConsentDecision</code> - 同意の決定の現在の生のバージョン（CMPからの生のバージョン）を取得します。結果はオブジェクトである必要があり、すべての後続の関数に引数として渡されます。</li></ul><h3 id=\"決定の検証と標準化\">決定の検証と標準化</h3><ul><li><p><code>.cmpCheckForWellFormedDecision</code> - 同意の決定の生のバージョンが正しく形成されて理解可能かどうかをチェックします。ブール値を返します。</p></li><li><p><code>.cmpCheckForTiqConsent</code> - 同意の決定にTealium iQによるデータ処理の許可が含まれているかどうかを判定します。falseの場合、何も実行されません。ブール値を返します。</p></li><li><p><code>.cmpCheckForExplicitConsentDecision</code> - 同意の決定が<code>明示的</code>または<code>暗黙的</code>かどうかを判定します。ブール値を返します。</p></li><li><p><code>.cmpConvertResponseToGroupList</code> - 生の決定を、下流の強制のための許可された目的キーの単純な配列に変換します。同意された目的キーの配列を返します。</p></li></ul><h2 id=\"カスタム統合テンプレート\">カスタム統合テンプレート</h2><p>以下は、独自のカスタム統合を作成するための空のテンプレートです。テンプレートの末尾には、同意統合をデバッグおよび検証するために使用できるデバッグスニペットが含まれています。</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">myCustomConsentIntegration</span> (window) {</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">/**</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * このテンプレートは編集するために作成されており、独自のカスタムCMP / キャプチャツールのサポートを構築するために使用します。</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * 例のコード（コメントアウトされています）は、オプトアウトクッキーをチェックし、次の2つの決定のいずれかを返します。</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *  - [&#39;no-selling&#39;]（任意の値を持つオプトアウトクッキーが見つかった場合） - 常に明示的な決定（オプトアウトクッキーが設定されています）</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *  - [&#39;no-selling&#39;, &#39;yes-selling&#39;]（オプトアウトクッキーが見つからない場合） - 常に暗黙的な決定（クッキーが設定されていません）</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * オプトアウトクッキーの（大文字と小文字を区別する）名前は、UIの「ベンダーID」フィールドから取得されます。</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * 詳細については、https://docs.tealium.com/iq-tag-management/consent-integrations/supported-vendors/#opt-out-cookie--gpc を参照してください。</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * </span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * （上記の統合は、この例のために簡略化されており、GPCロジックは削除されています）</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP固有の機能とラベル</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;カスタム例&#39;</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;v1.0.0&#39;</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">/*</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  // UIで入力されたベンダーIDを取得する</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  var optOutCookieName = (window.tealiumCmpIntegration &amp;&amp; window.tealiumCmpIntegration.map &amp;&amp; Object.keys(window.tealiumCmpIntegration.map)[0]) || &#39;error-no-map-found-so-no-cookie-name-available&#39;</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  */</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMPが「オプトイン」モデル（GDPRスタイル）で実行されている場合はtrueを返す必要があります</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#75715e\">// このオプトアウトクッキーの例は、オプトアウトモデル（CCPA/CPRAスタイル）のみをサポートしているため、ハードコードされたfalseを返します。</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return false</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// 必要な情報を含む、CMP固有の生のオブジェクト（オブジェクトである必要があります）を返す必要があります</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#75715e\">// この出力は、後続の関数のcmpRawOutput引数として使用されます</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    // ここではタグマネージャの機能を使用できないため、クッキーを読み取る関数を定義します</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    var readCookie = function (name) {</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      var reString = &#39;(?:(?:^|.*;\\s*)&#39; + name + &#39;\\s*\\=\\s*([^;]*).*$)|^.*$&#39;</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      var re = new RegExp(reString)</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      var cookieValue = document.cookie.replace(re, &#39;$1&#39;)</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      if (!cookieValue) return undefined</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      return cookieValue</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    }</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    var cookie = readCookie(optOutCookieName) || &#39;opt-out-cookie-not-found&#39;</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return { cookieState: cookie } // 統合が機能するためにはオブジェクトを返さなければならないため、他のプロパティ（例：Global Privacy Control）を追加できます</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// Tealium iQが正しいCMP構成を持っていることを確認するための文字列を返す必要があります</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return optOutCookieName</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// ブール値を返す必要があります。生の決定がCMPの期待に合致している場合はtrueです</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return typeof cmpRawOutput === &#39;object&#39; &amp;&amp; typeof cmpRawOutput.cookieState === &#39;string&#39;</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// ブール値を返す必要があります。同意の決定がユーザーによって明示的に行われた場合はtrueです</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    // この例では、決定が明示的かどうかを判断する唯一の方法は、オプトアウトクッキーが設定されているかどうかを確認することです</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    if ((typeof cmpRawOutput === &#39;object&#39; &amp;&amp; typeof cmpRawOutput.cookieState === &#39;string&#39; &amp;&amp; cmpRawOutput.cookieState !== &#39;opt-out-cookie-not-found&#39;)) return true</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return false</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// 同意されたベンダー/目的の配列を返す必要があります。これらはTealium iQの目的と完全に一致する必要があります</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    var consentDecision = [&#39;no-selling&#39;] // データを販売/共有しないタグは常に許可されます</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    // セルデータを販売するタグが許可されているかどうかを判断するための非常にシンプルなオプトアウトクッキーのチェック</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    if (cmpRawOutput.cookieState === &#39;opt-out-cookie-not-found&#39;) {</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      consentDecision.push(&#39;yes-selling&#39;) // クッキーが見つからないため、データの販売/共有は問題ないと仮定する必要があります</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    }</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return consentDecision</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// この関数やそれ以下の内容を変更する必要はありません</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 理解できないものはオプトアウトとして扱います</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span>})(window)</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">/*</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  // デバッグ/開発出力 - このブロックのコメントを解除し、テストページにこのテンプレート全体を貼り付け/再貼り付けします</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  var outputString = `${tealiumCmpIntegration.cmpCheckIfOptInModel() ? &#39;オプトイン&#39; : &#39;オプトアウト&#39;} モデル</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  チェック:</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - id:          ${tealiumCmpIntegration.cmpFetchCurrentLookupKey()}</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - well-formed: ${tealiumCmpIntegration.cmpCheckForWellFormedDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - explicit:    ${tealiumCmpIntegration.cmpCheckForExplicitConsentDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - group list:  ${JSON.stringify(tealiumCmpIntegration.cmpConvertResponseToGroupList(tealiumCmpIntegration.cmpFetchCurrentConsentDecision()))}</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  `</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  console.log(outputString);</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">*/</span></span></span></code></pre></div>"
        }  

    , 
        {
            "weight": "485",
            "url": "https://docs.tealium.com/ja/iq-tag-management/consent/consent-integrations/enforcement-conditions-conflict/",
            "title": "実施条件の競合の取り扱い",
            "body":"<h2 id=\"プライバシー原則\">プライバシー原則</h2><p>あなたのビジネスのデータ活性化が関連するポリシーや規制を遵守し、ユーザーエラーや誤構成によるデータ漏洩を防ぐために、私たちはプライバシーバイデザインとプライバシーバイデフォルトの原則を厳格に遵守してConsent Integrationsを構築しました。これらの原則は、明確な同意または明確な条件が満たされた場合にのみデータの処理と活性化が許可されることを要求します。</p><h2 id=\"consent-integrationsが実施条件の競合をどのように取り扱うか\">Consent Integrationsが実施条件の競合をどのように取り扱うか</h2><ul><li><p><strong>少なくとも1つのConsent Integrationまたは免除がアクティブな場合</strong>：あなたの同意管理プラットフォーム（CMP）からの特定の信号なしにはデータ処理は許可されません。</p></li><li><p><strong>2つ以上の強制ルールがインテグレーションで重複する場合</strong>：Tealium iQはロードされず、タグは発火しません。</p></li><li><p><strong>免除は重複してもよい</strong>：単一のIntegrationが任意の数のExemptionsと重複する場合、Integrationが強制され、Exemptionsは無視されます。</p></li></ul><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>曖昧なシナリオ、例えば2つのインテグレーションが存在し、その両方の強制ルールが<code>true</code>に評価される場合、Consent Integrationsは潜在的なデータ漏洩を防ぐためにデータ処理と活性化を保留します。これはブロックされたタグからのデータの損失を招く可能性がありますが、データ漏洩のリスクを軽減するための予防措置です。</p><p>以下の表は、アクティブな免除とインテグレーションの数に応じて、Consent Integrationsが競合をどのように取り扱うかを示しています：</p><table><thead><tr><th><strong>免除</strong></th><th><strong>インテグレーション</strong></th><th><strong>競合の取り扱い</strong></th></tr></thead><tbody><tr><td>0</td><td>0</td><td>すべてのデータ処理をブロック</td></tr><tr><td>1+</td><td>0</td><td>すべてのデータ処理を許可</td></tr><tr><td>任意</td><td>1</td><td>目的特定のブロックを適用</td></tr><tr><td>任意</td><td>2+</td><td>すべてのデータ処理をブロック</td></tr></tbody></table>"
        }  

    ]
}
