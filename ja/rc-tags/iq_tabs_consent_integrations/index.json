
{
    "kind": "term",
    "name": "iq_tabs_consent_integrations",
    "count": 9,
    "items": [

    
        {
            "weight": "115",
            "url": "https://docs.tealium.com/ja/consent/client-side/consent-register/",
            "title": "Tealium同意登録",
            "body": "<p>Tealium同意登録は、<a href=\"/ja/consent/client-side/consent-integrations/about/\">Tealium iQ Consent Integrations</a>および<a href=\"/ja/consent/client-side/consent-management/about/\">Consent Manager</a>によって使用され、ウェブサイトのコード全体に同意信号を公開します。また、Google同意モードタグがこれらの信号に直接アクセスし、適切な反応を可能にします。</p>\n<h2 id=\"主な機能\">主な機能</h2>\n<ul>\n<li><strong>ユニバーサル同意イベント</strong>: 最新のConsent Manager（<code>cmGeneral</code>テンプレートv3.1.0から）とConsent Integrations（フレームワークテンプレートv1.2.0から）は、同意構成が読み込まれたり更新されたりするときにイベントを発生させるために同意登録を使用します。これらの変更はページ上の<code>window.tealiumConsentRegister</code>オブジェクトで全世界的にアクセス可能です。詳細については、<a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\">MDN Web Docs: イベントの紹介</a>を参照してください。</li>\n<li><strong>すべての同意信号のサポート</strong>: <code>implicit</code>および<code>explicit</code>の両方の同意信号を発行および保持します。</li>\n<li><strong>イベントリスニング</strong>: ページ上の任意のタグまたはスクリプトが<code>consent_loaded</code>および<code>consent_changed</code>イベントをリッスンできます。これにより、同意ステータスの変更に基づいて反応的なアクションが可能になります。詳細については、<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\">MDN Web Docs: EventTarget addEventListener() メソッド</a>を参照してください。</li>\n<li><strong>拡張のための堅固な基盤</strong>: Tealium同意登録は、高度なカスタマイズオプションを提供し、将来の新機能の追加を容易にする堅牢な新システムを導入します。</li>\n</ul>\n<h2 id=\"動作原理\">動作原理</h2>\n<p>Tealium同意登録は、同意決定をウェブサイトのコード全体で共有することにより、同意管理を改善します。これにより、Google同意モードなどの機能がこれらの決定にアクセスして適切なアクションを取ることが可能になります。これは同意信号の標準化レイヤーとして機能し、それらの標準化された同意信号をウェブページ上で簡単に利用できるようにします。</p>\n<h2 id=\"google同意モード\">Google同意モード</h2>\n<p>基本的な背景とコンテキストについては、<a href=\"/ja/consent/client-side/google-consent-mode/\">Google同意モード</a>を参照してください。ページにGoogleタグを統合する適切なタイミングと方法については、リーダーシップおよび法務チームに相談することが重要です。</p>\n<h3 id=\"前提条件\">前提条件</h3>\n<ul>\n<li>CMPから既存の同意モード機能を無効にして、競合を防ぎます。</li>\n<li>使用ケースに基づいて、Consent IntegrationsフレームワークまたはConsent Managerの<code>cmGeneral</code>テンプレートの最新バージョンに更新します。</li>\n<li>同意モードマッピングのためのJavaScript拡張を追加します。詳細については、<a href=\"/ja/consent/client-side/google-consent-mode/#consent-purpose-mapping\">同意目的マッピング</a>を参照してください。</li>\n<li><a href=\"/ja/client-side-tags/google-consent-mode-tag/\">Google同意モードタグ</a>をインストールします。同意目的マッピング拡張からの変数名を使用する場合、追加のマッピングは必要ありません。</li>\n<li>同意モードタグ（および関連するすべてのGoogleタグ）を適切に分類します。高度な同意モードを実装している場合は常に発火を許可し、適切な同意がある場合のみ発火を許可するようにします。</li>\n</ul>\n<h2 id=\"高度な使用例\">高度な使用例</h2>\n<h3 id=\"同意決定へのアクセス\">同意決定へのアクセス</h3>\n<p><code>window.tealiumConsentRegister.currentDecision</code>オブジェクトを使用すると、ウェブページ上の現在の同意決定に直接アクセスできます。これにより、次のようなカスタムアクションの実装が簡素化されます：</p>\n<ul>\n<li>ベンダーへのオプトアウトイベントの送信により、オーディエンスからの削除と完全な下流での非アクティブ化を可能にします。</li>\n<li>CMPが提供するものに加えて、Tealium iQ拡張を使用した同意ログの追加レイヤー。</li>\n<li>同意変更の追跡、JavaScript APIコールを通じて現在の決定にアクセスを可能にします。</li>\n</ul>\n<p>Consent IntegrationsとConsent Managerの場合、配列内の目的IDは特定の構成ごとに異なります。</p>\n<pre tabindex=\"0\"><code>// 現在の決定を取得\nvar currentDecision = window.tealiumConsentRegister.currentDecision\n\n// 現在のページが読み込まれてから登録されたすべての決定を取得\nvar allDecisionsOnThisPage = window.tealiumConsentRegister.decisions\n</code></pre><p><strong>OneTrustを使用したConsent Integrationsの例</strong></p>\n<p>この例では、オプトインモデル（暗黙の決定）で開始し、説明のためにオプトインおよびオプトアウトを行います。</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-and-consent-integrations.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-and-consent-integrations.png\"\n         alt=\"OneTrustを使用したConsent Integrationsの例\"\n         title=\"OneTrustを使用したConsent Integrationsの例\"/>\n    </a>\n</figure>\n<h3 id=\"同意変更の監視\">同意変更の監視</h3>\n<p>同意登録は、ページ上で<code>implicit</code>または<code>explicit</code>同意信号が最初に検出されたとき、または同意決定が更新されたときにイベントを発生させます。</p>\n<pre tabindex=\"0\"><code>// 同意変更を表面化するためのイベントリスナーの例を構成\n\n// ページコードごとに一度実行できるように実装 - 使用ケースに応じてPre LoaderまたはDOM Readyを使用できます\nwindow.addEventListener(&#39;consent_loaded&#39;, (event) =&gt; {\n  console.log(&#39;Consent loaded:&#39;, event.detail.decision);\n});\n\nwindow.addEventListener(&#39;consent_updated&#39;, (event) =&gt; {\n  console.log(&#39;Consent updated:&#39;, event.detail.decision);\n});\n</code></pre><p><strong>初回訪問時にオプトインするヨーロッパのユーザーのConsent Manager例</strong></p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-and-consent-manager.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-and-consent-manager.png\"\n         alt=\"Consent Managerの例\"\n         title=\"Consent Managerの例\"/>\n    </a>\n</figure>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>透明性のため、これらの決定には常に<code>always_on</code>カテゴリが含まれます。これは、<code>omitted</code>タグが常に許可されるためです。</p>\n<h3 id=\"タグが発火を許可されているかどうかを確認\">タグが発火を許可されているかどうかを確認</h3>\n<p><code>isTagAllowed</code>メソッドを使用すると、現在の同意構成とユーザー決定に基づいて特定のTealium iQタグが発火を許可されているかどうかを確認できます。このメソッドの主な使用例は、以前に許可されていたタグの同意が取り消された場合のフォールバック動作です。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-javascript\" data-lang=\"javascript\"><span style=\"display:flex;\"><span>window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span>.<span style=\"color:#a6e22e\">isTagAllowed</span>(<span style=\"color:#a6e22e\">tagId</span>);\n</span></span></code></pre></div><ul>\n<li><code>tagId</code>（整数または文字列）: チェックするタグのUIDで、Tealium iQのタグに表示されます。このメソッドは、数値または数値に変換可能な文字列（例えば、「7」）を受け入れます。</li>\n<li>戻り値はブール値: タグが必要な同意を持っている場合は<code>true</code>、タグが許可されていない、存在しない、または同意が与えられていない場合は<code>false</code>です。</li>\n</ul>\n<p>どちらの条件も当てはまらない場合、または<code>tagId</code>が存在しない場合、メソッドは<code>false</code>を返します。</p>\n<h4 id=\"オプトアウト処理\">オプトアウト処理</h4>\n<p><code>isTagAllowed</code>メソッドをTealium iQタグテンプレートに統合するには、テンプレートを編集するか、タグスコープの拡張を使用します。同意が取り消されたときにベンダー固有のオプトアウトアクションを処理するコールバックを構成します。以前に許可されていたタグが後でブロックされた場合、コールバックは次のことができます：</p>\n<ul>\n<li>ベンダーへのオプトアウトリクエストをトリガーします。</li>\n<li>ページからベンダーのオブジェクトを削除して、さらなるデータ送信を停止します。</li>\n<li>ベンダー固有のクッキーを削除します。</li>\n<li>その他の関連するクリーンアップアクションを実行します。</li>\n</ul>\n<p>これらのコールバックをタグスコープの拡張または直接タグテンプレートに追加します。</p>\n<h4 id=\"タグ内での統合例タグスコープの拡張ハードコードされたuid\">タグ内での統合例（タグスコープの拡張、ハードコードされたUID）</h4>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-javascript\" data-lang=\"javascript\"><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// コールバックを一度だけ追加することを確認してください（新しいタグスコープのブール値を使用）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">u</span>.<span style=\"color:#a6e22e\">consent_callback_initialized</span>) {\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#a6e22e\">u</span>.<span style=\"color:#a6e22e\">consent_callback_initialized</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">addEventListener</span>(<span style=\"color:#e6db74\">&#39;consent_updated&#39;</span>, (<span style=\"color:#a6e22e\">event</span>) =&gt; {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">exists</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span> <span style=\"color:#f92672\">&amp;&amp;</span>\n</span></span><span style=\"display:flex;\"><span>                 <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span>.<span style=\"color:#a6e22e\">isTagAllowed</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#34;function&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">exists</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span>.<span style=\"color:#a6e22e\">isTagAllowed</span>(<span style=\"color:#ae81ff\">7</span>)) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#34;Opt-out signal triggered for tag 7.&#34;</span>);\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#75715e\">// ここで適切な、ベンダー固有のオプトアウトロジックを実装します。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>      <span style=\"color:#75715e\">// 必要に応じて重複を排除します\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    }\n</span></span><span style=\"display:flex;\"><span>  });\n</span></span><span style=\"display:flex;\"><span>}\n</span></span></code></pre></div><h4 id=\"タグ内の例示的な統合テンプレートコード動的uid\">タグ内の例示的な統合（テンプレートコード、動的UID）</h4>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>文字列 <code>##UTID##</code> はタグの一意のIDを表す動的なプレースホルダーです。この値は実行時にTealiumによって自動的に実際のタグIDに置き換えられます。手動で <code>##UTID##</code> を自分の値に置き換える必要はありません。</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-javascript\" data-lang=\"javascript\"><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// コールバックを一度だけ追加するようにしてください（新しいタグスコープのブール値を使用）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">u</span>.<span style=\"color:#a6e22e\">consent_callback_initialized</span>) {\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#a6e22e\">u</span>.<span style=\"color:#a6e22e\">consent_callback_initialized</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">addEventListener</span>(<span style=\"color:#e6db74\">&#39;consent_updated&#39;</span>, (<span style=\"color:#a6e22e\">event</span>) =&gt; {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">exists</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span> <span style=\"color:#f92672\">&amp;&amp;</span>\n</span></span><span style=\"display:flex;\"><span>                 <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span>.<span style=\"color:#a6e22e\">isTagAllowed</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#34;function&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">exists</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span>.<span style=\"color:#a6e22e\">isTagAllowed</span>(<span style=\"color:#e6db74\">&#34;##UTID##&#34;</span>)) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#34;タグ &#34;</span> <span style=\"color:#f92672\">+</span> <span style=\"color:#e6db74\">&#34;##UTID##&#34;</span> <span style=\"color:#f92672\">+</span> <span style=\"color:#e6db74\">&#34; に対するオプトアウト信号がトリガーされました&#34;</span>);\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#75715e\">// ここで適切なベンダー固有のオプトアウトロジックを実装し、\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>      <span style=\"color:#75715e\">// 必要に応じて重複を排除します\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    }\n</span></span><span style=\"display:flex;\"><span>  });\n</span></span><span style=\"display:flex;\"><span>}\n</span></span></code></pre></div><h2 id=\"同意イベントとリスナーのフローダイアグラム\">同意イベントとリスナーのフローダイアグラム</h2>\n<p>新しいイベントとリスナーを説明するためのフローの簡略化された概要です。</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-flow.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-flow.png\"\n         alt=\"同意統合の決定フロー\"\n         title=\"同意統合の決定フロー\" width=\"1500\" height=\"2000\"/>\n    </a>\n</figure>\n<h2 id=\"tealium-同意レジスタの抑制\">Tealium 同意レジスタの抑制</h2>\n<p>プリローダー拡張機能で <code>suppressConsentRegister</code> フラグを構成することにより、同意レジスタを抑制できます。</p>\n<p>同意レジスタを抑制するには、プリローダースコープのJavaScriptコード拡張機能に次のコードを追加します：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-javascript\" data-lang=\"javascript\"><span style=\"display:flex;\"><span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {};\n</span></span><span style=\"display:flex;\"><span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">suppressConsentRegister</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span></code></pre></div><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>この構成は慎重に使用してください。これにより、<strong>すべての</strong>同意レジスタ機能が抑制されます。</p>\n"
        }  

    , 
        {
            "weight": "120",
            "url": "https://docs.tealium.com/ja/consent/client-side/google-consent-mode/",
            "title": "Google コンセントモード",
            "body": "<p>Google コンセントモードは、データ収集のためのユーザー同意を管理するための二つのアプローチを提供します：<strong>基本コンセントモード</strong>と<strong>高度コンセントモード</strong>。これらのモードを理解することは、データプライバシー規制の遵守とデータ収集戦略の最適化に不可欠です。</p>\n<ul>\n<li>\n<p><strong>基本コンセントモード</strong>: 伝統的なアプローチで、ユーザーの同意が得られない場合はタグやコネクタアクションがブロックされます。これにより、同意なしに個人を特定できる情報（PII）を含む無許可のデータ収集を防ぎます。</p>\n</li>\n<li>\n<p><strong>高度コンセントモード</strong>: このアプローチでは、同意の状態に関係なくGoogleタグをロードし、ユーザーの同意決定をGoogleに通知します。タグは次のいずれかの方法で適応します：</p>\n<ul>\n<li>トラッキングに同意していないユーザーから匿名データを収集するためのクッキーなしエンドポイントを使用する。</li>\n<li>同意を提供したユーザーに対しては、標準エンドポイントを使用する。</li>\n</ul>\n<p>この高度な戦略は、PIIの使用に対するユーザーの同意を尊重しながら、分析と広告のコンバージョンのためのデータ収集を最大化することを目指しています。</p>\n</li>\n</ul>\n<p>法務およびリーダーシップチームと相談し、ポリシーに合致するコンセントモードを決定することが重要です：同意なしにデータ収集をブロックする（基本）か、標準トラッキングに同意していない訪問の匿名データを収集するGoogleの方法を採用する（高度）か。</p>\n<p>詳細については、<a href=\"https://support.google.com/google-ads/answer/10000067\">Google Ads Help: About consent mode</a>を参照してください。</p>\n<h2 id=\"仕組み\">仕組み</h2>\n<p>Google コンセントモードを実装するには、JavaScript Code エクステンションを追加して、同意選択をGoogle コンセントモード構成にマッピングし、デフォルトの同意構成とカテゴリマッピングを持つ <a href=\"/ja/client-side-tags/google-consent-mode-tag/\">Google Consent Mode tag</a> を構成します。訪問が同意選択を行うと、Google コンセントモードタグはこれらの構成をGoogleタグに通知し、適切なデータ収集エンドポイント（デフォルトの収集エンドポイントまたはクッキーなしエンドポイント）を選択してデータをGoogleに送信します。</p>\n<p>基本および高度コンセントモードの両方で、Google Consent Mode tagは自身でデータを送信しないため、常に発火させることができます。代わりに、他のタグが反応するためのシグナルを提供します。</p>\n<h2 id=\"同意目的のマッピング\">同意目的のマッピング</h2>\n<p>エンドユーザーの同意選択をGoogle コンセントモード構成にマッピングするには、JavaScript Code エクステンションが必要です。このエクステンションを使用して、さまざまな目的またはベンダーに対するエンドユーザーの現在の同意決定をキャプチャし、対応するGoogle コンセントモードの目的または構成に <code>granted</code> または <code>denied</code>（または特定のシナリオで <code>true</code> / <code>false</code>）のステータスを割り当てます。</p>\n<h3 id=\"javascript-エクステンションテンプレート\">JavaScript エクステンションテンプレート</h3>\n<p>JavaScript エクステンションを構成するには、次のテンプレートコードを使用します。これはロードルールの後に実行され、常に実行されるように構成されるべきです：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// After Load Rules - Run Always\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">consent_decision</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">tealiumConsentRegister</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tealiumConsentRegister</span>.<span style=\"color:#a6e22e\">currentDecision</span>) <span style=\"color:#f92672\">||</span> [];\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ad_storage_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ad_user_data_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_analytics_storage_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ad_personalization_consent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;granted&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;denied&#39;</span>;\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_ads_data_redaction</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;true&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;false&#39;</span>;\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">google_url_passthrough</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">your</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">logic</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">here</span><span style=\"color:#f92672\">&gt;</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;true&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;false&#39;</span>;\n</span></span></code></pre></div><p><code>&lt;your-logic-here&gt;</code> を、ユーザーの同意に基づいて <code>granted</code> または <code>denied</code>、<code>true</code> または <code>false</code> に評価される条件に置き換えてください。</p>\n<h3 id=\"例\">例</h3>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>あなたの実装は、あなたの同意構成によって異なる場合があります。</p>\n<h4 id=\"consent-manager-の例\">Consent Manager の例</h4>\n<p>Consent Managerを使用している場合、同意ステータスを決定するロジックは次のようになるかもしれません：</p>\n<pre tabindex=\"0\"><code>// After Load Rules - Run Always\nb.consent_decision = (tealiumConsentRegister &amp;&amp; tealiumConsentRegister.currentDecision) || [];\nb.google_ad_storage_consent = b.consent_decision.indexOf(&#39;display_ads&#39;) !== -1  ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ad_user_data_consent = b.consent_decision.indexOf(&#39;personalization&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_analytics_storage_consent = b.consent_decision.indexOf(&#39;analytics&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ad_personalization_consent = b.consent_decision.indexOf(&#39;personalization&#39;) !== -1 &amp;&amp; b.consent_decision.indexOf(&#39;display_ads&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ads_data_redaction = b.consent_decision.indexOf(&#39;personalization&#39;) === -1 || b.consent_decision.indexOf(&#39;display_ads&#39;) === -1 ? &#39;true&#39; : &#39;false&#39;;\nb.google_url_passthrough = b.consent_decision.indexOf(&#39;personalization&#39;) !== -1 ? &#39;true&#39; : &#39;false&#39;;\n</code></pre><h4 id=\"onetrustを使用したconsent-integrationsの例\">OneTrustを使用したConsent Integrationsの例</h4>\n<p>Consent IntegrationsとOneTrustを使用している場合、ロジックは次のようになるかもしれません：</p>\n<pre tabindex=\"0\"><code>// After Load Rules - Run Always\nb.consent_decision = (tealiumConsentRegister &amp;&amp; tealiumConsentRegister.currentDecision) || [];\nb.google_ad_storage_consent = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1  ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ad_user_data_consent = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_analytics_storage_consent = b.consent_decision.indexOf(&#39;C0001&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ad_personalization_consent = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1 &amp;&amp; b.consent_decision.indexOf(&#39;C0003&#39;) !== -1 ? &#39;granted&#39; : &#39;denied&#39;;\nb.google_ads_data_redaction = b.consent_decision.indexOf(&#39;C0004&#39;) === -1 || b.consent_decision.indexOf(&#39;C0003&#39;) === -1 ? &#39;true&#39; : &#39;false&#39;;\nb.google_url_passthrough = b.consent_decision.indexOf(&#39;C0004&#39;) !== -1 ? &#39;true&#39; : &#39;false&#39;;\n</code></pre><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>これらの正確な変数名を使用する場合、追加のマッピングは必要ありません。Google コンセントモードタグの最新バージョンは、これらの変数をデフォルトで使用します。</p>\n<h3 id=\"エクステンションの同意パラメータを選択する\">エクステンションの同意パラメータを選択する</h3>\n<p>JavaScript エクステンションで使用する同意パラメータを特定するには、次の手順に従います：</p>\n<ol>\n<li>\n<p>ブラウザのクッキーとキャッシュをクリアします。</p>\n</li>\n<li>\n<p>最新のConsent ManagerまたはConsent Integrationsテンプレートがアクティブなウェブサイトまたはステージング環境を訪問します。</p>\n</li>\n<li>\n<p>GDPRスタイルのオプトインモデルを使用している場合、同意ダイアログですべてのトラッキングを受け入れます。</p>\n</li>\n<li>\n<p>ブラウザの開発者ツールを開き、コンソールに移動します。</p>\n</li>\n<li>\n<p><code>TealiumConsentRegister</code> オブジェクトを表示するには、<code>tealiumConsentRegister</code> を入力します。このオブジェクトには <code>currentDecision</code> と <code>decisions</code> 配列が含まれています。<code>currentDecision</code> 配列には、現在許可されている目的が含まれています。</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-register-and-consent-integrations.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-register-and-consent-integrations.png\"\n             alt=\"OneTrustを使用したConsent Integrationsの例\"\n             title=\"OneTrustを使用したConsent Integrationsの例\"/>\n        </a>\n    </figure>\n</li>\n</ol>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i><code>currentDecision</code> オブジェクトは、あなたのロジックで使用できる同意オプションを <code>b.consent_decision.indexOf('&lt;Value to change&gt;')</code> でリストします。</p>\n"
        }  

    , 
        {
            "weight": "465",
            "url": "https://docs.tealium.com/ja/consent/client-side/consent-integrations/about/",
            "title": "コンセント統合について",
            "body": "<p>コンセント執行フレームワークは、Tealium iQ コンセント統合の核となる機能であり、Tealium iQ タグ管理の外部でキャプチャされたコンセント信号を執行します。この機能は、顧客の同意が得られていないか不明瞭な場合にトラッキングをブロックします。</p>\n<p>コンセント統合は、サポートされているコンセント管理プラットフォーム（CMP）のためのオプトイン（GDPRスタイル）とオプトアウト（CCPAスタイル）の執行パターンの両方をサポートします。統合は、ほとんどのCMPまたはカスタムソリューションをサポートするためにテンプレートを使用することができます。</p>\n<h2 id=\"要件\">要件</h2>\n<p>コンセント統合には <code>utag.js</code> バージョン4.49以降が必要です。</p>\n<h2 id=\"以前のバージョンのサポート\">以前のバージョンのサポート</h2>\n<p>以前のバージョンの <code>utag.js</code> でサポートを有効にするには、<strong>uTag Loader</strong> テンプレートを編集し、<code>##UTGEN##</code> パブリッシュエンジンフラグの下に <code>##UTCM##</code> を追加します。</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/utcm-utag-loader-template.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/utcm-utag-loader-template.png\"\n         alt=\"uTag Loader template\"\n         title=\"uTag Loader template\"/>\n    </a>\n</figure>\n<p><strong>uTag Loader</strong> テンプレートを更新する方法についての詳細は、<a href=\"/ja/iq-tag-management/templates/manage/#update-a-template\">テンプレートの更新</a>を参照してください。</p>\n<h2 id=\"コンセントの概念\">コンセントの概念</h2>\n<p>以下の用語は、コンセント統合フレームワークで使用される概念を説明します：</p>\n<ul>\n<li><strong>目的</strong>：ウェブサイトのユーザーが同意または拒否できる特定のデータ使用目的。</li>\n<li><strong>目的グループ</strong>：タグが割り当てられる執行ポリシーを表す目的のグループ。</li>\n<li><strong>免除</strong>：執行が必要ないシナリオであり、同意の決定に基づいてタグをブロックする必要はありません。執行免除は、コンセント統合執行ルールが適用されない場合の動作とは異なります。明示的な免除がある場合、または適切なコンセント統合と適切な同意決定が一致している場合を除き、タグは発火することは許可されません。</li>\n<li><strong>執行ルール</strong>：コンセント統合または免除をいつ執行するかを決定するルール。</li>\n<li><strong>同意決定</strong>：ユーザーが同意した目的の配列で、ユーザーがアクティブな決定を行ったかどうかを示す <code>type</code> 属性（<code>explicit</code> または <code>implicit</code>）が含まれます。</li>\n<li><strong>暗黙の決定</strong>：ユーザーの行動から推測される決定。サイトを訪れることにより、ユーザーはサイトのプライバシーポリシーに記載されている必要なタグに同意します。ユーザーは自分のデータの販売に異議を唱えることができますが、デフォルトではこれが有効になっています（暗黙の「データの共有/販売はOKです」という決定があります）。</li>\n<li><strong>明示的な決定</strong>：ユーザーによるトラッキングに同意するかどうかについての明確で正確な同意決定。</li>\n<li><strong>統合</strong>：CMPから同意決定をキャプチャするための機能と構成のセット（プリロードまたはカスタム）。</li>\n</ul>\n<h2 id=\"仕組み\">仕組み</h2>\n<p>コンセント統合は、CMPからの同意決定を執行し、同意がないタグをブロックします。統合がアクティブな場合、タグを発火させる前に、目的グループ内の目的にタグを割り当てる必要があります。ユーザーが目的に同意すると、その目的に割り当てられたタグが発火することができます。</p>\n<p>各コンセント統合は、単一のCMPと通信する方法を基盤フレームワークに指示します。一度にアクティブにできる統合は1つだけです。ただし、必要に応じて複数のアクティブな統合を条件付きで適用するために<strong>執行ルール</strong>を使用することができます。</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>ページにCMPを挿入するタグは、コンセント統合と互換性がありません。統合は、タグがロードされる前にCMPからの信号を必要とします。CMPをコンセント統合に統合するには、プリローダーまたはDOM Ready拡張を使用するか、CMPをTealium iQの外でページに追加してください。</p>\n<p>Tealium iQダッシュボードでサポートされているCMPとの統合を構成するか、<strong>カスタムテンプレート</strong>を編集してカスタム統合を作成することができます。</p>\n<h2 id=\"サポートされている統合\">サポートされている統合</h2>\n<p>現在サポートされている統合の完全なリストについては、<a href=\"/ja/consent/client-side/consent-integrations/supported-vendors/\">サポートされているベンダー統合</a>を参照してください。</p>\n<h2 id=\"タグの再発火\">タグの再発火</h2>\n<p>各タグには、<strong>Map Tags</strong> 画面に<strong>Tag Refire</strong> スイッチがあります：</p>\n<figure><a class=\"slb\" href=\"/images/early-access/map-tags.png\"><img src=\"https://docs.tealium.com/images/early-access/map-tags.png\"\n         alt=\"map_tags.png\"\n         title=\"map_tags.png\" width=\"790\" height=\"417\"/>\n    </a>\n</figure>\n<p>このオプションを有効にすると、タグは各ユーザーアクションについて2回発火することができます。一度は暗黙の決定のため、もう一度は明示的な決定のためです。マップされた目的に同意がない場合、タグはトリガーされません。</p>\n<p>ほとんどのタグは再発火を必要としません。このオプションを有効にすると、重複イベントや二重トラッキングが発生する可能性があります。この機能を有効にする際は注意してください。</p>\n<p>サーバーサイドの再発火についての情報は、<a href=\"#server-side-event-refiring\">サーバーサイドイベントの再発火</a>を参照してください。</p>\n<h2 id=\"同意決定データ\">同意決定データ</h2>\n<p>コンセント統合は、各イベントに同意決定データをデータレイヤーに追加します。このデータには、クライアントサイドの変数とサーバーサイドの属性が含まれます。</p>\n<p>これらの変数は、Tealium Collectタグによって自動的に送信されます。拡張機能では直接アクセスできませんが、<code>tealiumCmpIntegration.GetCurrentConsentDecision()</code> メソッドを使用してアクセスすることができます。</p>\n<h3 id=\"クライアントサイドの変数\">クライアントサイドの変数</h3>\n<table>\n<thead>\n<tr>\n<th>変数</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>tci.consent_type</code></td>\n<td>同意のタイプ：<code>implicit</code> または <code>explicit</code>。</td>\n</tr>\n<tr>\n<td><code>tci.purposes_with_consent_all</code></td>\n<td>処理済みおよび未処理の同意された目的の配列。</td>\n</tr>\n<tr>\n<td><code>tci.purposes_with_consent_processed</code></td>\n<td>処理済みの同意された目的の配列。</td>\n</tr>\n<tr>\n<td><code>tci.purposes_with_consent_unprocessed</code></td>\n<td>未処理の同意された目的の配列。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>クライアントサイドのデータの例：</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-json\" data-lang=\"json\"><span style=\"display:flex;\"><span>{\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;tci.consent_type&#34;</span>: <span style=\"color:#e6db74\">&#34;implicit&#34;</span>,\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;tci.purposes_with_consent_all&#34;</span>: [<span style=\"color:#e6db74\">&#34;C0001&#34;</span>, <span style=\"color:#e6db74\">&#34;C0002&#34;</span>, <span style=\"color:#e6db74\">&#34;C0003&#34;</span>],\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;tci.purposes_with_consent_processed&#34;</span>: [<span style=\"color:#e6db74\">&#34;C0001&#34;</span>, <span style=\"color:#e6db74\">&#34;C0002&#34;</span>],\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;tci.purposes_with_consent_unprocessed&#34;</span>: [<span style=\"color:#e6db74\">&#34;C0003&#34;</span>]\n</span></span><span style=\"display:flex;\"><span>}\n</span></span></code></pre></div><h3 id=\"拡張機能での同意決定のアクセス\">拡張機能での同意決定のアクセス</h3>\n<p>拡張機能で現在の同意決定オブジェクトにアクセスするには、<code>tealiumCmpIntegration.GetCurrentConsentDecision()</code> メソッドを使用します。</p>\n<p>次のコマンドは、現在の同意決定を <code>b</code> オブジェクトに追加します：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">b</span>.<span style=\"color:#a6e22e\">current_consent_decision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">getCurrentConsentDecision</span>()\n</span></span></code></pre></div><h3 id=\"サーバーサイドの属性\">サーバーサイドの属性</h3>\n<p>Tealium Collectは、各イベントペイロードの一部として同意属性を送信します。これらの属性は、使用するサーバーサイドツールに関係なく送信されます。</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>tci.purposes_with_consent_unprocessed</code></td>\n<td>同意更新後にまだ処理されていない目的の配列。<strong>Tag Refire</strong> が有効な場合に使用します。重複を避けるためです。</td>\n</tr>\n<tr>\n<td><code>tci.purposes_with_consent_all</code></td>\n<td>すでに処理されたものを含む、すべての同意された目的の配列。<strong>Tag Refire</strong> が無効な場合に使用します。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>サーバーサイドのペイロードの例：</strong></p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-json\" data-lang=\"json\"><span style=\"display:flex;\"><span>{\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;event_name&#34;</span>: <span style=\"color:#e6db74\">&#34;page_view&#34;</span>,\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;tci.purposes_with_consent_unprocessed&#34;</span>: [<span style=\"color:#e6db74\">&#34;C0003&#34;</span>],\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;tci.purposes_with_consent_all&#34;</span>: [<span style=\"color:#e6db74\">&#34;C0001&#34;</span>, <span style=\"color:#e6db74\">&#34;C0002&#34;</span>, <span style=\"color:#e6db74\">&#34;C0003&#34;</span>]\n</span></span><span style=\"display:flex;\"><span>}\n</span></span></code></pre></div><h3 id=\"サーバーサイドイベントの再発火\">サーバーサイドイベントの再発火</h3>\n<p>サーバーサイドコネクタを使用するアカウントの場合、Tealium Collectタグの<strong>Tag Refire</strong> を有効にすると、同意が（<code>implicit</code> から <code>explicit</code> に）変更されたときにサーバーサイドの処理が再度トリガーされます。</p>\n<p>サーバーサイドの再発火を有効にするには：</p>\n<ol>\n<li><strong>Map Tags</strong> 画面でTealium Collectタグの<strong>Tag Refire</strong> を有効にします。これにより、同意決定が変更されたときにタグが再度発火することを許可する <code>refiringAllowed</code> オプションが自動的に構成されます。</li>\n<li>コネクタアクションで、<code>tci.purposes_with_consent_unprocessed</code> 属性をチェックする条件を追加します。これにより、未処理の目的のみが処理され、重複イベントが防止されます。</li>\n</ol>\n<h3 id=\"完全な同意イベントの例\">完全な同意イベントの例</h3>\n<p>これは、同意決定変数を含む完全なイベントオブジェクトの例です：</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-json\" data-lang=\"json\"><span style=\"display:flex;\"><span>{\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;event_name&#34;</span>: <span style=\"color:#e6db74\">&#34;page_view&#34;</span>,\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;tci.consent_type&#34;</span>: <span style=\"color:#e6db74\">&#34;implicit&#34;</span>,\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;tci.purposes_with_consent_all&#34;</span>: [<span style=\"color:#e6db74\">&#34;C0001&#34;</span>, <span style=\"color:#e6db74\">&#34;C0002&#34;</span>, <span style=\"color:#e6db74\">&#34;C0003&#34;</span>],\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;tci.purposes_with_consent_processed&#34;</span>: [<span style=\"color:#e6db74\">&#34;C0001&#34;</span>, <span style=\"color:#e6db74\">&#34;C0002&#34;</span>],\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">&#34;tci.purposes_with_consent_unprocessed&#34;</span>: [<span style=\"color:#e6db74\">&#34;C0003&#34;</span>]\n</span></span><span style=\"display:flex;\"><span>}\n</span></span></code></pre></div><p>この例では：</p>\n<ul>\n<li>同意の種類は <code>implicit</code> です。</li>\n<li>3つの目的が同意されました。</li>\n<li>2つの目的はすでに処理されています。</li>\n<li>1つは未処理のままで、サーバーサイドでの処理が可能です。</li>\n</ul>\n<h2 id=\"javascriptコンソールの使用\">JavaScriptコンソールの使用</h2>\n<p>アクティブな場合、<code>utag.js</code> がロードされているページでブラウザコンソールを使用して同意統合と対話することができます。これにより、各イベントに対してCMPから取得された最新の同意決定を表示できます。同意決定はキャッシュされないため、常に最新の状態を保証します。</p>\n<p>詳細については、<a href=\"/ja/consent/client-side/consent-integrations/validate-and-debug/\">同意統合の検証とデバッグ</a>を参照してください。</p>\n<h2 id=\"同意登録\">同意登録</h2>\n<p>同意統合は、同意構成がロードまたは更新されたときにイベントを発行するためにTealium同意登録を使用できます。これらの変更はページ全体で利用可能であり、ウェブサイト全体で同意決定を管理しやすくします。詳細については、<a href=\"/ja/consent/client-side/consent-register/\">Tealium同意登録</a>を参照してください。</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>同意登録には、同意統合フレームワークテンプレートバージョン1.2.0以降が必要です。このテンプレートを更新するには、<a href=\"/ja/iq-tag-management/templates/manage/#update-a-template\">テンプレートの更新</a>を参照してください。</p>\n"
        }  

    , 
        {
            "weight": "466",
            "url": "https://docs.tealium.com/ja/consent/client-side/consent-integrations/consent-integrations-decision-flow/",
            "title": "同意統合の意思決定フロー",
            "body": "<p>Tealium iQ 同意統合は、サポートされている同意管理プラットフォーム（CMP）に対して、オプトイン（GDPRスタイル）およびオプトアウト（CCPAスタイル）の強制パターンの両方のオプションを提供します。以下の図に示された同意統合の意思決定フローは、これらの強制パターンでユーザーの同意決定がどのように扱われるかを示しています。</p>\n<h2 id=\"オプトインモデル\">オプトインモデル</h2>\n<p>Tealium Universal Tag（<code>utag.js</code>）は、CMPから同意決定を受け取るまでタグを発火させたりクッキーを構成したりしません。ページ上でCMPがアクティブでない場合や同意決定が行われていない場合、Tealiumは実行されず、タグは発火されません。</p>\n<p>Tealiumがロードされたときに同意決定が見つからない場合、同意統合は同意決定が見つかるまでCMPをポーリングします。この間、すべてのイベントは、決定が受け取られるまで処理されるためにキューに入れられます。決定が受け取られない場合、イベントは未処理のままです。</p>\n<h3 id=\"操作の順序\">操作の順序</h3>\n<p>同意決定（<code>implicit</code>または<code>explicit</code>）が利用可能な場合、同意統合は以下のアクションを実行します：</p>\n<ol>\n<li>Tealiumが実行可能かどうかを確認します。</li>\n<li>許可されている場合、各タグが実行可能かどうかを確認します。</li>\n<li>許可されている場合、同意決定に基づいてキューに入れられたすべてのイベントのタグをトリガーします。</li>\n</ol>\n<h3 id=\"暗黙の同意\">暗黙の同意</h3>\n<p>同意決定が暗黙の場合：</p>\n<ul>\n<li>イベントは最初にキューに入れられます。</li>\n<li>暗黙の同意を許可するタグがトリガーされます。</li>\n<li>同意統合は明示的な決定のためにCMPを続けてポーリングします。</li>\n<li>後に明示的な決定が提供された場合、新たに同意されたタグを含むようにキューに入れられたイベントが再処理されます。</li>\n</ul>\n<h3 id=\"明示的な同意\">明示的な同意</h3>\n<p>同意決定が明示的な場合：</p>\n<ul>\n<li>キューに入れられたすべてのイベントは同意決定に従って処理され、その後キューから削除されます。</li>\n<li>ポーリングは停止します。</li>\n<li>暗黙の同意の下で既にトリガーされたタグは、タグの再発火が有効であり、新しい同意目的が利用可能である場合を除き、再発火されません。</li>\n</ul>\n<h3 id=\"ページロード後の同意の更新\">ページロード後の同意の更新</h3>\n<p>ユーザーがインタラクティブなCMPを再開して新しい明示的な同意決定を行う場合：</p>\n<ul>\n<li>以前に処理されたイベントは、新しい同意決定に基づいて再処理されません。</li>\n<li>ページがロードされた後の新しいイベントについては、各イベントに対してCMPから現在の同意決定が取得されます。これにより、CMPが同意のための普遍的な情報源として扱われます。</li>\n</ul>\n<h2 id=\"同意統合の同意フロー\">同意統合の同意フロー</h2>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-integrations-consent-flow.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-integrations-consent-flow.png\"\n         alt=\"同意統合の意思決定フロー\"\n         title=\"同意統合の意思決定フロー\" width=\"1500\" height=\"2000\"/>\n    </a>\n</figure>\n<p>フローがタグが実行可能かどうかを判断するステップに達したとき、以下のプロセスが各タグとイベントに適用されます：</p>\n<h3 id=\"タグの発火の詳細\">タグの発火の詳細</h3>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/consent-integrations-fire-tags.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/consent-integrations-fire-tags.png\"\n         alt=\"同意統合のタグ発火の詳細\"\n         title=\"同意統合のタグ発火の詳細\"/>\n    </a>\n</figure>\n<h2 id=\"オプトアウトモデル\">オプトアウトモデル</h2>\n<p>オプトアウトモデルはオプトインモデルに似ていますが、明示的な決定はポーリングされません。これは、ユーザーが明示的にオプトアウトしない限り、タグの実行が許可されるというデフォルトの状態が仮定されるためであり、これはCCPA/CPRAスタイルの強制と一致します。</p>\n"
        }  

    , 
        {
            "weight": "467",
            "url": "https://docs.tealium.com/ja/consent/client-side/consent-integrations/manage/",
            "title": "同意統合と目的グループの管理",
            "body": "<p>Tealium iQ タグ管理ダッシュボードでは、同意統合画面を通じて同意統合を追加および構成することができます。</p>\n<h2 id=\"統合の追加\">統合の追加</h2>\n<p>以下の手順に従って統合を追加してください：</p>\n<ol>\n<li><strong>iQ タグ管理 &gt; 同意統合</strong> に移動します。</li>\n<li><strong>+ 統合を追加</strong> をクリックして、統合構成画面を開きます。</li>\n</ol>\n<h3 id=\"ステップ-1-統合の構成\">ステップ 1: 統合の構成</h3>\n<ol>\n<li><strong>統合の構成</strong> スライドアウトで、統合の説明的な名前を入力します。</li>\n<li><strong>ベンダー</strong> リストからベンダーを選択します。ベンダーの選択によっては、通常、統合したいCMP構成の識別子など、追加のフィールドが必要になる場合があります。</li>\n<li>（オプション）デフォルトのベンダーカテゴリで統合を構成する場合は、<strong>{ベンダー}のデフォルトカテゴリで新しい目的グループを作成</strong> を選択します。</li>\n<li>説明を入力します。</li>\n<li><strong>次へ</strong> をクリックします。</li>\n</ol>\n<h3 id=\"ステップ-2-施行ルール\">ステップ 2: 施行ルール</h3>\n<p>ドロップダウンリストを使用して新しいルールを作成するか、既存のルールを選択します。このルールは、同意統合をいつ施行するかを決定します。</p>\n<p>新しいルールを作成するには：</p>\n<ol>\n<li><strong>+ 新しいルール</strong> をクリックします。</li>\n<li><strong>ルールの追加</strong> スライドアウトで、ロードルールの<strong>タイトル</strong>を追加し、必要に応じて<strong>ノート</strong>をオプションで追加します。</li>\n<li>ドロップダウンリストから<strong>変数</strong>と<strong>演算子</strong>を選択し、<strong>値</strong>を入力します。</li>\n<li>ANDロジックを使用して別の条件を追加するには、以下のいずれかを行います：\n<ul>\n<li>デフォルトの条件文の隣にある <strong>+</strong> をクリックします。</li>\n<li>行メニューをクリックして <strong>行の複製</strong> を選択し、ANDロジックを使用して条件文のコピーを作成します。\n複製された条件文は必要に応じて編集できます。</li>\n</ul>\n</li>\n<li>ORロジックを使用して別の条件を追加するには、以下のいずれかを行います：\n<ul>\n<li><strong>+OR</strong> をクリックします。</li>\n<li>条件メニューをクリックして <strong>複製</strong> を選択し、ORロジックを使用して条件のコピーを作成します。複製された条件は新しい条件を作成するために編集できます。</li>\n</ul>\n</li>\n<li>条件から条件文を削除するには、行メニューをクリックして <strong>行を削除</strong> を選択します。</li>\n<li><strong>完了</strong> をクリックします。</li>\n</ol>\n<h3 id=\"ステップ-3-公開場所\">ステップ 3: 公開場所</h3>\n<ol>\n<li>この統合の施行を適用したい環境を選択します。</li>\n<li><strong>次へ</strong> をクリックします。</li>\n</ol>\n<h3 id=\"ステップ-4-目的グループ\">ステップ 4: 目的グループ</h3>\n<ol>\n<li><strong>目的グループ</strong> ドロップダウンリストから統合のための目的グループを選択します。\n<ul>\n<li>ステップ1でデフォルトのベンダーカテゴリで統合を構成した場合は、以下の手順を完了してから統合を保存します：\n<ol>\n<li>リストから <strong>&lt;ベンダー&gt; デフォルト</strong> を選択します。</li>\n</ol>\n</li>\n<li>ステップ4でデフォルトのベンダーカテゴリで統合を構成しなかった場合は：\n<ol>\n<li>ドロップダウンリストから <strong>+ 新しい目的グループ</strong> を選択します。</li>\n<li><strong>新しい目的グループ</strong> ダイアログで <strong>目的グループを作成</strong> をクリックします。<strong>新しい目的グループ</strong> 画面にリダイレクトされます。<strong>統合の追加</strong> ウィザードの進行状況は保存され、目的グループの構成後に戻ります。</li>\n<li><strong>目的グループ</strong> ダイアログで、<a href=\"#add-a-purpose-group\">目的グループの追加</a> セクションの手順を完了して目的グループを追加します。</li>\n<li><strong>統合の追加</strong> ウィザードで、<strong>目的グループ</strong> ドロップダウンリストから目的グループを選択します。\n<strong>統合の追加</strong> ウィザードに戻り、統合の構成を完了します。</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><strong>保存</strong> をクリックして新しい統合を作成します。</li>\n</ol>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>OneTrustのデフォルトベンダーカテゴリを初めて使用する場合、統合を作成した後、<a href=\"#edit-a-purpose-group\">目的グループの編集</a> の手順に従って <strong>デフォルト</strong> 目的グループにタグを割り当ててください。</p>\n<h2 id=\"目的グループの管理\">目的グループの管理</h2>\n<p>目的グループを管理するには、<strong>iQ タグ管理 &gt; 同意統合 &gt; 目的グループ</strong> タブに移動します。</p>\n<h3 id=\"目的グループの追加\">目的グループの追加</h3>\n<p>以下の手順に従って目的グループを追加してください：</p>\n<ol>\n<li><strong>iQ タグ管理 &gt; 同意統合</strong> に移動します。</li>\n<li><strong>+ 目的グループを追加</strong> をクリックして、目的グループ構成モーダルを開きます。</li>\n</ol>\n<h4 id=\"ステップ-1-目的グループ\">ステップ 1: 目的グループ</h4>\n<ol>\n<li>名前と説明を入力します。</li>\n<li><strong>次へ</strong> をクリックします。</li>\n</ol>\n<h4 id=\"ステップ-2-目的\">ステップ 2: 目的</h4>\n<ol>\n<li>目的の名前と説明を入力します。各目的の名前は、統合しているベンダーの同意カテゴリの名前と一致する必要があります。</li>\n<li>目的グループに複数の目的を作成することができます。目的グループにさらに目的を追加するには、<strong>+ 目的を追加</strong> をクリックします。</li>\n<li><strong>次へ</strong> をクリックします。</li>\n</ol>\n<h4 id=\"ステップ-3-tealium-iq-の目的\">ステップ 3: Tealium iQ の目的</h4>\n<ol>\n<li><strong>Tealium タグ目的</strong> から Tealium iQ にマップする目的を選択します。Tealium iQ はすべてのタグ操作を制御し、タグが機能するためには目的にマップされている必要があります。</li>\n<li><strong>次へ</strong> をクリックします。</li>\n</ol>\n<h4 id=\"ステップ-4-タグのマッピング\">ステップ 4: タグのマッピング</h4>\n<p>すべてのタグは、トリガーされる前に目的にマッピングされている必要があります。</p>\n<ol>\n<li>新しく作成した目的にタグをマッピングするには、各タグに対して <strong>割り当て/マップ</strong> をクリックし、ドロップダウンリストからそのタグにマップしたい目的を選択します。</li>\n<li>各タグのタグ再発火を有効または無効にするには、<strong>タグ再発火</strong> 列の <strong>OFF/ON</strong> ボタンを切り替えます。タグ再発火についての詳細は、<a href=\"/ja/consent/client-side/consent-integrations/about/#tag-refire\">タグ再発火</a>を参照してください。</li>\n<li><strong>保存</strong> をクリックして新しい目的グループを作成します。</li>\n</ol>\n<h3 id=\"目的グループの編集\">目的グループの編集</h3>\n<p>以下の手順に従って目的グループを編集してください：</p>\n<ol>\n<li>編集したい目的グループの横にあるオプションアイコンをクリックします。</li>\n<li><strong>編集</strong> をクリックして、目的グループ構成を開きます。</li>\n<li>編集したいセクションのタブをクリックします。新しいデフォルト目的グループにタグをマップするには、<strong>タグをマップ</strong> をクリックします。</li>\n<li><strong>保存</strong> をクリックして変更を保存します。</li>\n</ol>\n<p>Tealium iQ タグ管理でサポートされているベンダー統合の構成方法のステップバイステップの例については、<a href=\"/ja/guides/supported-consent-integration/\">同意統合ガイド</a>を参照してください。</p>\n"
        }  

    , 
        {
            "weight": "470",
            "url": "https://docs.tealium.com/ja/consent/client-side/consent-integrations/supported-vendors/",
            "title": "サポートされているベンダー統合",
            "body": "<h2 id=\"仕組み\">仕組み</h2>\n<p>Tealium iQ Consent Integrationsは、様々な同意管理プラットフォーム（CMP）との統合をサポートしています。サポートされている同意管理プラットフォーム（CMP）のユーザーインターフェースまたはウェブページから、関連するベンダー固有の情報にアクセスできます。このドキュメントを信頼性が高くユーザーフレンドリーに保つために、このセクションではウェブページからベンダー固有の情報を取得する手順のみをカバーしています。各パートナーCMPのユーザーインターフェースでベンダーIDと目的を取得する手順については、各CMPのドキュメントを参照してください。</p>\n<p>ウェブページから関連情報を取得するには、以下の手順に従ってください：</p>\n<ol>\n<li>CMPが実装されているウェブサイトを訪問します。</li>\n<li>すべてのトラッキングを受け入れます。</li>\n<li>開発者ツールのJavaScriptコンソールを開きます。</li>\n<li>下記のコードスニペットからCMP固有のコードを開発者ツールのJavaScriptコンソールに貼り付けます。</li>\n<li>表示された<strong>ベンダーID</strong>、<strong>目的キー</strong>、および<strong>目的名</strong>をあなたのConsent Integrationに入力します。</li>\n</ol>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>同意決定を更新した後、最新の解釈を確認するためにコードを再度貼り付けてください。</p>\n<h2 id=\"統合固有の指示とコードスニペット\">統合固有の指示とコードスニペット</h2>\n<h3 id=\"cookiebot\">Cookiebot</h3>\n<p><a href=\"https://www.cookiebot.com/\">cookiebot.com</a>またはあなたのウェブサイトでこのスニペットをテストし、<a href=\"#how-it-works\">仕組みセクション</a>の指示に従って互換性を確認し、統合に必要な情報を取得してください。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tコードスニペットを表示するには展開\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cookiebotIntegration</span> (window) {\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Cookiebot&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;v1.0.0&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// GDPRスタイルの「オプトイン」モデルを実行しているかどうかを真偽値で返す必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Cookiebot</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">regulations</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">regulations</span>.<span style=\"color:#a6e22e\">gdprApplies</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;boolean&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">regulations</span>.<span style=\"color:#a6e22e\">gdprApplies</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 必要な情報についてのCMP固有の生オブジェクト（オブジェクトでなければならない）を返す必要があります。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#75715e\">// この出力は、以下の関数でcmpRawOutput引数として使用されます。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Cookiebot</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">hasResponse</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;boolean&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">consent</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Tealium iQが正しいCMP構成を持っていることを確認するのに役立つ文字列を返す必要があります（他のページ/ CMPの顧客ではない）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>() {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Cookiebot</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">serial</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">Cookiebot</span>.<span style=\"color:#a6e22e\">serial</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 生の決定がCMPの期待に合っているかどうかを真偽値で返す必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;object&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span>  <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">stamp</span> <span style=\"color:#f92672\">===</span><span style=\"color:#e6db74\">&#39;string&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 同意決定がユーザーによって明示的に行われたかどうかを真偽値で返す必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#75715e\">// この例では、決定が明示的であるかどうかを判断する唯一の方法は、オプトアウトクッキーが構成されているかどうかを確認することです\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">method</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;explicit&#39;</span><span style=\"color:#f92672\">?</span> <span style=\"color:#66d9ef\">true</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 同意されたベンダー/目的の配列を返す必要があります - これらはTealium iQの目的と正確に一致する必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">consentDecision</span> <span style=\"color:#f92672\">=</span> []\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// データの販売/共有が許可されているかどうかを判断するために、空でないオプトアウトクッキーを非常に単純にチェックします\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">necessary</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">consentDecision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;necessary&#39;</span>) <span style=\"color:#75715e\">// クッキーが見えないので、データの販売/共有が問題ないと仮定しなければなりません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">preferences</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">consentDecision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;preferences&#39;</span>) <span style=\"color:#75715e\">// クッキーが見えないので、データの販売/共有が問題ないと仮定しなければなりません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">marketing</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">consentDecision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;marketing&#39;</span>) <span style=\"color:#75715e\">// クッキーが見えないので、データの販売/共有が問題ないと仮定しなければなりません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">statistics</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">consentDecision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;statistics&#39;</span>) <span style=\"color:#75715e\">// クッキーが見えないので、データの販売/共有が問題ないと仮定しなければなりません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">consentDecision</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// この関数やそれ以下のものを変更する必要はありません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#75715e\">// 理解できないものはオプトアウトとして扱います\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>  })(window)\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    // デバッグ/開発出力 - このブロックのコメントを外し、このテンプレート全体をテストページに貼り付け/再貼り付けしてください\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    var outputString = `${tealiumCmpIntegration.cmpCheckIfOptInModel() ? &#39;Opt-in&#39; : &#39;Opt-out&#39;} Model\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      - id:          ${tealiumCmpIntegration.cmpFetchCurrentLookupKey()}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      - well-formed: ${tealiumCmpIntegration.cmpCheckForWellFormedDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      - explicit:    ${tealiumCmpIntegration.cmpCheckForExplicitConsentDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      - group list:  ${JSON.stringify(tealiumCmpIntegration.cmpConvertResponseToGroupList(tealiumCmpIntegration.cmpFetchCurrentConsentDecision()))}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    `\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    console.log(outputString);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  */</span>\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"didomi\">Didomi</h3>\n<p><a href=\"https://didomi.io\">Didomi.io</a>または<a href=\"#how-it-works\">上記の手順に従って</a>あなたのウェブサイトでこのスニペットをテストして、互換性を確認し、統合に必要な情報を取得してください。</p>\n<p>Didomi統合は、<strong>ベンダー</strong>を<strong>目的</strong>として使用します。</p>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>現在のDidomiとの統合では、暗黙の同意された目的やベンダーは返されません。これは当時利用可能な唯一のオプションでした。古いバージョンを使用している顧客をサポートし、新しいアプローチを可能にする更新が行われるまで、この統合は無条件に<code>always_consented</code>という目的キーをアウトバウンドの同意決定に追加します。これは暗黙のトリガーを可能にするための回避策として機能します。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tコードスニペットを表示する\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">didomiIntegration</span> (window) {\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Didomi&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;didomi-1.0.1&#39;</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Didomi</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span>().<span style=\"color:#a6e22e\">notice</span>.<span style=\"color:#a6e22e\">type</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;optin&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Didomi</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getUserStatus</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> {}\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getUserStatus</span>()\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">vendorInfo</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getVendors</span>()\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span>()\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">Didomi</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#e6db74\">&#39;&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">id</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">Didomi</span>.<span style=\"color:#a6e22e\">getConfig</span>().<span style=\"color:#a6e22e\">app</span>.<span style=\"color:#a6e22e\">deploymentId</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">id</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// do more checks than strictly necessary to confirm expectations\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">purposes</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">purposes</span>.<span style=\"color:#a6e22e\">global</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span>.<span style=\"color:#a6e22e\">global</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">purposes</span>.<span style=\"color:#a6e22e\">global</span>.<span style=\"color:#a6e22e\">enabled</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span>.<span style=\"color:#a6e22e\">global</span>.<span style=\"color:#a6e22e\">enabled</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">vendorInfo</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;boolean&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">shouldConsentBeCollected</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span> <span style=\"color:#75715e\">// false after an explicit decision is made\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Didomi handles checking each vendor&#39;s required purposes\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> []\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// enforce strings, even for IAB vendor ids\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">userStatus</span>.<span style=\"color:#a6e22e\">vendors</span>.<span style=\"color:#a6e22e\">global</span>.<span style=\"color:#a6e22e\">enabled</span>.<span style=\"color:#a6e22e\">map</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">vendorId</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> String(<span style=\"color:#a6e22e\">vendorId</span>)\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#e6db74\">&#39;always_consented&#39;</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">decision</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedVendors</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allVendors</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">vendorInfo</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">lookupObject</span> <span style=\"color:#f92672\">=</span> {}\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// WORKAROUND to allow implicit triggering until the Didomi bug is fixed\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#a6e22e\">lookupObject</span>.<span style=\"color:#a6e22e\">always_consented</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Always consented (to allow strictly needed triggering)&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">allVendors</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">vendorObject</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">allowedVendors</span>.<span style=\"color:#a6e22e\">indexOf</span>(String(<span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">id</span>)) <span style=\"color:#f92672\">===</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>) <span style=\"color:#66d9ef\">return</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">lookupObject</span>[<span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">id</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;iab-vendor-&#39;</span> <span style=\"color:#f92672\">+</span> <span style=\"color:#a6e22e\">vendorObject</span>.<span style=\"color:#a6e22e\">id</span>\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">lookupObject</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>})(window)\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// Debugging / development output - repaste the integration on your test pages each time you make a change to your consent state\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`CMP Found: </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> (</span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - id:          </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed: </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit:    </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - group list:  </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()))<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - name lookup: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()), <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">6</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"デジタルコントロールルーム\">デジタルコントロールルーム</h3>\n<p>このスニペットを <a href=\"https://www.digitalcontrolroom.com/\">digitalcontrolroom.com</a> またはあなたのウェブサイトでテストし、<a href=\"#how-it-works\">操作方法セクション</a> の指示に従って互換性を確認し、統合に必要な情報を取得してください。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tExpand to view code snippet\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">digitalControlRoom</span>(window) {\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {};\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Digital Control Room&#39;</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;v1.0.0&#39;</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>;\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>;\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> (\n</span></span><span style=\"display:flex;\"><span>      window.<span style=\"color:#a6e22e\">_cookiereports</span> <span style=\"color:#f92672\">&amp;&amp;</span>\n</span></span><span style=\"display:flex;\"><span>      window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span> <span style=\"color:#f92672\">&amp;&amp;</span>\n</span></span><span style=\"display:flex;\"><span>      window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span>\n</span></span><span style=\"display:flex;\"><span>      window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consentExplicit</span>\n</span></span><span style=\"display:flex;\"><span>    );\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// This output is used as the cmpRawOutput argument in functions below.\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>() {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">_cookiereports</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> {};\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">levels</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">loadConsent</span>();\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">levels</span>[<span style=\"color:#ae81ff\">1</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">output</span> <span style=\"color:#f92672\">=</span> { <span style=\"color:#e6db74\">&#34;levels&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">levels</span> };\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">output</span>.<span style=\"color:#a6e22e\">panels</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">output</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// Should return a string that helps Tealium iQ confirm that it&#39;s got the right CMP configuration (and not one from some other page / customer of the CMP)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>() {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (window.<span style=\"color:#a6e22e\">_cookiereports</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">&gt;</span> <span style=\"color:#ae81ff\">0</span>)\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">_cookiereports</span>.<span style=\"color:#a6e22e\">panels</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">storagekey</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#e6db74\">&#34;&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">levels</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;object&#34;</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">levels</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">null</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">panels</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;object&#34;</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">panels</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">null</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// Should return a boolean - true if the consent decision was explicitly made by the user\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">panels</span>)\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">panels</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consentDecisionIsExplicit</span>();\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> [<span style=\"color:#e6db74\">&#34;1&#34;</span>];\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">levels</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">levels</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">consentDecision</span> <span style=\"color:#f92672\">=</span> [];\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">key</span> <span style=\"color:#66d9ef\">in</span> <span style=\"color:#a6e22e\">levels</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">levels</span>.<span style=\"color:#a6e22e\">hasOwnProperty</span>(<span style=\"color:#a6e22e\">key</span>)) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">levels</span>[<span style=\"color:#a6e22e\">key</span>] <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>) {\n</span></span><span style=\"display:flex;\"><span>          <span style=\"color:#a6e22e\">consentDecision</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#a6e22e\">key</span>);\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>      }\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">consentDecision</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// You shouldn&#39;t need to change this function, or anything below it\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#34;tiq-group-name-missing&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>);\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>;\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>})(window);\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// Debugging / development output - uncomment this block, then paste/repaste this entire template on your test pages\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">var outputString = `${tealiumCmpIntegration.cmpCheckIfOptInModel() ? &#34;Opt-in&#34; : &#34;Opt-out&#34;} Model\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - id:          ${tealiumCmpIntegration.cmpFetchCurrentLookupKey()}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - well-formed: ${tealiumCmpIntegration.cmpCheckForWellFormedDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - explicit:    ${tealiumCmpIntegration.cmpCheckForExplicitConsentDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    - group list:  ${JSON.stringify(tealiumCmpIntegration.cmpConvertResponseToGroupList(tealiumCmpIntegration.cmpFetchCurrentConsentDecision()))}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  `;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">console.log(outputString);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">*/</span>\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"onetrust\">OneTrust</h3>\n<p>このスニペットを <a href=\"https://onetrust.com\">https://onetrust.com</a> または <a href=\"#how-it-works\">上記の指示に従って</a> あなたのウェブサイトでテストして、互換性を確認し、統合に必要な情報を取得してください。</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>OneTrustは構成をプレビューするためのテストモードを提供しており、ベンダーIDに <code>-test</code> を追加することでアクティブになります。統合を簡素化するために、OneTrust Consent IntegrationsはベンダーIDから <code>-test</code> 接尾辞を削除します。シームレスな統合のために、ページで <code>-test</code> 接尾辞を使用している場合でも、Tealium iQ Consent Integrations UIで統合を構成する際には <code>-test</code> を除いたベンダーIDを入力してください。Tealium iQ UIとアクティブな統合間でベンダーIDが一致しない場合、Tealium iQタグ管理はページ上でクッキーを構成したりタグをトリガーしたりすることができません。</p>\n<p>OneTrustは <code>cmpAddCallbackToTriggerRecheck</code> を通じてコールバック関数をサポートしています。これにより、Tealium iQはポーリングなしで同意状態の変更に関するリアルタイムの更新を受け取ることができます。詳細については、<a href=\"/ja/consent/client-side/consent-integrations/custom-cmp/\">カスタムCMP統合</a>を参照してください。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tExpand to view code snippet\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">oneTrust</span>(window) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// allows simple adjustment of the name/id behavior\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">useNamesInsteadOfKeys</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// allow the safety check of the expected Vendor ID to be circumvented to simplify setup at the cost of increased risk\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">disableVendorIdValidation</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// CMP specific functionality and labels\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {};\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#34;OneTrust&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#34;onetrust-2.1.0&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>;\n</span></span><span style=\"display:flex;\"><span>    window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpAddCallbackToTriggerRecheck</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpAddCallbackToTriggerRecheck</span>;\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>();\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">ConsentModel</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">ConsentModel</span>.<span style=\"color:#a6e22e\">Name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#34;opt-out&#34;</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>() {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">OneTrust</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">GetDomainData</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;function&#34;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">GetDomainData</span>();\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">dataLayer</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>() {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// newer versions of OneTrust, starting at the end of 2022 no longer have cctId defined\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#75715e\">// but this HTML attribute is the way OneTrust can tell\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">scrapeOneTrustVendorId</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">function</span> () {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allScripts</span> <span style=\"color:#f92672\">=</span> document.<span style=\"color:#a6e22e\">getElementsByTagName</span>(<span style=\"color:#e6db74\">&#34;script&#34;</span>);\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">re</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">/\\/otSDKStub\\.js(\\?.*)*$/</span>;\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">&lt;</span> <span style=\"color:#a6e22e\">allScripts</span>.<span style=\"color:#a6e22e\">length</span>; <span style=\"color:#a6e22e\">i</span><span style=\"color:#f92672\">++</span>) {\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">isOneTrustScript</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">re</span>.<span style=\"color:#a6e22e\">test</span>(<span style=\"color:#a6e22e\">allScripts</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">src</span>); <span style=\"color:#75715e\">// can be null\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>                <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">isOneTrustScript</span>) {\n</span></span><span style=\"display:flex;\"><span>                    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">fullVendorId</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">allScripts</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">getAttribute</span>(<span style=\"color:#e6db74\">&#34;data-domain-script&#34;</span>); <span style=\"color:#75715e\">// parse it from the script\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>                    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">fullVendorId</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#34;-test&#34;</span>)[<span style=\"color:#ae81ff\">0</span>];\n</span></span><span style=\"display:flex;\"><span>                }\n</span></span><span style=\"display:flex;\"><span>            }\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#e6db74\">&#34;error-not-found&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">disableVendorIdValidation</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#75715e\">// just return whatever Vendor ID is expected be active\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>            <span style=\"color:#66d9ef\">return</span> (window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span> <span style=\"color:#f92672\">&amp;&amp;</span> Object.<span style=\"color:#a6e22e\">keys</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>)[<span style=\"color:#ae81ff\">0</span>]) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#34;(Vendor ID check disabled)&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">scrapeOneTrustVendorId</span>();\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;object&#34;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">Groups</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;[object Array]&#34;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;[object Array]&#34;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// treat things we don&#39;t understand as implicit\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">OneTrust</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">IsAlertBoxClosed</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#34;function&#34;</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">IsAlertBoxClosed</span>();\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// convert from array of objects to object for easier lookups\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">decisionString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#34;&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">foundOneTrustEntry</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> {};\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">-</span> <span style=\"color:#ae81ff\">1</span>; <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">&gt;=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">i</span><span style=\"color:#f92672\">--</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">if</span> ([<span style=\"color:#e6db74\">&#34;OneTrustGroupsUpdated&#34;</span>, <span style=\"color:#e6db74\">&#34;OneTrustLoaded&#34;</span>].<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">event</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>) {\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#a6e22e\">decisionString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">OnetrustActiveGroups</span>;\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#a6e22e\">foundOneTrustEntry</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span>;\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#66d9ef\">break</span>;\n</span></span><span style=\"display:flex;\"><span>            }\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposeIds</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">decisionString</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#34;,&#34;</span>).<span style=\"color:#a6e22e\">filter</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">group</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">group</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#34;&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        });\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">decisionString</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#34;&#34;</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#ae81ff\">1000</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">foundOneTrustEntry</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">permittedPurposeIds</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumConsentRegister</span>.<span style=\"color:#a6e22e\">getCurrentDecision</span>();\n</span></span><span style=\"display:flex;\"><span>        }\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span> <span style=\"color:#f92672\">=</span> {};\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">Groups</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">groupInfo</span>) {\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">permittedPurposeIds</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">OptanonGroupId</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>) {\n</span></span><span style=\"display:flex;\"><span>                <span style=\"color:#a6e22e\">permittedPurposesWithNames</span>[<span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">OptanonGroupId</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">GroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#34;ERROR-MISSING&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>            }\n</span></span><span style=\"display:flex;\"><span>        })\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span>; <span style=\"color:#75715e\">// keys are IDs, values are names\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>);\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">keysOrValues</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">useNamesInsteadOfKeys</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#34;values&#34;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;keys&#34;</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> Object[<span style=\"color:#a6e22e\">keysOrValues</span>](<span style=\"color:#a6e22e\">permittedPurposesWithNames</span>); <span style=\"color:#75715e\">// keys are IDs, values are names\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpAddCallbackToTriggerRecheck</span>(<span style=\"color:#a6e22e\">triggerRecheck</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">triggerRecheck</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>;\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#75715e\">// An official Google dataLayer listener, pulled from https://github.com/google/data-layer-helper/blob/master/dist/data-layer-helper.js, see https://github.com/google/data-layer-helper\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        (<span style=\"color:#66d9ef\">function</span> () {<span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">         Copyright The Closure Library Authors.\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">         SPDX-License-Identifier: Apache-2.0\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        */</span>\n</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#e6db74\">&#39;use strict&#39;</span>;<span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">         jQuery v1.9.1 (c) 2005, 2012\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">         jQuery Foundation, Inc. jquery.org/license.\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        */</span>\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"オプトアウトクッキー--gpc\">オプトアウトクッキー + GPC</h3>\n<p>この統合は、CCPA/CPRAなどの非常にシンプルなオプトアウトモデルをサポートすることを目的としています。<strong>Vendor ID</strong> フィールドは、オプトアウトクッキーのクッキー名として解釈され、大文字と小文字が区別されます。このクッキーが任意の値で見つかった場合、または <a href=\"/ja/consent/client-side/consent-management/global-privacy-control/about/\">グローバルプライバシーコントロール（GPC）</a> のオプトアウトシグナルが見つかった場合、ユーザーはオプトアウトしたと見なされます。</p>\n<p>統合で使用される<strong>目的キー</strong>とデフォルトの<strong>目的グループ</strong>に含まれるものは以下の通りです：</p>\n<ul>\n<li><code>no-selling</code> - ユーザーのオプトアウトシグナルに関係なく許可するタグ。これらのタグはデータを販売/共有しないか、法務チームなどによって厳密に必要とされています。</li>\n<li><code>yes-selling</code> - 適用される規制やポリシーにより、ユーザーがオプトアウトした後の追跡が禁止されているため、オプトアウトユーザーに対してブロックするタグです。</li>\n</ul>\n<h3 id=\"trustarc\">TrustArc</h3>\n<p>このスニペットを <a href=\"https://trustarc.com/\">trustarc.com</a> またはあなたのウェブサイトでテストし、<a href=\"#how-it-works\">操作方法セクション</a> の指示に従って互換性を確認し、統合に必要な情報を取得してください。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tExpand to view code snippet\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">trustarc</span> (window) {\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;TrustArc&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;trustarc-1.0.3&#39;</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">modeCookieValue</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">truste</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span>(<span style=\"color:#e6db74\">&#39;notice_behavior&#39;</span>)) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;expressed|eu&#39;</span> <span style=\"color:#75715e\">// default to strict EU rules if no cookie\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">modeCookieValue</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#e6db74\">&#39;expressed&#39;</span>) <span style=\"color:#f92672\">===</span> <span style=\"color:#ae81ff\">0</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cookieValue</span> <span style=\"color:#f92672\">=</span>  window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span>(<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">eu</span>.<span style=\"color:#a6e22e\">COOKIE_GDPR_PREF_NAME</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;0,&#39;</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// if we&#39;re in the opt-out model and it&#39;s an implicit decision, we should allow all tags to fire\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">map</span> <span style=\"color:#f92672\">=</span> (window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span> <span style=\"color:#f92672\">&amp;&amp;</span> Object.<span style=\"color:#a6e22e\">keys</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>)[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>[Object.<span style=\"color:#a6e22e\">keys</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>)[<span style=\"color:#ae81ff\">0</span>]]) <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">cookieValue</span> <span style=\"color:#f92672\">=</span> Object.<span style=\"color:#a6e22e\">keys</span>(<span style=\"color:#a6e22e\">map</span>).<span style=\"color:#a6e22e\">join</span>(<span style=\"color:#e6db74\">&#39;,&#39;</span>) <span style=\"color:#75715e\">// all purpose keys that have been added in the UI are returned as consented\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    } \n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">cookie</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">cookieValue</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// just return whatever Vendor ID is expected be active to short-circuit the ID-based double check for now\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">return</span> (window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span> <span style=\"color:#f92672\">&amp;&amp;</span> Object.<span style=\"color:#a6e22e\">keys</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>)[<span style=\"color:#ae81ff\">0</span>]) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;(Vendor ID check disabled)&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">cookie</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">util</span>.<span style=\"color:#a6e22e\">readCookie</span>(<span style=\"color:#a6e22e\">truste</span>.<span style=\"color:#a6e22e\">eu</span>.<span style=\"color:#a6e22e\">COOKIE_GDPR_PREF_NAME</span>) <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)) <span style=\"color:#66d9ef\">return</span> []\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">cookieConsentValues</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">cookie</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;:&#39;</span>)[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;,&#39;</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">extraSplit</span> <span style=\"color:#f92672\">=</span> []\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cookieConsentValues</span>.<span style=\"color:#a6e22e\">forEach</span>((<span style=\"color:#a6e22e\">el</span>) =&gt; {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">el</span>) <span style=\"color:#66d9ef\">return</span>\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">extraSplit</span>.<span style=\"color:#a6e22e\">push</span>.<span style=\"color:#a6e22e\">apply</span>(<span style=\"color:#a6e22e\">extraSplit</span>, <span style=\"color:#a6e22e\">el</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;|&#39;</span>))\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">trustArcMap</span> <span style=\"color:#f92672\">=</span> {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#ae81ff\">0</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Required&#39;</span>,\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#ae81ff\">1</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Functional&#39;</span>,\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#ae81ff\">2</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Personalization/Advertising&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">output</span> <span style=\"color:#f92672\">=</span> {}\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">extraSplit</span>.<span style=\"color:#a6e22e\">forEach</span>((<span style=\"color:#a6e22e\">key</span>) =&gt; {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">key</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;&#39;</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">output</span>[<span style=\"color:#a6e22e\">key</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">trustArcMap</span>[<span style=\"color:#a6e22e\">key</span>] <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;Category name unknown&#39;</span>\n</span></span><span style=\"display:flex;\"><span>      }\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">output</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">keysOrValues</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;keys&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> Object[<span style=\"color:#a6e22e\">keysOrValues</span>](<span style=\"color:#a6e22e\">permittedPurposesWithNames</span>) <span style=\"color:#75715e\">// keys are IDs, values are names\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>})(window)\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// Debugging / development output - uncomment this code and paste the integration into the console on your test pages each time you make a change to your consent state to test without publishing\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`CMP Found: </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> (</span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - id:          </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - well-formed: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - explicit:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - group list:  </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()))<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">      - name lookup: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()), <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">6</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">false</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;(All purposes are consented in opt-out mode with an implicit decision, but the full purpose list can\\&#39;t be shown in this debug output for technical reasons.)&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    `</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"usercentrics\">Usercentrics</h3>\n<p>このスニペットをあなたのウェブサイトでテストし、<a href=\"#how-it-works\">操作方法</a>セクションの指示に従って互換性を確認し、統合に必要な情報を取得してください。\nUsercentricsの統合では、<strong>Vendors</strong>を<strong>Purposes</strong>として使用します。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tExpand to view code snippet\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">usercentricsBrowserSdkV2</span> (window) {\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Usercentrics Browser SDK&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;usercentrics-1.0.3&#39;</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getServicesBaseInfo</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getServicesBaseInfo</span>()\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> (window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getSettingsCore</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getSettingsCore</span>().<span style=\"color:#a6e22e\">id</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// only support opt-In model for Usercentrics for now, can be added if needed\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">isConsentRequired</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">isConsentRequired</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the first entry as a proxy for all\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the first entry as a proxy for all\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">consentHistory</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">history</span>) <span style=\"color:#f92672\">||</span> []\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">lastHistoryEntryType</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">consentHistory</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">consentHistory</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">consentHistory</span>[<span style=\"color:#a6e22e\">consentHistory</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">-</span> <span style=\"color:#ae81ff\">1</span>].<span style=\"color:#a6e22e\">type</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">lastHistoryEntryType</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;explicit&#39;</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">foundOptIn</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the mapping if found, with a fallback (Usercentrics default value) if not specified in the mapping\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// check vendors if there&#39;s an object, look for at least one\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">tagInfo</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> ((<span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">status</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">foundOptIn</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span>\n</span></span><span style=\"display:flex;\"><span>      }\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">foundOptIn</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">vendorArray</span> <span style=\"color:#f92672\">=</span> []\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">tagConsent</span>) {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">status</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>) {\n</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">vendorArray</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">name</span>)\n</span></span><span style=\"display:flex;\"><span>      }\n</span></span><span style=\"display:flex;\"><span>    })\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">vendorArray</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>\n</span></span><span style=\"display:flex;\"><span>})(window)\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> - </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - vendor id:            </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed decision: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit decision:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - consented purposes:   </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()).<span style=\"color:#a6e22e\">sort</span>(),<span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">8</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n<h3 id=\"カスタム統合テンプレート\">カスタム統合テンプレート</h3>\n<p>カスタム統合テンプレートについての詳細とその使用方法については、<a href=\"/ja/consent/client-side/consent-integrations/custom-cmp/\">カスタム統合</a>を参照してください。</p>\n"
        }  

    , 
        {
            "weight": "475",
            "url": "https://docs.tealium.com/ja/consent/client-side/consent-integrations/validate-and-debug/",
            "title": "同意統合の検証とデバッグ",
            "body": "<h2 id=\"公開前の同意統合を検証する\">公開前の同意統合を検証する</h2>\n<p>同意統合テンプレートをサイトのJavaScriptコンソールに貼り付けて、他の依存関係なしで同意統合を検証およびデバッグします。同意統合テンプレートは編集可能であり、ウェブサイトのコンソールからデバッグを行うために独立して設計されています。</p>\n<p>テンプレートを使用することは、<a href=\"/ja/consent/client-side/consent-integrations/custom-cmp/\">カスタム統合の作成</a>に役立ち、ベンダーID、目的キーを取得するためにも使用できます。また、構成前にCMPのデフォルトテンプレートがカスタマイズなしで機能するかを確認するためにも使用できます。現在のテンプレートには検証スニペットが<a href=\"/ja/consent/client-side/consent-integrations/supported-vendors/\">ドキュメント</a>で提供されています。</p>\n<h2 id=\"公開後のデバッグモードをアクティブにする\">公開後のデバッグモードをアクティブにする</h2>\n<p>Tealium iQの<a href=\"/ja/platforms/javascript/debugging/\">デバッグモード</a>は、機能がアクティブな場合に同意統合からの詳細なステータスとエラーメッセージを含みます。免除が適用される場合を除き、<code>window.tealiumCmpIntegration</code>が定義され、<code>window.tealiumCmpIntegration.exemptionMap</code>でアクティブな免除を表示します。</p>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>コンソール出力で関連するデバッグメッセージのみを表示するために、<code>/SENDING|\\\\\\\\*/</code>をフィルターとして使用します。</p>\n<h2 id=\"公開後の同意統合を検証する\">公開後の同意統合を検証する</h2>\n<p>クライアントサイドの同意統合はDOMに<code>window.tealiumCmpIntegration</code>というグローバルオブジェクトを作成し、デバッグに役立つ多くのプロパティを持っています。また、デバッグと検証を容易にするために、コンポーネント関数を個別に呼び出すこともできます。コンポーネント関数の詳細については、<a href=\"/ja/consent/client-side/consent-integrations/custom-cmp/\">カスタムCMP統合</a>を参照してください。</p>\n<h3 id=\"例\">例</h3>\n<p>この例では、CMP統合に関する重要な情報を取得する方法について説明します。</p>\n<p>CMP統合に関する重要な情報を確認し、顧客の決定が正しくキャプチャされていることを確認するために、次の手順を完了します：</p>\n<ol>\n<li>この<a href=\"https://www.otprivacy.com/user/jmyles/TagManagerDemo/OTKicks_Tealium/index.html?otreset=false&amp;otpreview=true&amp;otgeo=IE\">デモサイト</a>またはアクティブな同意統合がある任意のサイトを訪れ、次のスニペットをブラウザのコンソールに貼り付けます：\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> - </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - vendor id:            </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed decision: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit decision:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - consented purposes:   </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()).<span style=\"color:#a6e22e\">sort</span>(),<span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">8</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)\n</span></span></code></pre></div></li>\n<li>上記のスニペットをデモサイトのコンソールに貼り付けると、次のように返されます：\n<pre tabindex=\"0\"><code>OneTrust - Opt-in Model\n\nChecks:\n  - vendor id:            b38364e4-b2c4-4349-8e4e-48cf28a35db8\n  - well-formed decision: true\n  - explicit decision:    false\n  - consented purposes:   [\n        &#34;C0001&#34;\n]\n</code></pre></li>\n<li>ウェブページで<strong>すべてのクッキーを承諾</strong>をクリックし、同じスニペットをもう一度貼り付けます。次の出力は、決定が正しく理解され、統合によってキャプチャされたことを示します：\n<pre tabindex=\"0\"><code>OneTrust - Opt-in Model\n\nChecks:\n  - vendor id:            b38364e4-b2c4-4349-8e4e-48cf28a35db8\n  - well-formed decision: true\n  - explicit decision:    true\n  - consented purposes:   [\n        &#34;C0001&#34;,\n        &#34;C0002&#34;,\n        &#34;C0003&#34;,\n        &#34;C0004&#34;\n]\n</code></pre></li>\n</ol>\n<h2 id=\"公開後の衝突と実施ルールのデバッグ\">公開後の衝突と実施ルールのデバッグ</h2>\n<p><code>window.tealiumCmpIntegrations</code>には、ページ上で強制されている統合を理解するのに役立つ多くの便利なプロパティがあります。たとえば、<code>loadRules</code>には、どの同意統合が強制され、Tealium iQとすべてのタグがブロックされたかどうかを示す衝突があったかどうかを示す子プロパティがあります。</p>\n<ul>\n<li><code>map</code>と<code>tagBasedMap</code>は、タグUIDと目的キーの関係を異なる視点で示します。</li>\n<li><code>tiqGroupName</code>は、目的キーをTealium iQ自体にマッピングします。</li>\n<li><code>cmpName</code>は、現在アクティブなCMP（テンプレートによる）を示します。</li>\n<li><code>cmpIntegrationVersion</code>は、使用しているベンダー固有の統合テンプレートの現在のバージョンを示します。</li>\n<li><code>version</code>は、使用している基礎となる同意実施フレームワークのバージョンを示します。</li>\n</ul>\n<p>このオブジェクトにも含まれている特定の統合機能の詳細については、カスタム統合の作成に関する関連<a href=\"/ja/consent/client-side/consent-integrations/custom-cmp/\">ドキュメント</a>を参照してください。</p>\n"
        }  

    , 
        {
            "weight": "480",
            "url": "https://docs.tealium.com/ja/consent/client-side/consent-integrations/custom-cmp/",
            "title": "カスタムCMP統合",
            "body": "<h2 id=\"仕組み\">仕組み</h2>\n<p>Tealium Consent Integrationsは、以下の2つの部分で構成されています：</p>\n<ul>\n<li>Tealium iQ用の同意強制フレームワーク（<code>utcm_framework</code>テンプレート）。</li>\n<li>Tealium iQの同意強制フレームワークを活用するCMP特有の統合テンプレート。これらの統合テンプレートはできるだけ軽量に設計されています。</li>\n</ul>\n<p>私たちの<a href=\"/ja/consent/client-side/consent-integrations/supported-vendors/\">事前構築された統合</a>は、様々な同意管理プラットフォーム（CMP）との統合をサポートしています。しかし、以下のような場合にはカスタム統合が推奨されます：</p>\n<ul>\n<li>事前に構築された統合がないCMPを使用する場合。</li>\n<li>同意をキャプチャするための内部ツールを使用する場合。</li>\n<li>標準の統合を破る広範なカスタマイズを伴うサポートされているCMPを使用する場合。</li>\n</ul>\n<p>このような場合には、カスタム統合を使用できます。JavaScript関数を使用することで、任意の同意キャプチャツールが強制フレームワークを活用できます。</p>\n<p>新しいカスタム統合を追加するには、既存の統合と提供されたテンプレートをガイドとして使用してください。</p>\n<p>以下は、カスタム統合を作成するための基本的なワークフローを説明しています：</p>\n<ol>\n<li>Tealium iQの外部（CMPが実装されているウェブサイト）で統合を開発およびデバッグします。</li>\n<li>Tealium iQで新しいカスタム同意統合および目的グループを追加します。詳細については、<a href=\"/ja/consent/client-side/consent-integrations/manage/\">同意統合と目的グループの管理</a>を参照してください。</li>\n<li>目的グループ内の目的にTealium iQおよび適切なタグを割り当てます。</li>\n<li>テンプレートを作成するには、プロファイルを保存します。</li>\n<li>新しく作成されたテンプレートを編集します。詳細については、<a href=\"/ja/iq-tag-management/templates/manage/\">テンプレートの管理</a>を参照してください。</li>\n<li>開発環境またはテスト環境にテンプレートを公開して、すべてが期待通りに動作することを確認し、その後通常のテストおよび公開フローに従ってください。</li>\n</ol>\n<h2 id=\"カスタム統合の開発デバッグおよび検証\">カスタム統合の開発、デバッグ、および検証</h2>\n<p>カスタムCMP統合を作成するには、以下の<a href=\"#custom-integration-template\">カスタムテンプレート</a>を編集してCMPの要件に合わせます。カスタムテンプレートのコメントを参照して、動作例を確認してください。</p>\n<h3 id=\"公開前の開発とデバッグ\">公開前の開発とデバッグ</h3>\n<p>開発中にデバッグするために以下のステップを完了してください：</p>\n<ol>\n<li><a href=\"#custom-integration-template\">カスタムテンプレート</a>の最後にある<strong>デバッグ</strong>ブロックのコメントを外します。</li>\n<li>サポートしたいCMPを実行しているウェブサイトのコンソールにテンプレートを貼り付けます。</li>\n<li>デバッグコードブロックが同意決定を出力します。</li>\n<li>決定をカスタマイズしてテンプレートを再度貼り付け、新しく解釈された同意決定を確認します。</li>\n<li>テンプレートに満足したら、Tealium iQに貼り付けて公開する前に再度デバッグブロックをコメントアウトします。</li>\n</ol>\n<p>プロファイルを保存して<a href=\"/ja/iq-tag-management/templates/manage/\">テンプレートを編集</a>することで、デバッグスニペットも見つけることができます。</p>\n<h3 id=\"公開後の検証\">公開後の検証</h3>\n<p>公開後にテンプレートをデバッグおよび検証する方法は2つあります：デバッグモードを使用するか、<code>window.tealiumCmpOutput</code>オブジェクトを使用するかです。</p>\n<h4 id=\"デバッグモードの使用\">デバッグモードの使用</h4>\n<p><a href=\"/ja/platforms/javascript/debugging/\">デバッグモード</a>を使用するには：</p>\n<ul>\n<li>コンソールで<code>document.cookie = &quot;utagdb=true&quot;</code>を構成して<code>utagdb</code>クッキーを<code>true</code>に構成します。</li>\n<li>関連する出力のみを表示するようにコンソールフィルターを構成します（デバッグ出力に推奨されるフィルターがあります）。</li>\n<li>期待通りに動作するかどうか、異なるオプションをテストします。</li>\n</ul>\n<h4 id=\"windowtealiumcmpoutputオブジェクトの使用\"><code>window.tealiumCmpOutput</code>オブジェクトの使用</h4>\n<p><code>window.tealiumCmpOutput</code>オブジェクトを使用するには：</p>\n<ul>\n<li>テンプレートの下部にコメントアウトされたデバッグコードブロックをコンソールに貼り付けて、あなたの決定と関連する出力のみを出力します。</li>\n<li>必要に応じて、テンプレート内の関数を個別に呼び出すか、このオブジェクトの他の便利なプロパティにアクセスすることもできます。</li>\n</ul>\n<p>事前構築された統合およびカスタム統合の詳細なデバッグのヒントについては、<a href=\"/ja/consent/client-side/consent-integrations/validate-and-debug/\">同意統合の検証とデバッグ</a>を参照してください。</p>\n<h2 id=\"統合機能\">統合機能</h2>\n<p>統合のCMP特有のコンポーネントは、<code>window.tealiumCmpIntegration</code>オブジェクトを使用して定義されます。</p>\n<p><code>window.tealiumCmpIntegration</code>オブジェクトは、名前<code>.cmpName</code>、バージョン<code>.cmpIntegrationVersion</code>、および以下の関数で構成されています：</p>\n<h3 id=\"動作モードの決定\">動作モードの決定</h3>\n<ul>\n<li><code>.cmpCheckIfOptInModel</code> - 統合が<code>opt-in</code>モデルまたは<code>opt-out</code>モデルのどちらで動作するかを決定します。ブール値を返します。</li>\n</ul>\n<h3 id=\"決定の取得\">決定の取得</h3>\n<ul>\n<li><code>.cmpFetchCurrentConsentDecision</code> - 同意決定の現在の生バージョン（CMPからの生バージョン）を取得します。結果はオブジェクトでなければならず、すべての後続の関数に引数として渡されます。</li>\n</ul>\n<h3 id=\"決定の検証と標準化\">決定の検証と標準化</h3>\n<ul>\n<li>\n<p><code>.cmpCheckForWellFormedDecision</code> - 同意決定の生バージョンが適切に形成され、理解可能であるかどうかをチェックします。ブール値を返します。</p>\n</li>\n<li>\n<p><code>.cmpCheckForTiqConsent</code> - 生の同意決定にTealium iQによるデータ処理の許可が含まれているかどうかを決定します。falseの場合、何も実行されません。ブール値を返します。</p>\n</li>\n<li>\n<p><code>.cmpCheckForExplicitConsentDecision</code> - 生の同意決定が<code>明示的</code>か<code>暗黙的</code>かを決定します。ブール値を返します。</p>\n</li>\n<li>\n<p><code>.cmpConvertResponseToGroupList</code> - 生の決定を下流の強制のための許可された目的キーの単純な配列に変換します。同意された目的キーの配列を返します。</p>\n</li>\n</ul>\n<h3 id=\"同意更新の監視とトリガー\">同意更新の監視とトリガー</h3>\n<ul>\n<li>\n<p><code>.cmpAddCallbackToTriggerRecheck</code> - CMPの同意ステータスが変更されるたびに呼び出されるコールバック関数を登録します。これにより、ポーリングに依存せずにTealium iQが最新の同意決定を迅速に更新できるようになります。</p>\n<p><code>cmpAddCallbackToTriggerRecheck</code>は、CMPがコールバックまたは代替実装方法を通じて同意ステータスの変更を通知するたびに<code>triggerRecheck()</code>を呼び出すように構成されていることを確認してください。暗黙の同意のためにバナーが表示されるときやCMPのロード時の類似点で<code>triggerRecheck()</code>を呼び出します。詳細については、<a href=\"#custom-integration-template\">カスタム統合テンプレート</a>のコメントを参照してください。現在コールバックをサポートしている統合については、<a href=\"/ja/consent/client-side/consent-integrations/supported-vendors/\">サポートされているベンダー統合</a>を参照してください。</p>\n</li>\n</ul>\n<h2 id=\"カスタム統合テンプレート\">カスタム統合テンプレート</h2>\n<p>以下は、独自のカスタム統合を開始するための空白テンプレートです。このテンプレートには、テンプレートの最後にデバッグスニペットが含まれており、コンセント統合のデバッグと検証に使用できます。</p>\n\n<div class=\"pv2\">\n<div class=\"expand ba pa2 b--black-20 pv3\">\n    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">\n        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>\n        <span style=\"font-weight:bold;\">\n        \n    \t\n    \tExpand to view code snippet\n    \t\n    \t</span>\n    </div>\n    <div class=\"expand-content pa2\" style=\"display: none;\">\n        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">myCustomConsentIntegration</span> (window) {\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">/**\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * このテンプレートは編集を目的としており、カスタムCMP/キャプチャツールのサポートを構築するために使用されます。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * 例示コード（コメントアウトされている）は、オプトアウトクッキーをチェックし、次の2つの決定のいずれかを返す統合から取得されています：\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *  - [&#39;no-selling&#39;]（任意の値が見つかったオプトアウトクッキー） - 常に明示的な決定（オプトアウトクッキーが構成されています）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *  - [&#39;no-selling&#39;, &#39;yes-selling&#39;]（オプトアウトクッキーが見つからない） - 常に暗黙的な決定（クッキーが構成されていません）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * オプトアウトクッキーの（大文字と小文字を区別する）名前はUIの「Vendor ID」フィールドから取得されます。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    *\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * 詳細については、https://docs.tealium.com/iq-tag-management/consent-integrations/supported-vendors/#opt-out-cookie--gpc を参照してください。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * \n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    * （上記の統合はこの例のために簡略化されました - GPCロジックは削除されました）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP特有の機能とラベル\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Custom Example&#39;</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;v1.1.0&#39;</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span>\n</span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// 以下の行を削除（コメントアウト）してください。ポーリングを使用したい場合や、ソリューションがコールバックをサポートしていない場合です\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpAddCallbackToTriggerRecheck</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpAddCallbackToTriggerRecheck</span>;\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  // UIで入力されたVendor IDを単一の関連統合のために引っ張ってくる\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  var optOutCookieName = (window.tealiumCmpIntegration &amp;&amp; window.tealiumCmpIntegration.map &amp;&amp; Object.keys(window.tealiumCmpIntegration.map)[0]) || &#39;error-no-map-found-so-no-cookie-name-available&#39;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  */</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMPが「オプトイン」モデル（GDPRスタイル）を実行している場合は真を返す必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#75715e\">// このオプトアウトクッキーの例はオプトアウトモデル（CCPA/CPRAスタイル）のみをサポートしているため、これはfalseを返すようにハードコードされています。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return false\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP特有の生のオブジェクト（オブジェクトでなければならない）を返す必要があります。これには、決定に関する必要な情報が含まれています。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#75715e\">// この出力は、以下の関数でcmpRawOutput引数として使用されます。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    // まだタグマネージャーの機能を使用できません。許可されていないためです\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    var readCookie = function (name) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      var reString = &#39;(?:(?:^|.*;\\\\s*)&#39; + name + &#39;\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$&#39;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      var re = new RegExp(reString)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      var cookieValue = document.cookie.replace(re, &#39;$1&#39;)\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      if (!cookieValue) return undefined\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      return cookieValue\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    var cookie = readCookie(optOutCookieName) || &#39;opt-out-cookie-not-found&#39;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return { cookieState: cookie } // 統合を機能させるためにオブジェクトを返す必要があります - これにより、後で他のプロパティ（グローバルプライバシーコントロールなど）を追加できます\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// Tealium iQが正しいCMP構成を持っていることを確認するのに役立つ文字列を返す必要があります（他のページ/ CMPの他の顧客のものではありません）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return optOutCookieName\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// 生の決定がCMPの期待に合っている場合は真を返す必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return typeof cmpRawOutput === &#39;object&#39; &amp;&amp; typeof cmpRawOutput.cookieState === &#39;string&#39;\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// 同意決定がユーザーによって明示的に行われた場合は真を返す必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    // この例では、決定が明示的であるかどうかを判断する唯一の方法は、オプトアウトクッキーが構成されているかどうかを確認することです\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    if ((typeof cmpRawOutput === &#39;object&#39; &amp;&amp; typeof cmpRawOutput.cookieState === &#39;string&#39; &amp;&amp; cmpRawOutput.cookieState !== &#39;opt-out-cookie-not-found&#39;)) return true\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return false\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// 同意されたベンダー/目的の配列を返す必要があります - これらはTealium iQの目的と正確に一致する必要があります\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    var consentDecision = [&#39;no-selling&#39;] // データを売却/共有しないタグは常に許可されます\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    // タグがデータを売却することが許可されているかどうかを判断するために、空でないオプトアウトクッキーを簡単にチェックします\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    if (cmpRawOutput.cookieState === &#39;opt-out-cookie-not-found&#39;) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      consentDecision.push(&#39;yes-selling&#39;) // クッキーが見つからないので、データの売却/共有が問題ないと仮定しなければなりません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    return consentDecision\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// 基盤となるフレームワークがサポートしている場合、一部のポーリングを避けるために着信コールバック機能を使用します\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#75715e\">// トリガーチェック関数を頻繁に呼び出す方が良いです（ネガティブな影響はありません） - 同意の変更とそれに伴うデータを見逃すよりも少ないです（問題があります）。\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#75715e\">// CMPの同意ステータスに変更があるたびにトリガーチェックを呼び出す必要があります。例えば：\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#75715e\">//  - 初期同意ポップアップ（オプトインモデルでの暗黙の同意）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#75715e\">//  - 明示的な同意の変更\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#75715e\">//  - 以前の決定が行われたときの初期CMPロード\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#75715e\">// この関数がウィンドウスコープオブジェクトに含まれていない場合、ポーリングが代わりに使用されます\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpAddCallbackToTriggerRecheck</span> (<span style=\"color:#a6e22e\">triggerRecheck</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// この例では、例と一致するようにクッキーの変更をリスンするリスナーを構成していますが、適切なものをリスンすることができます\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    (function() {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        // 元のdocument.cookie記述子\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        const originalCookieDescriptor = Object.getOwnPropertyDescriptor(Document.prototype, &#39;cookie&#39;);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        // カスタムイベントを作成\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        function emitCookieChange(value) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">          const event = new CustomEvent(&#39;cookieUpdated&#39;, {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">            detail: {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">              cookies: value\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">            }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">          });\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">          document.dispatchEvent(event);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        // document.cookieプロパティをオーバーライド\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        Object.defineProperty(document, &#39;cookie&#39;, {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">          get: function() {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">            return originalCookieDescriptor.get.call(document);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">          },\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">          set: function(value) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">            originalCookieDescriptor.set.call(document, value);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">            emitCookieChange(value);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">          }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        });\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      })();\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      // 例のリスナー\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      document.addEventListener(&#39;cookieUpdated&#39;, (e) =&gt; {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        // オプトアウトクッキーが更新されたときにコールバック関数をトリガーします（ここでのいくつかの偽陽性は問題ありません）\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        if ((e.detail.cookies.indexOf(optOutCookieName)) !== -1) {\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">            triggerRecheck();\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">        }\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">      });\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">    */</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// この関数やそれ以下のものを変更する必要はありません\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// 理解できないものはオプトアウトとして扱います\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span>\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span>\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>})(window)\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">/*\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// デバッグ/開発出力 - このブロックのコメントを外し、このテンプレート全体をテストページに貼り付け/再貼り付けしてください\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">var outputString = `${tealiumCmpIntegration.cmpCheckIfOptInModel() ? &#39;Opt-in&#39; : &#39;Opt-out&#39;} Model\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">Checks:\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  - id:          ${tealiumCmpIntegration.cmpFetchCurrentLookupKey()}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  - well-formed: ${tealiumCmpIntegration.cmpCheckForWellFormedDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  - explicit:    ${tealiumCmpIntegration.cmpCheckForExplicitConsentDecision(tealiumCmpIntegration.cmpFetchCurrentConsentDecision())}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  - group list:  ${JSON.stringify(tealiumCmpIntegration.cmpConvertResponseToGroupList(tealiumCmpIntegration.cmpFetchCurrentConsentDecision()))}\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">`\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">console.log(outputString);\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">*/</span>\n</span></span></code></pre></div>\n    </div>\n</div>\n</div>\n"
        }  

    , 
        {
            "weight": "485",
            "url": "https://docs.tealium.com/ja/consent/client-side/consent-integrations/enforcement-conditions-conflict/",
            "title": "施行条件の競合の取り扱い",
            "body": "<h2 id=\"プライバシー原則\">プライバシー原則</h2>\n<p>Consent Integrationsは、プライバシーバイデザインおよびプライバシーバイデフォルトの原則を厳格に遵守して構築されました。Consent Integrationsは、関連するポリシーおよび規制に準拠し、ユーザーエラーや構成ミスによるデータ漏洩から保護しながら、ビジネスのためのデータ活性化を保証します。これらの原則により、明示的な同意または明確な条件が満たされた場合にのみ、データ処理および活性化が許可されます。</p>\n<h2 id=\"施行条件の競合をconsent-integrationsがどのように扱うか\">施行条件の競合をConsent Integrationsがどのように扱うか</h2>\n<ul>\n<li><strong>少なくとも1つの同意統合または免除がアクティブな場合</strong>：特定の信号があなたの同意管理プラットフォーム（CMP）からない限り、データ処理は許可されません。</li>\n<li><strong>2つ以上の施行ルールが統合に重複する場合</strong>：Tealium iQはロードされず、タグは発火しません。</li>\n<li><strong>統合が免除と重複する場合</strong>：単一の統合がいかなる数の免除と重複しても、統合が施行され、免除は無視されます。</li>\n</ul>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>2つの統合がアクティブであり、両方の施行ルールが<code>true</code>と評価されるようなあいまいなシナリオでは、Consent Integrationsはデータ漏洩の可能性に対する保護としてデータ処理および活性化を保留します。この挙動はブロックされたタグからのデータ損失を招く可能性がありますが、データ漏洩のリスクを軽減するための予防措置です。</p>\n<p>次の表は、アクティブな免除と統合の数に応じて、Consent Integrationsが競合をどのように扱うかを示しています：</p>\n<table>\n<thead>\n<tr>\n<th>免除</th>\n<th>統合</th>\n<th>競合の取り扱い</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>すべてのデータ処理をブロック</td>\n</tr>\n<tr>\n<td>1+</td>\n<td>0</td>\n<td>すべてのデータ処理を許可</td>\n</tr>\n<tr>\n<td>任意</td>\n<td>1</td>\n<td>目的特有のブロッキングを適用</td>\n</tr>\n<tr>\n<td>任意</td>\n<td>2+</td>\n<td>すべてのデータ処理をブロック</td>\n</tr>\n</tbody>\n</table>\n"
        }  

    ]
}
