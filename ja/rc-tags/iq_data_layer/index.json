
{
    "kind": "term",
    "name": "iq_data_layer",
    "count": 5,
    "items": [

    
        {
            "weight": "10",
            "url": "https://docs.tealium.com/ja/iq-tag-management/data-layer/about/",
            "title": "データレイヤーについて",
            "body":"<h2 id=\"データレイヤーとは何ですか\">データレイヤーとは何ですか？</h2><figure class=\"dib fr mv0\"><a class=\"slb\" href=\"/images/iq-tag-management/data-layer-stack.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/data-layer-stack.png\"         alt=\"Data layer stack\"         title=\"Data layer stack\" class=\"noshadow\"/>    </a></figure><p>データレイヤーはタグ管理の基盤です。データレイヤーでは、ウェブサイトの属性、例えばサイトの言語やページ名を定義します。また、データレイヤーは、購入やログインなど、追跡したい重要なユーザー行動を定義する場所でもあります。タグ管理を実装する際、データレイヤーの属性を定義することが最初のステップです。</p><h2 id=\"それはどのように機能するのですか\">それはどのように機能するのですか？</h2><p>タグはあなたのウェブサイトやアプリケーションからデータが必要です。私たちはあなたのデータを一元化するためにユニバーサルデータオブジェクト（UDO）を推奨します。UDOは、あなたのサイト上のデータレイヤーを表すJavaScriptオブジェクトです。このUDOは、クエリストリングパラメータ、ファーストパーティクッキー、JavaScript変数、メタデータ要素によって補完することができます。これらの変数があなたのデータレイヤーを形成します。</p><p>最初のデータレイヤー変数を追加する前に、その動作方法を見てみましょう：</p><ul><li><strong>JavaScriptオブジェクト</strong><br>データレイヤーで作成された変数のほとんどは、<code>utag_data</code>という名前のJavaScriptオブジェクトにも追加されます。これは**ユニバーサルデータオブジェクト（UDO）**とも呼ばれます。</li><li><strong>一貫した名前</strong><br>Tealium iQタグ管理で定義されたデータレイヤー変数の名前は、ページコードに記載されている変数の名前と一致していなければなりません。例えば、Tealium iQで<code>page_name</code>と名付けられたデータレイヤー変数は、あなたのページコードでは次のように記載されます：<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">utag_data</span> <span style=\"color:#f92672\">=</span> { <span style=\"color:#e6db74\">&#34;page_name&#34;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;My Home Page&#34;</span> };</span></span></code></pre></div></li><li><strong>ユーザーフレンドリーな変数名</strong><br>データレイヤー変数は、ベンダーニュートラルで、すべてのビジネスユニットで理解しやすいユーザーフレンドリーな名前を持っています。例えば、<code>order_id</code>は<code>oid</code>ではなく。</li><li><strong>追加のページデータ</strong><br>あなたが定義する変数に加えて、データレイヤーはあなたのウェブページから以下のデータも利用します：<ul><li>メタデータタグ</li><li>URLの構成要素</li><li>クエリストリングパラメータ</li><li>クッキー</li><li>ローカル保存とセッション保存</li><li>その他のグローバルJavaScript変数</li></ul></li></ul>"
        }  

    , 
        {
            "weight": "11",
            "url": "https://docs.tealium.com/ja/iq-tag-management/data-layer/how-it-works/",
            "title": "データレイヤーの仕組み",
            "body":"<p>以下の用語は、ウェブサイトのデータレイヤーとあなたの <a href=\"/platforms/javascript/install/\"><code>utag.js</code>のインストール</a>に関連しています：</p><ul><li><p><strong>ユニバーサルデータオブジェクト（<code>utag_data</code>）</strong><br>ユニバーサルデータオブジェクト（UDO）は、サイトのデータレイヤーを表すJavaScriptオブジェクトです。このオブジェクトを、ページと訪問のインタラクションを記述する動的な値でサイトのすべてのページにわたって充填します。<br><a href=\"/platforms/javascript/about-utag-data/\">UDOの動作方法</a>について詳しく学びましょう。</p></li><li><p><strong>変数の種類</strong><br>DOMデータ、クエリ文字列、メタデータタグ、クッキー、JavaScript変数を介して直接ウェブページから利用可能なデータ（カスタマイズされたUDO以外）。<br><a href=\"/ja/iq-tag-management/data-layer/data-layer-variables/\">データレイヤー変数の種類</a>について詳しく学びましょう。</p></li><li><p><strong><code>utag.data</code></strong><br>UDOからの変数とページからのすべての他の変数タイプを組み合わせた最終的なデータオブジェクト。このデータは、ロードルールの評価に使用されます。<br><a href=\"/platforms/javascript/built-in-variables/\">UDOで利用可能な組み込み変数</a>について詳しく学びましょう。</p></li><li><p><strong><code>b</code>オブジェクト</strong><br><code>utag.js</code>内の関数によって使用されるJavaScriptオブジェクト。<code>b</code>オブジェクトは、各ベンダータグに対して使用される<code>utag.data</code>のコピーです。<code>b</code>変数はJavaScript拡張で参照できます。<br><a href=\"/platforms/javascript/the-b-object/\"><code>b</code>オブジェクトとその使用方法</a>について詳しく学びましょう。</p></li></ul><p>以下のグラフィックは、個々の変数がどのように組み合わさってデータレイヤーを作成し、そのデータがベンダータグにどのように流れるかを示しています。</p><figure><a class=\"slb\" href=\"/images/iq-tag-management/dataflow-b&amp;w.jpeg\"><img src=\"https://docs.tealium.com/images/iq-tag-management/dataflow-b&amp;w.jpeg\"         alt=\"Data Layer Flow\"         title=\"Data Layer Flow\"/>    </a></figure><h2 id=\"データレイヤーフロー\">データレイヤーフロー</h2><p>ウェブページにTealiumをインストールすると、データレイヤーオブジェクトは次のように動作します：</p><ol><li>Tealium iQタグ管理で定義されたすべての変数が識別されます。</li><li>変数が<code>utag.data</code>に組み合わされます。</li><li>必要に応じて<code>utag.data</code>がローカルスコープの<code>b</code>オブジェクトにコピーされます。</li><li>拡張機能が実行され、<code>b</code>オブジェクトが変更される可能性があります。</li><li>ロードルールは、どのタグをロードして発火するかを決定するために変数を評価します。</li><li>ロードルールは、イベントリスナーをロードするかどうかを評価します。</li><li>変数の値がベンダータグの目的地にマッピングされます。</li><li>ベンダータグが発火し、データマッピングに従って変数の値を渡します。</li></ol><p>Tealium Javascriptライブラリの<a href=\"/ja/iq-tag-management/getting-started/order-of-operations/\">操作の順序</a>について詳しく学びましょう。</p>"
        }  

    , 
        {
            "weight": "12",
            "url": "https://docs.tealium.com/ja/iq-tag-management/data-layer/best-practices/",
            "title": "データレイヤーのベストプラクティス",
            "body":"<h2 id=\"コードの配置\">コードの配置</h2><p>ページコード内では、データレイヤーオブジェクト（<code>utag_data</code>）は、ユニバーサルタグ（<code>utag.js</code>）への参照の_前に_宣言する必要があります。これにより、ユニバーサルタグがロードルール、拡張機能、タグを評価するために必要なデータレイヤー変数をすべて持つことが保証されます。推奨されるコード配置の例は、コードセンターからアクセスできます。</p><p>詳細はこちら: <a href=\"/ja/iq-tag-management/getting-started/install/code-center/\">Code Center</a></p><h2 id=\"命名規則\">命名規則</h2><p>データレイヤーの目的は、ベンダーニュートラルで理解しやすい一連の変数を提供することです。以下のベストプラクティスが適用されます：</p><ul><li><strong>小文字とアンダースコアで区切られた変数名を使用します。</strong><br>例：<code>site_section</code>、<code>product_unit_price</code>、<code>login_status</code>。</li><li><strong>ベンダー固有の命名を避けます。</strong><br><code>eVar1</code>、<code>pv_a3</code>、または<code>oid</code>などは避けてください。</li><li><strong>意味のある変数の説明を使用します。</strong><br>適切に命名された変数でも、追加の説明が必要な場合があります。良い変数の説明には、変数が構成されるタイミングと場所、変数を使用するベンダー、変数で期待する可能性のある値の詳細が含まれます。例：<ul><li>ログインステータスは<code>anonymous</code>または<code>authenticated</code>で、Adobe Analyticsの<code>eVar1</code>に使用されます。</li><li>注文小計は税金や送料を含まず、カンマと通貨記号を除外します。</li></ul></li><li><strong>複数形の変数名を避けます。</strong><br>複数の値を含む変数、例えば商品配列変数は、名前の単数形を使用するべきです。例：<ul><li><code>product_categories</code>の代わりに<code>product_category</code></li><li><code>product_ids</code>の代わりに<code>product_id</code></li></ul></li><li><strong>ブーリアン変数名には<code>is_.</code>または<code>has_.</code>のプレフィックスを付けます。</strong><br>これにより、<code>1</code>または<code>0</code>の値を含む変数をすばやく識別できます。例：<code>is_registered</code>、<code>is_first_time_visitor</code>、<code>is_logged_in</code></li></ul><p><strong>メリット</strong></p><ul><li>一貫した命名規則を作成します。</li><li>新しいユーザーがデータレイヤーに何が含まれていて、各変数がどのように使用されているかを理解するのが容易になります。</li><li>Tealium Supportはこの規則に精通しています。</li></ul><p><strong>デメリット</strong></p><ul><li>ベンダー固有の変数をベンダーニュートラルな命名規則に移行するための追加の努力が必要です。</li></ul><h2 id=\"文字列変数\">文字列変数</h2><p>すべての非製品変数には文字列値を使用します。ブーリアン変数と数値変数は文字列として渡すべきです。</p><p>ブーリアン値には、<code>true</code>と<code>false</code>の代わりに<code>1</code>と<code>0</code>を使用します。このアプローチはより安定しており、これらの変数で期待される値についての混乱を減らします。</p><p>例：</p><table><thead><tr><th></th><th>ブーリアン</th><th>整数</th></tr></thead><tbody><tr><td>正しい</td><td><code>is_registered : &quot;1&quot;</code></td><td><code>order_total : &quot;1234.56&quot;</code></td></tr><tr><td>間違い</td><td><code>is_registered : true</code></td><td><code>order_total : 1234.56</code></td></tr></tbody></table><p><strong>メリット</strong></p><ul><li>タグテンプレートは文字列と配列を期待しています。</li><li>実装中および実装後のテスト努力を最小限に抑えます。</li></ul><p><strong>デメリット</strong></p><ul><li>なし。</li></ul><h2 id=\"配列変数\">配列変数</h2><p>製品変数（価格、数量、IDなど）を配列として構成します。ユニバーサルタグ（<code>utag.js</code>）は、すべての製品変数に対して配列を使用するように設計されています。製品値をカンマ区切りの文字列で構成することも可能ですが、このアプローチはエラーが発生しやすいです。</p><p>配列（推奨）：</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-javascript\" data-lang=\"javascript\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">product_id</span> <span style=\"color:#f92672\">:</span> [<span style=\"color:#e6db74\">&#34;prodID1&#34;</span>,<span style=\"color:#e6db74\">&#34;prodID2&#34;</span>,<span style=\"color:#e6db74\">&#34;prodID3&#34;</span>]</span></span></code></pre></div><p>文字列：</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-javascript\" data-lang=\"javascript\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">product_id</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;prodID1,prodID2,prodID3&#34;</span></span></span></code></pre></div><p><strong>メリット</strong></p><ul><li>ベンダータグテンプレートが期待する同じ形式です。</li><li>データレイヤーの可読性を向上させます。</li></ul><p><strong>デメリット</strong></p><ul><li>なし。</li></ul><h2 id=\"ページタイプ\">ページタイプ</h2><p>サイトのすべてのページには、<code>page_type</code>という変数を含めるべきです。これは、ユーザーが表示しているページのタイプを判断するために使用されます。提案される値には、以下のようなものがありますが、これに限定されません：</p><table><thead><tr><th style=\"text-align:left\">ページ</th><th style=\"text-align:left\">値</th></tr></thead><tbody><tr><td style=\"text-align:left\">ホームページ</td><td style=\"text-align:left\"><code>home</code></td></tr><tr><td style=\"text-align:left\">カテゴリー / 商品リスト</td><td style=\"text-align:left\"><code>category</code></td></tr><tr><td style=\"text-align:left\">商品詳細</td><td style=\"text-align:left\"><code>product</code></td></tr><tr><td style=\"text-align:left\">検索結果</td><td style=\"text-align:left\"><code>search</code></td></tr><tr><td style=\"text-align:left\">カート / バスケット</td><td style=\"text-align:left\"><code>cart</code></td></tr><tr><td style=\"text-align:left\">チェックアウトフロー（ユーザー情報、請求先住所、配送先住所）</td><td style=\"text-align:left\"><code>checkout</code></td></tr><tr><td style=\"text-align:left\">注文確認 / ありがとう</td><td style=\"text-align:left\"><code>order</code></td></tr></tbody></table><p><strong>メリット</strong></p><ul><li>ユーザーがどのようなページを表示しているかを明確に理解します。</li><li>多くのベンダータグは、適切に機能するためにページタイプを利用します。</li></ul><p><strong>デメリット</strong></p><ul><li>ユニバーサルデータオブジェクトに<code>page_type</code>変数を追加するための初期開発努力が必要です。</li></ul><h2 id=\"サードパーティのデータレイヤーオブジェクト\">サードパーティのデータレイヤーオブジェクト</h2><p>すでにW3Cデータオブジェクトや独自のカスタムオブジェクトなど、サイトにデータレイヤーオブジェクトが実装されているかもしれません。これらのオブジェクトは、利用可能な<a href=\"/ja/iq-tag-management/data-layer/data-layer-converter/set-up-data-layer-converter/\">データレイヤーコンバーター</a>のいずれかを使用してUDO <code>utag_data</code>形式に変換することをお勧めします。</p><p><strong>メリット</strong></p><ul><li>ロードルール、データマッピング、Web Companionなどの組み込み機能との互換性が向上します。</li><li>カスタムオブジェクトに関する問題の調査にかかるサポートコストを削減します。</li></ul><p><strong>デメリット</strong></p><ul><li>実装に追加の努力が必要です。</li></ul>"
        }  

    , 
        {
            "weight": "15",
            "url": "https://docs.tealium.com/ja/iq-tag-management/data-layer/data-layer-variables/",
            "title": "データレイヤー変数のタイプ",
            "body":"<p>データレイヤー画面では、変数をタイプ別に整理します。タイプはデータのソースに基づいています。</p><p>サポートされているタイプは次のとおりです：</p><ul><li><strong>UDO変数</strong>：ユニバーサルデータオブジェクト（<code>utag_data</code>）からの変数。</li><li><strong>クエリストリングパラメータ</strong>：URLクエリストリングからの変数。</li><li><strong>ファーストパーティクッキー</strong>：クッキーとして保存された変数。</li><li><strong>JavaScript変数</strong>：すでにサイトコードに存在する変数。</li><li><strong>メタデータ要素</strong>：<code>&lt;meta&gt;</code>タグからの変数。</li><li><strong>DOM変数</strong>：組み込みのDOM変数。</li><li><strong>AudienceStream属性</strong>：AudienceStreamから<a href=\"/ja/server-side/attributes/data-layer-enrichment/about/\">data layer enrichment</a>によってインポートされた変数。</li></ul><figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-datalayervariables-filter.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-datalayervariables-filter.png\"         alt=\"TiQ_DataLayerVariables_Filter.png\"         title=\"TiQ_DataLayerVariables_Filter.png\"/>    </a></figure><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>これらのデータレイヤー変数は、Tealium iQの構成で使用するためのものです。サイトのデータレイヤーコードを作成する方法については、次のJavaScriptインストールドキュメンテーションを参照してください：<a href=\"/ja/platforms/getting-started-web/quick-start/#data-layer\">Data Layer</a>および<a href=\"/ja/platforms/javascript/universal-data-object/\">Universal Data Object</a>。</p><h2 id=\"udo変数\">UDO変数</h2><p>UDOタイプは、<a href=\"/platforms/javascript/about-utag-data/\">Universal Data Object</a>（または<code>utag_data</code>とも呼ばれる）で定義された変数のためのものです。UDOはサイトまたはアプリのコードに実装されています。ほとんどの変数はこのタイプになります。</p><h4 id=\"例\">例</h4><p>ページコード内：</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">utag_data</span> <span style=\"color:#f92672\">=</span> {</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#a6e22e\">language</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;en&#34;</span></span></span><span style=\"display:flex;\"><span>};</span></span></code></pre></div><p>変数名：<code>language</code><br>JavaScript拡張での参照：<code>b[&quot;language&quot;]</code></p><h2 id=\"クエリストリングパラメータ\">クエリストリングパラメータ</h2><p>クエリストリングタイプは、URLからのパラメータのためのものです。クエリストリングは、URL内の<code>?</code>文字の後に続くすべてのもので構成されています。クエリストリングパラメータは<code>key=value</code>の形式でキー/値のペアであり、<code>key</code>はパラメータ名です。</p><h4 id=\"例-1\">例</h4><p>URL内：</p><pre tabindex=\"0\"><code class=\"language-none\" data-lang=\"none\">http://example.com/path/page.html?pg=4&amp;sortOrder=price</code></pre><p>iQ内の変数名：<code>sortOrder</code><br>JavaScript拡張での参照：<code>b[&quot;qp.sortOrder&quot;]</code></p><h2 id=\"ファーストパーティクッキー\">ファーストパーティクッキー</h2><p>ファーストパーティクッキータイプは、ドメインに構成されたクッキーのためのものです。クッキーはファーストパーティクッキーでなければならず、これは同じドメインで構成され使用されることを意味します。</p><p>クッキーにデータを保存するには、ファーストパーティクッキー変数を作成し、<a href=\"/ja/iq-tag-management/extensions/extensions-list/persist-data-value-extension/\">Persist Data Value extension</a>を使用して構成します。</p><p>ブラウザのコンソールを見てクッキーを検査します。例えば、このドキュメンテーションサイト（<code>docs.tealium.com</code>）では、<code>.tealium.com</code>のドメイン内のクッキーのみがファーストパーティと見なされます。異なるドメインで構成されたクッキーはサードパーティと見なされます。</p><figure><a class=\"slb\" href=\"/images/iq-tag-management/data-layer/data-layer-variables/first-party-third-party-cookies-marked.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/data-layer/data-layer-variables/first-party-third-party-cookies-marked.png\"/>    </a></figure><p>ブラウザのクッキー名：<code>_aff</code><br>iQ内の変数名：<code>_aff</code><br>JavaScript拡張での参照：<code>b[&quot;cp._aff&quot;]</code></p><p class=\"tip\"><i class=\"fa fa-info-circle\"></i>デフォルトでは、<code>utag.js</code>は構成で役立つ可能性のあるいくつかのクッキーを作成し維持します。<br>詳細については、<a href=\"/ja/iq-tag-management/data-layer/cookies/#built-in-cookies\">Tealium built-in cookies</a>を参照してください。</p><h3 id=\"バージョン449以前\">バージョン4.49以前</h3><p><code>utag.js</code>のバージョン4.49以前では、いくつかの区切られたキー/値ペアを持つ単一のマルチバリュークッキー<code>utag_main</code>を作成し維持します。</p><p><code>utag_main</code>を使用してカスタムクッキーを作成するには、プレフィックス<code>utag_main_</code>（例：<code>utag_main_mycookie</code>）を持つファーストパーティクッキー変数を作成します。これにより、クッキーはグローバルクッキーネームスペースからタグマネージャーからのクッキーと分離されます。このアプローチは、名前の衝突を避け、どのクッキーがタグマネージャーから来たのかを明確にします。</p><figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-tealium-cookies-add-first-party-cookie-variable.jpg\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-tealium-cookies-add-first-party-cookie-variable.jpg\"         alt=\"Add First Party Cookie variable\"         title=\"Add First Party Cookie variable\"/>    </a></figure><h2 id=\"javascript変数\">JavaScript変数</h2><p>JavaScriptタイプは、Webページ上のJavaScript変数（<code>utag_data</code>オブジェクト以外）を参照します。変数名は、文字、数字、アンダースコア、ドル記号、配列の括弧、およびピリオドのみを含むことができます。オブジェクトのプロパティを参照するには、ドット表記法（<code>object.propertyName</code>）を使用します。</p><h4 id=\"例-2\">例</h4><p>ページ内：</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">myApp</span> <span style=\"color:#f92672\">=</span> { <span style=\"color:#a6e22e\">page</span> <span style=\"color:#f92672\">:</span> { <span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;Home Page&#34;</span> } };</span></span></code></pre></div><p>iQ内の変数名：<code>myApp.page.name</code><br>JavaScript拡張での参照：<code>b[&quot;js_page.myApp.page.name&quot;]</code></p><h2 id=\"メタデータ要素\">メタデータ要素</h2><p>メタデータタイプは、ページの<code>&lt;meta&gt;</code>タグの内容を参照します。</p><h4 id=\"例-3\">例</h4><p>ページ内：</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-html\" data-lang=\"html\"><span style=\"display:flex;\"><span>&lt;<span style=\"color:#f92672\">meta</span> <span style=\"color:#a6e22e\">name</span><span style=\"color:#f92672\">=</span><span style=\"color:#e6db74\">&#34;author&#34;</span> <span style=\"color:#a6e22e\">content</span><span style=\"color:#f92672\">=</span><span style=\"color:#e6db74\">&#34;Tealium&#34;</span> /&gt;</span></span></code></pre></div><p>iQ内の変数名：<code>author</code><br>JavaScript拡張での参照：<code>b[&quot;meta.author&quot;]</code></p><h2 id=\"dom変数\">DOM変数</h2><p>DOMタイプは、<code>window</code>および<code>document</code>オブジェクトからのプロパティを参照します。これらの変数はページ内で自動的に構成されます。</p><p>JavaScriptページ変数：<code>location.hostname</code><br>JavaScript拡張での参照：<code>b[&quot;dom.hostname&quot;]</code></p><p>詳細については、<a href=\"/platforms/javascript/built-in-variables/\">standard page data</a>を参照してください。</p><h2 id=\"ローカル保存とセッション保存\">ローカル保存とセッション保存</h2><p>ローカル保存とセッション保存のタイプは、ブラウザのローカル保存またはセッション保存からのデータを参照します：</p><ul><li>ローカル保存はブラウザセッション間で保存されます。このデータは期限切れになりません。</li><li>セッション保存はページセッションが終了すると期限切れになります。</li></ul><p>これらの保存タイプの違いとその使用についての詳細は、MDN Web Docsの<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\">Window.localStorage</a>および<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage\">Window.sessionStorage</a>を参照してください。</p><p>ローカル保存またはセッション保存に値を構成するには、次のようなカスタムJavaScriptコードを使用した<a href=\"/ja/iq-tag-management/extensions/extensions-list/advanced-javascript-code-extension/\">Advanced JavaScript Code extension</a>を使用します：</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">localStorage</span>.<span style=\"color:#a6e22e\">setItem</span>(<span style=\"color:#e6db74\">&#34;key&#34;</span>, <span style=\"color:#a6e22e\">value</span>);</span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">sessionStorage</span>.<span style=\"color:#a6e22e\">setItem</span>(<span style=\"color:#e6db74\">&#34;key&#34;</span>, <span style=\"color:#a6e22e\">value</span>);</span></span></code></pre></div><p><a href=\"/ja/iq-tag-management/extensions/extensions-list/persist-data-value-extension/\">Persist Data Value</a>または<a href=\"/ja/iq-tag-management/extensions/extensions-list/set-data-values-extension/\">Set Data Values</a>拡張機能を使用して、ローカルまたはセッション保存のブラウザに値を構成することはできません。</p><p>セッションとローカル保存は、同じサブドメイン内のデータのみにアクセスできます。例えば、<code>www.example.com</code>でアクセスされたデータは<code>store.example.com</code>でアクセスできません。詳細については、<a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#cross-origin_data_storage_access\">Same Origin Policy</a>を参照してください。</p><p>拡張機能内のJavaScriptでこれらの変数を参照します：</p><ul><li>ローカル保存：<code>b[&quot;ls.my_local_storage_var&quot;]</code></li><li>セッション保存：<code>b[&quot;ss.my_session_storage_var&quot;]</code></li></ul><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>2023年3月1日以前に<code>ls.</code>または<code>ss.</code>プレフィックスを持つUDOタイプとしてローカル保存またはセッション保存変数を追加した場合、それらは新しいローカル保存とセッション保存変数タイプに変換されません。</p><h4 id=\"例-4\">例</h4><p>システムは変数<code>last_category_viewed</code>をローカル保存に保存します：</p><figure><a class=\"slb\" href=\"/images/iq-tag-management/data-layer/data-layer-variables/localandsessionstorage2.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/data-layer/data-layer-variables/localandsessionstorage2.png\"         alt=\"Reference the variable\"         title=\"Reference the variable\"/>    </a></figure><p>この値はページから次のようにアクセスできます：</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">localStorage</span>.<span style=\"color:#a6e22e\">getItem</span>(<span style=\"color:#e6db74\">&#34;last_category_viewed&#34;</span>).</span></span></code></pre></div><p>この変数を構成に追加するには、<strong>Type</strong>を<strong>Local Storage Variable</strong>に構成し、<strong>Source</strong>を<code>last_category_viewed</code>に構成したデータレイヤー変数を作成します：</p><figure><a class=\"slb\" href=\"/images/iq-tag-management/data-layer/data-layer-variables/localandsessionstorage1.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/data-layer/data-layer-variables/localandsessionstorage1.png\"         alt=\"Create the variable\"         title=\"Create the variable\"/>    </a></figure><p>値を構成するには、次のようなカスタムJavaScriptコードを使用した<a href=\"/ja/iq-tag-management/extensions/extensions-list/advanced-javascript-code-extension/\">Advanced JavaScript Code Extension</a>を使用します：</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">localStorage</span>.<span style=\"color:#a6e22e\">setItem</span>(<span style=\"color:#e6db74\">&#34;last_category_viewed&#34;</span>, <span style=\"color:#e6db74\">&#34;Apparel&#34;</span>)</span></span></code></pre></div>"
        }  

    , 
        {
            "weight": "30",
            "url": "https://docs.tealium.com/ja/iq-tag-management/data-layer/manage-variables/",
            "title": "変数の管理",
            "body":"<h2 id=\"データレイヤータブ\">データレイヤータブ</h2><p><strong>Data Layer</strong>タブでは、データレイヤー内の変数を管理するためのいくつかの方法が提供されています。ウェブサイトに実装した各変数は、構成で使用できるようにここで作成する必要があります。<a href=\"/platforms/javascript/about-utag-data/\">サイトのUniversal Data Object (UDO)に入れる動的データ</a>に加えて、この画面から追加できるページからの他の組み込み変数がいくつかあります。</p><p><a href=\"/platforms/javascript/built-in-variables/\">UDOで利用可能な組み込み変数</a>について詳しく学びましょう。</p><p>Tealiumがインストールされているウェブページからどのようなデータが利用可能か不確かな場合は、<a href=\"/ja/iq-tag-management/troubleshooting/utag-debugger/\">Universal Tag Monitor</a>を使用して収集されているデータをすばやく確認します。</p><h2 id=\"変数の追加\">変数の追加</h2><p>単一の変数を追加するには、以下の手順を使用します：</p><ol><li><strong>Data Layer</strong>タブに移動し、<strong>Add Variable</strong>をクリックします。<strong>Add Variable</strong>ダイアログボックスが表示されます。</li><li>次のフィールドを入力します：<ul><li><strong>Source</strong>: (必須) サイトのソースコードにそのまま表示される変数の名前</li><li><strong>Type</strong>: (必須) 下記で指定された変数のタイプ</li><li><strong>Alias</strong>: 変数の追加の名前、通常はSource名が直感的でない場合に使用します</li><li><strong>Notes</strong>: 変数についての有用なコメント、特に次にアカウントを使用する人にとって非常に有用です<br><figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-datalayer-addvariable-dialog.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-datalayer-addvariable-dialog.png\"             alt=\"TiQ_DataLayer_AddVariable_Dialog.png\"             title=\"TiQ_DataLayer_AddVariable_Dialog.png\"/>        </a>    </figure></li></ul></li></ol><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>EventDBで変数を使用する場合、変数の列名はUTF-8の印刷可能な文字のみで構成されている必要があります。標準的な識別子と区切り文字で区切られた識別子のASCII文字は大文字と小文字を区別せず、小文字に変換されます。詳細については、<a href=\"http://docs.aws.amazon.com/redshift/latest/dg/r_names.html\">Amazon Web Services - Names and identifiers</a>を参照してください。</p><h2 id=\"変数の一括インポート\">変数の一括インポート</h2><p>変数を個々に追加すると時間がかかることがあります。Tealium iQは、<strong>Bulk Import from CSV</strong>オプションを使用して一度に多数の変数を追加する簡単な方法を提供しています。</p><p>Bulk Import from CSVオプションを使用して変数を追加するには、以下の手順を使用します：</p><ol><li><p><strong>+ Add Variable</strong>ボタンの右側の下向き矢印をクリックして、他のオプションを表示します。</p></li><li><p><strong>Bulk Import from CSV</strong>を選択します。<br><figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-addvariables-dropdownlist.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-addvariables-dropdownlist.png\"             alt=\"TiQ_AddVariables_DropDownList.png\"             title=\"TiQ_AddVariables_DropDownList.png\"/>        </a>    </figure></p></li><li><p><strong>Import Variables</strong>ダイアログで、追加したい変数をカンマ区切りの値(CSV)形式でテキストボックスに入力します。以下の点に注意する必要があります：</p><ul><li>各変数エントリはこの順序で4つの値をサポートします：<br><code>Source, Type, Description (optional), Alias (optional)</code><br>これらは、<strong>Add Variable</strong>ダイアログから変数を追加する場合に入力するのと同じ値に対応します。</li><li>これらの値は、カンマで区切られるか、または区切られる必要があります。</li><li>各値を引用符で囲むこともできますが、必須ではありません。</li></ul></li><li><p><strong>Apply</strong>をクリックして変数をアップロードします。<br><figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-bulkimportvariablessamplecode.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-bulkimportvariablessamplecode.png\"             alt=\"TiQ_BulkImportVariablesSampleCode.png\"             title=\"TiQ_BulkImportVariablesSampleCode.png\"/>        </a>    </figure></p></li></ol><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i><strong>Replace All Variables</strong>ボックスをチェックすると、現在のすべての変数が削除され、テキストフィールドに入力した変数で置き換えられます。</p><h2 id=\"変数の詳細を表示\">変数の詳細を表示</h2><p>変数の拡張ビューは、変数の詳細を簡潔に表示します。変数の概要を展開して詳細を表示すると、依存関係のリストが表示されます。依存関係を使用すると、この変数を参照しているタグ、ロードルール、および拡張機能を簡単に確認できます。このビューから、変数を編集したり、変数を削除したり、ラベルを管理したりすることができます。</p><figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-viewandeditvariables.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-viewandeditvariables.png\"         alt=\"iQ_ViewAndEditVariables.png\"         title=\"iQ_ViewAndEditVariables.png\"/>    </a></figure><h2 id=\"変数の編集\">変数の編集</h2><p>変数を編集するには、以下の手順を実行します：</p><ol><li>変数をクリックしてビューを展開します。</li><li><strong>Edit</strong>をクリックします。</li><li>変更を行い、<strong>Apply</strong>をクリックします。</li><li><strong>Save/Publish</strong>をクリックして変更を保存します。</li></ol><h2 id=\"変数の一括編集\">変数の一括編集</h2><p><strong>Data Layer</strong>タブからすべての変数を一括編集するか、複数の変数を編集することができます。</p><p>すべての変数を編集するには、以下の手順を実行します：</p><ol><li><strong>Data Layer</strong>タブの<strong>Edit All</strong>ボタンをクリックします。<strong>Edit Bulk Variables</strong>ダイアログが表示され、ここから変更を行うことができます。<figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-editbulkvariables.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-editbulkvariables.png\"             alt=\"TiQ_EditBulkVariables.png\"             title=\"TiQ_EditBulkVariables.png\"/>        </a>    </figure></li><li><strong>Apply</strong>をクリックして変更を適用します。</li><li><strong>Save/Publish</strong>をクリックして変更を保存します。</li></ol><p class=\"tip\"><i class=\"fa fa-info-circle\"></i>選択した変数を一括編集するには、変数の横にあるチェックボックスを選択し、<strong>Edit Selected</strong>をクリックします。</p><h2 id=\"変数の削除\">変数の削除</h2><p>変数を削除するには、以下の手順を実行します：</p><ol><li>変数をクリックしてビューを展開します。</li><li>変数名の下にある<strong>Delete</strong>ボタンをクリックします。<strong>Confirm Remove</strong>ダイアログが表示されます。</li><li><strong>OK</strong>をクリックして確認します。</li><li><strong>Save/Publish</strong>をクリックして変更を保存します。</li></ol>"
        }  

    ]
}
