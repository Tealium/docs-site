
{
    "kind": "term",
    "name": "es_attributes",
    "count": 10,
    "items": [

    
        {
            "weight": "10",
            "url": "https://docs.tealium.com/ja/server-side/attributes/about/",
            "title": "属性について",
            "body":"<p>属性は実装の基礎であり、顧客の行動やブランドとの相互作用を定義するために使用されます。属性は訪問者、訪問者のセッション、および収集されたイベントのプロパティを定義します。属性の一般的な例には、メールアドレス、会員ID、製品カテゴリ、前回の訪問日、およびアクティブなブラウザなどがあります。</p><h2 id=\"スコープ\">スコープ</h2><p>スコープは、リアルタイムで属性が永続する期間を指します。</p><p>以下の表には、サポートされているスコープがリストされています。</p><table><thead><tr><th>スコープ</th><th>説明 / 例</th><th>用途</th></tr></thead><tbody><tr><td>イベント</td><td>お客様が実行しているページ、コンテンツ、およびリアルタイムのアクションを説明する個々のイベントに関連する属性。例: ページ名、製品価格、イベント名、注文合計など。</td><td><strong>属性のソース</strong><br> イベント属性は、次の値から取得されます:<br> <ul><li><strong>ユニバーサル変数</strong> <a href=\"/ja/platforms/javascript/universal-data-object/\">ユニバーサルデータオブジェクト</a></li><li><strong>JavaScriptページ変数</strong> グローバルJavaScript変数（ブラウザ）</li><li><strong>HTMLメタデータ</strong> メタデータタグ（ブラウザ）</li><li><strong>ファーストパーティCookie</strong> ブラウザのCookie</li><li><strong>クエリストリングパラメータ</strong> 現在のページのURLクエリストリング（ブラウザ）</li></ul></td></tr><tr><td>訪問</td><td>特定の訪問（またはセッション）に関する属性。データは訪問の期間中永続します。例: 訪問時間、使用されたブラウザ、参照URL、カートに入れた商品など。</td><td>これらの属性は、現在のセッションでの訪問者のアクティビティを表します。訪問属性はセッションの期間中永続します。詳細については、<a href=\"#session-length\">セッションの長さ</a>を参照してください。</td></tr><tr><td>訪問者</td><td>すべての訪問での特定の訪問者に関する属性。例: メールアドレス、会員ID、生涯注文合計、カテゴリビューなど。</td><td>このデータは、訪問が終了した後も訪問者に続き、異なるデバイス間でも続きます。訪問者データは現在の訪問が終了した後も永続します。</td></tr><tr><td>オムニチャネル</td><td>オムニチャネルサービスを介してオフラインデータをインポートするためのスコープ。このスコープにはデータ型は必要ありません。</td><td><a href=\"/ja/server-side/data-sources/file-import/about/\">オムニチャネル</a>属性は、ファイルのインポートを定義する際に定義されます。</td></tr></tbody></table><h3 id=\"セッションの長さ\">セッションの長さ</h3><p>セッションの長さは、AudienceStreamが訪問を終了するタイミングを決定します。新しいイベントがないままセッションの長さに達すると、訪問が終了し、AudienceStreamが訪問終了処理を実行します。訪問者の次のイベントは新しい訪問を開始します。AudienceStreamの最大訪問時間は、イベントのアクティビティに関係なく24時間です。</p><p>AudienceStreamでは、デフォルトのセッションの長さは、イベントを送信するプラットフォームに基づいて設定されます:</p><ul><li><strong>Web</strong>: 30分（1つのイベントと追加のイベントがない場合は10分）</li><li><strong>モバイルアプリ</strong>: 2分</li><li><strong>オムニチャネル</strong>: 1分</li><li><strong>ファイルインポート</strong>: 1分</li><li><strong>Collect API</strong>: 30分</li></ul><p>プラットフォームは、次の値に基づいて<code>platform</code>という名前の予約済み属性に設定されます:</p><ul><li><strong>Web</strong> - <code>platform</code>が<code>web</code>または未設定になっています。</li><li><strong>モバイル</strong> - <code>platform</code>が<code>android</code>、<code>ios</code>、<code>win</code>、<code>bb10</code>、<code>native_mobile</code>のいずれかに設定されています。</li></ul><p>セッションの長さをカスタマイズするには、セッションの最初のイベントでデータレイヤー変数<code>_dc_ttl_</code>をミリ秒単位の値に設定します。たとえば、セッションの長さを5分に設定するには、次のようにイベントに追加します: <code>&quot;_dc_ttl_&quot;: 300000</code>。セッションの長さは設定後に変更できません。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>カスタムの長さを設定するには、<code>platform</code>変数を省略する必要があります。<code>platform</code>のカスタム値を設定すると、セッションの長さはデフォルトで30分になります。</p><h2 id=\"データ型\">データ型</h2><p>属性には、基本的な数値からより強力な集計やバッジまで、さまざまなタイプがあります。データ型は、属性値が格納される形式を決定します。</p><p>以下のデータ型がサポートされています:</p><table><thead><tr><th>データ型</th><th>説明</th></tr></thead><tbody><tr><td><a href=\"/ja/server-side/attributes/data-types/number/\">数値</a></td><td>注文合計、生涯イベント数、前回の訪問からの日数などの数値を格納します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/string/\">文字列</a></td><td>名前、住所、お気に入りの製品、ページ名などのテキスト値を格納します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/boolean/\">ブール値</a></td><td>&rsquo;true&rsquo;と&rsquo;false&rsquo;の2つの値のいずれかのみを格納します。<a href=\"/ja/server-side/attributes/data-types/boolean/\">ブール値</a>は、訪問者のアクションや訪問のステータスを示すために使用できます。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/arrays/array-of-numbers/\">数値の配列</a></td><td><a href=\"/ja/server-side/attributes/data-types/arrays/array-of-numbers/\">配列</a>として複数の数値を格納します。配列には一意または重複する数値が含まれる場合があります。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/arrays/arrays/\">文字列の配列</a></td><td>配列として複数の文字列値を格納します。配列には一意または重複する文字列値が含まれる場合があります。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/arrays/array-of-booleans/\">ブール値の配列</a></td><td>配列として複数のブール値を格納します。配列には一意または重複するブール値が含まれる場合があります。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/tally/\">集計</a></td><td>1つ以上のキーと値のペアを格納します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/set-of-strings/\">文字列のセット</a></td><td>一意の文字列値のコレクションをセットとして格納します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/date/\">日付</a></td><td>イベント、訪問者のイベント、または特定の訪問の日付を格納します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/funnel/\">ファネル</a></td><td>支払いファネルや登録などの複数のステップからなるイベントのステータスを追跡します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/timeline/\">タイムライン</a></td><td>時間範囲内の訪問者のアクションのすべての発生を記録します。</td></tr><tr><td><a href=\"/ja/server-side/attributes/data-types/badge/\">バッジ</a></td><td>特定の条件やブラウジングの動作を満たす訪問者に視覚的なマークやシンボルを割り当てます。</td></tr><tr><td><a href=\"/ja/server-side/visitor-stitching/visitor-id-attribute/\">訪問者ID</a></td><td>訪問者の一意の特性をセカンダリ識別子として格納します。</td></tr></tbody></table><h3 id=\"スコープとデータ型のマトリックス\">スコープとデータ型のマトリックス</h3><p>このマトリックスは、各スコープで使用可能なデータ型を示しています。</p><table><thead><tr><th>データ型</th><th>訪問者スコープ</th><th>訪問スコープ</th><th>イベントスコープ</th></tr></thead><tbody><tr><td>数値</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>文字列</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>ブール値</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>数値の配列</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>文字列の配列</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>ブール値の配列</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>集計</td><td>✔</td><td>✔</td><td></td></tr><tr><td>文字列のセット</td><td>✔</td><td>✔</td><td></td></tr><tr><td>日付</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>ファネル</td><td>✔</td><td>✔</td><td></td></tr><tr><td>タイムライン</td><td>✔</td><td>✔</td><td></td></tr><tr><td>バッジ</td><td>✔</td><td></td><td></td></tr><tr><td>訪問者ID</td><td>✔</td><td></td><td></td></tr></tbody></table><h2 id=\"属性id\">属性ID</h2><p>すべてのイベント、訪問、および訪問者属性には、一意の属性識別子があります。このIDの値は、エンリッチメントの実行順序に影響を与える場合があり、より複雑なデータソースや訪問者ステッチングの構成に必要な場合があります。</p><p>属性リストまたは展開された詳細内の属性名の横に属性IDが表示されます。</p><p><strong>イベント属性</strong><figure><a class=\"slb\" href=\"/images/server-side/event-attribute-id.png\"><img src=\"https://docs.tealium.com/images/server-side/event-attribute-id.png\"         alt=\"イベント属性IDの場所\"         title=\"イベント属性IDの場所\"/>    </a></figure></p><p><strong>訪問者属性</strong><figure><a class=\"slb\" href=\"/images/server-side/visitor-attribute-id.png\"><img src=\"https://docs.tealium.com/images/server-side/visitor-attribute-id.png\"         alt=\"訪問者属性IDの場所\"         title=\"訪問者属性IDの場所\"/>    </a></figure></p><h2 id=\"サイズ制限\">サイズ制限</h2><p>EventStreamとAudienceStreamのほとんどの属性には、ストレージ容量制限とその制限を超えた場合の特定の動作があります。なお、全体の訪問者プロファイルは、圧縮および暗号化された状態で400 KBの制限があります。</p><h3 id=\"イベント属性\">イベント属性</h3><table><thead><tr><th>属性</th><th>ストレージ容量制限</th><th>制限を超えた場合の動作</th></tr></thead><tbody><tr><td><strong>文字列</strong></td><td>1,500文字</td><td>制限を超える場合、文字列は1,500文字に切り詰められます。</td></tr><tr><td><strong>任意のタイプの配列</strong></td><td>30,000エントリ</td><td>属性が制限を超えるように設定または更新された場合、属性は30,000エントリに切り詰められて設定されます。</td></tr><tr><td><strong>日付</strong></td><td>最小: &ldquo;-292275055-05-16T16:47:04.192Z&rdquo; 最大: &ldquo;+292278994-08-17T07:12:55.807Z&rdquo;</td><td></td></tr><tr><td><strong>数値</strong></td><td><code>java.lang.Number</code>で表され、動的な精度を持ちます。</td><td></td></tr></tbody></table><h3 id=\"訪問者訪問属性\">訪問者/訪問属性</h3><table><thead><tr><th>属性</th><th>ストレージ容量制限</th><th>制限を超えた場合の動作</th></tr></thead><tbody><tr><td><strong>文字列</strong></td><td>1,000文字</td><td>エンリッチメントによって1,000文字を超える文字列が生成された場合、値は保存されません。</td></tr><tr><td><strong>タイムライン</strong></td><td>100エントリ</td><td>制限に達すると最も古いエントリが削除されます（先入れ先出し）。たとえば、タイムラインに100のエントリが含まれていて、新しいエントリが追加されると、最初のエントリが削除されます。</td></tr><tr><td><strong>集計</strong></td><td>30,000エントリ。</td><td>属性が制限を超えるように設定または更新された場合、属性は30,000エントリに切り詰められて設定されます。</td></tr><tr><td><strong>任意のタイプの配列</strong></td><td>30,000エントリ。</td><td>属性が制限を超えるように設定または更新された場合、属性は30,000エントリに切り詰められて設定されます。</td></tr><tr><td><strong>文字列のセット</strong></td><td>30,000エントリ。</td><td>属性が制限を超えるように設定または更新された場合、属性は30,000エントリに切り詰められて設定されます。</td></tr><tr><td><strong>日付</strong></td><td>最小: &ldquo;-292275055-05-16T16:47:04.192Z&rdquo; 最大: &ldquo;+292278994-08-17T07:12:55.807Z&rdquo;</td><td></td></tr><tr><td><strong>数値</strong></td><td><code>java.lang.Number</code>で表され、動的な精度を持ちます。</td><td></td></tr><tr><td><strong>訪問者ID</strong></td><td>2 KB</td><td>訪問者IDが2 KBを超える場合、レコードは保存されません。</td></tr><tr><td><strong>ファネル</strong></td><td>制限なし*</td><td></td></tr></tbody></table><p>*制限はありませんが、プロファイルの最大サイズ（圧縮および暗号化後の400 KB）によって属性は制限されます。</p><h2 id=\"iqタグ管理からのインポートされた属性\">iQタグ管理からのインポートされた属性</h2><p>インポートされた属性は、元々対応するTealium iQプロファイルで作成された変数です。Tealium iQ変数は、同じ名前のサーバーサイドプロファイルで利用可能であり、イベントスコープの属性としてインポートされます。Tealium iQで変数を変更（および公開）すると、EventStreamの対応する属性に変更が即座に適用されます。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>インポートされた属性は編集できません。管理するには、Tealium iQを使用する必要があります。</p><p>Tealium iQからの変数がEventStreamに表示されない場合は、Tealium iQ変数がサーバーサイドプロファイルにあること、変数が保存および公開されていることを確認してください。変数の変更を公開した後は、ブラウザでEventStreamページを更新してください。サーバーサイドでTealium iQ変数を利用できるようにするためのサポートが必要な場合は、Tealiumサポートにお問い合わせください。</p><h3 id=\"制限されたデータ\">制限されたデータ</h3><p>このプロパティは、システム外に送信すべきでないデータ（サードパーティの<a href=\"/ja/server-side/connectors/about/\">コネクタ</a>や<a href=\"/ja/server-side/data-storage/about/\">DataAccess</a>など）を含む属性を識別するために使用されます。<a href=\"/ja/server-side/attributes/restricted-data/\">制限されたデータ</a>について詳しくは、<a href=\"/ja/server-side/attributes/restricted-data/\">制限されたデータ</a>を参照してください。</p><h3 id=\"ルール\">ルール</h3><p>ルールは、エンリッチメントをトリガーするための追加のロジックを提供します。</p><ul><li><p>事前定義されたルールを適用するには、ドロップダウンリストから選択し、「ルールの追加」をクリックします。<br><p class=\"tip\"><i class=\"fa fa-info-circle\"></i>エンリッチメントダイアログボックスを介して新しいルールを作成すると、自動的にエンリッチメントに適用されます。</p></p></li><li><p>新しいルールを適用するには、「ルールの作成」をクリックします。<br><figure><a class=\"slb\" href=\"/images/server-side/whiteui-using-attributes-rules.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-using-attributes-rules.png\"/>          </a>      </figure></p></li></ul><h2 id=\"プリロードされた属性\">プリロードされた属性</h2><p>AudienceStreamとEventStreamには、各訪問者または訪問について有用な情報を判断するための統計情報が事前に設定された訪問および訪問者属性のセットが含まれています。</p><p>これらの属性についての詳細については、<a href=\"/ja/server-side/attributes/preloaded/\">プリロードされた属性</a>を参照してください。</p>"
        }  

    , 
        {
            "weight": "13",
            "url": "https://docs.tealium.com/ja/server-side/attributes/preloaded/",
            "title": "プリロードされた属性",
            "body":"<h2 id=\"プリロードされた属性\">プリロードされた属性</h2><p>便宜上、AudienceStreamとEventStreamには、プリロードされた訪問と訪問者の属性のセットが含まれています。各属性は、訪問者や訪問について有用な情報を決定するのに役立つ統計情報で事前に設定されています。これらの属性は、<a href=\"/ja/client-side-tags/tealium-collect-tag/\">Tealium Collect tag</a>からの標準的なウェブトラフィックデータを超える訪問者からの追加情報を必要としません。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>プリロードされた属性は変更することはできませんが、それらを複製してコピーを変更することはできます。複製は、オリジナルのすべてのエンリッチメントとルールを含んでいます。</p><h3 id=\"訪問者の属性\">訪問者の属性</h3><table><thead><tr><th>訪問者の属性</th><th>ID</th><th>タイプ</th><th>説明</th></tr></thead><tbody><tr><td>平均訪問時間（分）</td><td>26</td><td>数値</td><td>訪問の平均時間（分）</td></tr><tr><td>週あたりの平均訪問回数</td><td>29</td><td>数値</td><td>週あたりの平均訪問回数</td></tr><tr><td>ファン</td><td>30</td><td>バッジ</td><td>訪問者は2回以上訪問し、直接訪問が紹介よりも多い。</td></tr><tr><td>初回訪問</td><td>23</td><td>日付</td><td>初回訪問の日付</td></tr><tr><td>頻繁な訪問者</td><td>31</td><td>バッジ</td><td>訪問者は平均して週に2回以上訪問しています。</td></tr><tr><td>最後のイベントURL</td><td>17</td><td>文字列</td><td>訪問者の最後のイベントURL</td></tr><tr><td>最後の訪問</td><td>24</td><td>日付</td><td>最後の訪問の日付</td></tr><tr><td>使用したブラウザの種類の合計</td><td>57</td><td>集計</td><td>各種類のブラウザが使用された回数の集計</td></tr><tr><td>使用したブラウザの種類の合計（お気に入り）</td><td>56</td><td>文字列</td><td>使用したブラウザの種類の属性の中でのお気に入りの項目</td></tr><tr><td>使用したブラウザのバージョンの合計</td><td>63</td><td>集計</td><td>使用したブラウザのバージョンの集計</td></tr><tr><td>使用したブラウザのバージョンの合計（お気に入り）</td><td>62</td><td>文字列</td><td>使用したブラウザのバージョンの属性の中でのお気に入りの項目</td></tr><tr><td>使用したデバイスの合計</td><td>55</td><td>集計</td><td>使用したデバイスの集計</td></tr><tr><td>使用したデバイスの合計（お気に入り）</td><td>54</td><td>文字列</td><td>使用したデバイスの属性の中でのお気に入りの項目</td></tr><tr><td>ライフタイムイベント数</td><td>22</td><td>数値</td><td>ユーザーがトリガーしたイベントの総数</td></tr><tr><td>使用したオペレーティングシステムの合計</td><td>59</td><td>集計</td><td>使用したオペレーティングシステムの集計</td></tr><tr><td>使用したオペレーティングシステムの合計（お気に入り）</td><td>58</td><td>文字列</td><td>使用したオペレーティングシステムの属性の中でのお気に入りの項目</td></tr><tr><td>使用したプラットフォームの合計</td><td>61</td><td>集計</td><td>使用したプラットフォームの集計</td></tr><tr><td>使用したプラットフォームの合計（お気に入り）</td><td>60</td><td>文字列</td><td>使用したプラットフォームの属性の中でのお気に入りの項目</td></tr><tr><td>ライフタイム訪問数</td><td>21</td><td>数値</td><td>ユーザーがサイトを訪問した総回数</td></tr><tr><td>リターニングビジター</td><td>27</td><td>バッジ</td><td>訪問者はリターニングビジターです。</td></tr><tr><td>直接訪問の合計</td><td>15</td><td>数値</td><td>直接訪問の総数</td></tr><tr><td>紹介訪問の合計</td><td>16</td><td>数値</td><td>紹介訪問の総数</td></tr><tr><td>サイトで過ごした合計時間（分）</td><td>25</td><td>数値</td><td>ユーザーの訪問の継続時間の合計</td></tr><tr><td>バッジなし</td><td>32</td><td>バッジ</td><td>訪問者にはバッジが割り当てられていません。</td></tr><tr><td>初回訪問からの経過週数</td><td>28</td><td>数値</td><td>初回訪問からの経過週数</td></tr></tbody></table><h3 id=\"訪問の属性\">訪問の属性</h3><table><thead><tr><th>訪問の属性</th><th>ID</th><th>タイプ</th><th>説明</th></tr></thead><tbody><tr><td>アクティブなブラウザの種類</td><td>44</td><td>文字列</td><td>訪問者が現在使用しているブラウザの種類</td></tr><tr><td>アクティブなブラウザの種類</td><td>49</td><td>文字列のセット</td><td>この訪問で使用されたブラウザの種類の重複なしリスト</td></tr><tr><td>アクティブなブラウザのバージョン</td><td>48</td><td>文字列</td><td>訪問者が現在使用しているブラウザのバージョン</td></tr><tr><td>アクティブなブラウザのバージョン</td><td>53</td><td>文字列のセット</td><td>この訪問で使用されたブラウザのバージョンの重複なしリスト</td></tr><tr><td>アクティブなデバイス</td><td>46</td><td>文字列</td><td>訪問者が現在使用しているデバイス</td></tr><tr><td>アクティブなデバイス</td><td>51</td><td>文字列のセット</td><td>この訪問で使用されたデバイスの重複なしリスト</td></tr><tr><td>アクティブなオペレーティングシステム</td><td>45</td><td>文字列</td><td>訪問者が現在使用しているオペレーティングシステム</td></tr><tr><td>アクティブなオペレーティングシステム</td><td>50</td><td>文字列のセット</td><td>この訪問で使用されたオペレーティングシステムの重複なしリスト</td></tr><tr><td>アクティブなプラットフォーム</td><td>47</td><td>文字列</td><td>訪問者が現在使用しているプラットフォーム</td></tr><tr><td>アクティブなプラットフォーム</td><td>52</td><td>文字列のセット</td><td>この訪問で使用されたプラットフォームの重複なしリスト</td></tr><tr><td>直接訪問</td><td>14</td><td>ブール値</td><td>ユーザーは直接サイトにアクセスしました。</td></tr><tr><td>エントリーURL</td><td>5</td><td>文字列</td><td>最初に訪れたページのURL</td></tr><tr><td>イベント数</td><td>7</td><td>数値</td><td>この訪問でのイベントの総数</td></tr><tr><td>エグジットURL</td><td>6</td><td>文字列</td><td>最後に訪れたページのURL</td></tr><tr><td>紹介訪問</td><td>13</td><td>ブール値</td><td>ユーザーは他のサイトから紹介されました。</td></tr><tr><td>訪問の期間</td><td>12</td><td>数値</td><td>この訪問の期間</td></tr><tr><td>訪問の終了</td><td>11</td><td>日付</td><td>この訪問の終了日</td></tr><tr><td>訪問の開始</td><td>10</td><td>日付</td><td>この訪問の開始日</td></tr></tbody></table><h3 id=\"イベントの属性\">イベントの属性</h3><table><thead><tr><th>イベントの属性</th><th>ID</th><th>タイプ</th><th>説明</th></tr></thead><tbody><tr><td>クライアントIP</td><td>74</td><td>文字列</td><td>クライアントのIPアドレス</td></tr><tr><td>現在のURL</td><td>4</td><td>文字列</td><td>現在のページのURL</td></tr><tr><td>ドメイン</td><td>35</td><td>文字列</td><td>現在のページのドメイン</td></tr><tr><td>event_name</td><td>64</td><td>文字列</td><td>この属性は廃止されました。代わりに<code>tealium_event</code>を使用してください。</td></tr><tr><td>最後のイベントのタイムスタンプ</td><td>8</td><td>文字列</td><td>最後のイベントのタイムスタンプ</td></tr><tr><td>ページタイトル</td><td>38</td><td>文字列</td><td>現在のページのタイトル</td></tr><tr><td>パス名</td><td>36</td><td>文字列</td><td>現在のページのパス名</td></tr><tr><td>プラットフォーム</td><td>40</td><td>文字列</td><td>クライアントのプラットフォーム</td></tr><tr><td>クエリストリング</td><td>37</td><td>文字列</td><td>現在のページのクエリストリング</td></tr><tr><td>リファリングURL</td><td>3</td><td>文字列</td><td>前のページのURL</td></tr><tr><td>tealium_account</td><td>66</td><td>文字列</td><td>アカウント名</td></tr><tr><td>tealium_datasource</td><td>70</td><td>文字列</td><td>データソースキー</td></tr><tr><td>tealium_environment</td><td>67</td><td>文字列</td><td>公開環境</td></tr><tr><td>tealium_event</td><td>75</td><td>文字列</td><td>Tealiumのイベント名（<code>view</code>または<code>link</code>）</td></tr><tr><td>tealium_event_type</td><td>78</td><td>文字列</td><td>発行されているTealiumイベントのタイプ（<code>view</code>または<code>event</code>）</td></tr><tr><td>tealium_firstparty_visitor_id</td><td>76</td><td>文字列</td><td>ファーストパーティクッキーによって提供された訪問者ID</td></tr><tr><td>tealium_library_name</td><td>68</td><td>文字列</td><td>ライブラリ名</td></tr><tr><td>tealium_library_version</td><td>69</td><td>文字列</td><td>ライブラリのバージョン</td></tr><tr><td>tealium_library_profile</td><td>79</td><td>文字列</td><td>アカウントプロファイル</td></tr><tr><td>tealium_random</td><td>65</td><td>数値</td><td>この値は、プラットフォームが各イベントに対して生成したランダムな数値です。期待される値は16桁の数値です。この値は16桁未満の場合はゼロで埋められます。</td></tr><tr><td>tealium_session_id</td><td>71</td><td>数値</td><td>この値は、最初のページビュー、イベント、またはライブラリの起動が完了したときのエポックタイムスタンプ（ミリ秒単位）です。この値は、ウェブ上で30分間活動がない場合にリセットされます。</td></tr><tr><td>tealium_thirdparty_visitor_id</td><td>77</td><td>文字列</td><td>サードパーティクッキーによって提供された訪問者ID</td></tr><tr><td>tealium_timestamp_epoch</td><td>73</td><td>数値</td><td>この値は、イベントが発生したときの時間（秒単位）です。イベントがキューに入れられた場合、この値はイベントが元々発生した時間です。</td></tr><tr><td>tealium_visitor_id</td><td>72</td><td>文字列</td><td>この値は生成されたUUIDで、AudienceStreamでは大文字と小文字が区別されます。この値は以前は<code>vdata</code>の呼び出しで<code>tealium_vid</code>でした。</td></tr><tr><td>ユーザーエージェント</td><td>2</td><td>文字列</td><td>ユーザーエージェントの文字列</td></tr></tbody></table><h3 id=\"例\">例</h3><p>以下の例は、プリロードされた属性をどのように使用できるかを示しています：</p><ul><li><strong>頻繁な訪問者</strong>のバッジを使用してオーディエンスを作成し、そのオーディエンスにコネクタをアクションして「定期的に訪問していただきありがとうございます」というメールを送信します。</li><li>**使用したオペレーティングシステムの合計（お気に入り）**の属性を使用して、ページ上の特定のダウンロードの配置を変更し、より関連性の高いアプリを最初に表示します。</li><li><strong>直接訪問の合計</strong>と<strong>紹介訪問の合計</strong>を使用して、訪問者がサイトとどのように関わっているかを決定するための直接訪問と紹介訪問の比率を計算します。</li></ul>"
        }  

    , 
        {
            "weight": "30",
            "url": "https://docs.tealium.com/ja/server-side/attributes/enrichments/",
            "title": "エンリッチメントについて",
            "body":"<p>エンリッチメントとは、属性を静的な値から動的な値に変換するためのカスタムロジックの使用を指します。これは新しいデータ値を作成したり、受信データを変更したりするために使用されます。各データタイプには事前に構築されたエンリッチメントが用意されています。例えば、数値属性には数値を増減する機能が用意されています。</p><h2 id=\"リンクされたエンリッチメント\">リンクされたエンリッチメント</h2><p>2つ以上のエンリッチメントが同じ属性に依存している場合、それらは_リンクされたエンリッチメント_となります。以下の例は、訪問の開始と終了に適用されたエンリッチメントを示しています。<code>Visit Start</code>属性のエンリッチメントは<code>Visit End</code>属性を使用し、その逆も同様です。各エンリッチメントが属性によって他方にリンクされているため、それらはリンクされたエンリッチメントと見なされます。</p><figure><a class=\"slb\" href=\"/images/server-side/whiteui-usingenrichments-visitstart-and-visitend-linked-enrichments-combined-screens.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-usingenrichments-visitstart-and-visitend-linked-enrichments-combined-screens.png\"         alt=\"UsingEnrichments_VisitStart and VisitEnd Linked Enrichments_Combined Screens\"         title=\"UsingEnrichments_VisitStart and VisitEnd Linked Enrichments_Combined Screens\"/>    </a></figure>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/boolean/",
            "title": "ブーリアン属性",
            "body":"<p>ブーリアン属性は、条件の真偽値を格納するために使用されます。例えば、訪問がカートにアイテムを追加したかどうか、または特定のサイトのセクションを訪れたかどうかをブーリアンで格納できます。</p><p>ブーリアン属性は次のスコープで利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/attribute-scopes-table-all.png\"><img src=\"https://docs.tealium.com/images/server-side/attribute-scopes-table-all.png\" width=\"400\" height=\"110\"/>    </a></figure><h2 id=\"ブーリアンのエンリッチメント\">ブーリアンのエンリッチメント</h2><h3 id=\"ブーリアンの構成\">ブーリアンの構成</h3><p>このエンリッチメントを使用して、ブーリアン属性を真または偽に構成します。</p><p>この例では、訪問がカートにアイテムを追加したかどうかを「カートに追加したか」という名前のブーリアン属性を使用して判断する方法を示しています。各訪問の開始時に属性を偽に構成し、<code>cart_add</code>イベントが発生するたびに真に構成します。</p><p>これを達成するために2つのエンリッチメントを作成します：</p><pre tabindex=\"0\"><code>構成値：偽いつ：新規訪問</code></pre><pre tabindex=\"0\"><code>構成値：真いつ：任意のイベントルール：tealium_event が &#34;cart_add&#34;と等しい</code></pre><p><strong>属性名:</strong> カートに追加したか</p><ul><li><strong>開始値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメントされた値</strong>: <code>真</code></li><li><strong>結果の値</strong> <code>真</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/arrays/array-of-booleans/",
            "title": "ブール値の配列",
            "body":"<p>ブール値の配列属性は、真偽値のリストを保存します。</p><p>ブール値の配列は次の範囲で利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"         alt=\"ブール値の配列\"         title=\"ブール値の配列\"/>    </a></figure><p class=\"tip\"><i class=\"fa fa-info-circle\"></i>文字列の &ldquo;true&rdquo; と &ldquo;false&rdquo;（大文字/小文字の混在）はそれぞれのブール値に変換されます。それ以外の非ブール値は無視されます。</p><h2 id=\"エンリッチメント\">エンリッチメント</h2><h3 id=\"ブール値の追加\">ブール値の追加</h3><p>このエンリッチメントは配列に値を追加します。追加される属性はブール値、iQ変数、またはオムニチャネル属性のみです。例えば、顧客が最後の訪問で購入したことを表すために、配列にブール値を追加することができます。</p><p><strong>属性名</strong>：<code>did_purchase_on_visit</code></p><ul><li><strong>開始値</strong>：<code>[true]</code></li><li><strong>エンリッチメント</strong>：<code>false</code></li><li><strong>結果の値</strong>：<code>[true, false]</code></li></ul><h3 id=\"ブール値の配列の追加\">ブール値の配列の追加</h3><p>このエンリッチメントは別の配列からすべての値を配列に追加します。追加される属性のタイプはブール値の配列またはiQ変数のみです。</p><p><strong>属性名</strong>：<code>my_booleans</code></p><ul><li><strong>開始値</strong>：<code>[true]</code></li><li><strong>エンリッチメント</strong>：<code>[false, true]</code></li><li><strong>結果の値</strong>：<code>[true, false, true]</code></li></ul><h3 id=\"リセット\">リセット</h3><p>このエンリッチメントはブール値の配列からすべての値を削除します。</p><p><strong>属性名</strong>：<code>did_purchase_on_visit</code></p><ul><li><strong>開始値</strong>：<code>[true, false, true]</code></li><li><strong>結果の値</strong>：<code>[]</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/arrays/array-of-numbers/",
            "title": "数値の配列",
            "body":"<p>数値の配列属性は、訪問、ページビュー、購入イベントなどのブラウジングメトリクスの数値リストを保存します。</p><p>数値は小数または整数として保存されます。あなたのニーズに合ったタイプを選択してください：</p><ul><li><p><strong>小数（デフォルト）</strong></p><ul><li>小数値は0以上の小数桁を持つことができます。</li><li>例：<code>12</code>、<code>12.0</code>、<code>12.345</code></li><li>金額を表す属性に推奨。</li></ul></li><li><p><strong>整数</strong></p><ul><li>保存されるのは整数値のみです。</li><li>例：<code>12</code>、<code>-4</code>、<code>3214</code></li><li>数量、カウンター、スコアを表す数値属性に便利。</li></ul></li></ul><p>数値の配列は次のスコープで利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"         alt=\"数値の配列\"         title=\"数値の配列\"/>    </a></figure><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>数値の文字列表現（<code>0</code>、<code>123</code>、<code>12.95</code>）はその数値に変換されます。その他の非数値は無視されます。</p><h2 id=\"エンリッチメント\">エンリッチメント</h2><h3 id=\"数値の追加\">数値の追加</h3><p>このエンリッチメントは、数値を配列に追加します。追加される属性は、数値、iQ変数、またはオムニチャネル属性のみ可能です。例えば、最後の購入価格を<code>purchase_total_history</code>値配列に追加することができます。</p><p><strong>属性名</strong>：<code>purchase_total_history</code></p><ul><li><strong>開始値</strong>：<code>[12.95]</code></li><li><strong>エンリッチメント</strong>：<code>5.99</code></li><li><strong>結果の値</strong>：<code>[12.95, 5.99]</code></li></ul><h3 id=\"数値の配列の追加\">数値の配列の追加</h3><p>このエンリッチメントは、別の配列からすべての値を配列に追加します。追加される属性タイプは、数値の配列またはiQ変数のみ可能です。例えば、購入した商品の価格の配列をすべての購入商品の価格の配列に追加することができます。</p><p><strong>属性名</strong>：<code>purchased_products_history</code></p><ul><li><strong>開始値</strong>：<code>[24.99, 12.95]</code></li><li><strong>エンリッチメント</strong>：<code>[5.99, 10.00]</code></li><li><strong>結果の値</strong>：<code>[24.99, 12.95, 5.99, 10.00]</code></li></ul><h3 id=\"リセット\">リセット</h3><p>このエンリッチメントは、配列からすべての値を削除します。例えば、最後の購入アイテムを最後の購入の配列から削除することができます。</p><p><strong>属性名</strong>：<code>purchase_total_history</code></p><ul><li><strong>開始値</strong>：<code>[12.95, 5.99]</code></li><li><strong>結果の値</strong>：<code>[]</code></li></ul><h3 id=\"2つの配列の差分を数値の配列に構成\">2つの配列の差分を数値の配列に構成</h3><p>このエンリッチメントは、2つの配列を入力として取り、一方に存在し他方に存在しない値を探し、それらを配列に挿入します。この例では、<code>Gift Card Amounts</code>から<code>Gift Cards Purchased</code>にも存在しない値が結果の配列に追加されます。</p><p><strong>属性名</strong>：<code>gift_card_not_purchased</code></p><ul><li><strong>開始値</strong>：<code>[]</code></li><li><strong>エンリッチメント</strong>：  差分：<code>Gift Card Amounts</code> <code>[5.00, 10.00, 25.00, 50.00, 100.00, 250.00]</code> と <code>Gift Cards Purchased</code> <code>[25.00, 50.00]</code></li><li><strong>結果の値</strong>：<code>[5.00, 10.00, 100.00, 250.00]</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/number/",
            "title": "数値属性",
            "body":"<p>数値属性は、訪問数、ページビュー数、イベント数などのブラウジングメトリクスの数値を保存します。一般的な例としては、ライフタイムバリュー、注文合計取引、最終購入からの日数などがあります。</p><h2 id=\"仕組み\">仕組み</h2><p>数値は小数または整数として保存されます。あなたのニーズに合ったタイプを選択してください：</p><ul><li><strong>小数（デフォルト）</strong><ul><li>小数値はゼロ（0）以上の小数桁を持つことができます。</li><li>例：<code>12</code>、<code>12.0</code>、<code>12.345</code></li><li>小数値はJava Doubleクラスを使用します。詳細については、<a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html\">Class Double</a>を参照してください。</li><li>通貨値を表す属性に推奨されます。</li></ul></li><li><strong>整数</strong><ul><li>整数値のみが保存されます。</li><li>例：<code>12</code>、<code>-4</code>、<code>3214</code></li><li>数量、カウンター、スコアを表す数値属性に便利です。</li></ul></li></ul><p>数値属性は次のスコープで利用可能です：イベント、訪問、訪問者。</p><figure><a class=\"slb\" href=\"/images/server-side/scope-3checks.png\"><img src=\"https://docs.tealium.com/images/server-side/scope-3checks.png\"/>    </a></figure><h3 id=\"サイズ制限\">サイズ制限</h3><p>数値属性のストレージ容量制限はありませんが、これらの属性は依然としてプロファイルの最大サイズに制限されます（暗号化と圧縮後の400 KB）。</p><h2 id=\"数値のエンリッチメント\">数値のエンリッチメント</h2><h3 id=\"数値の増減エンリッチメント\">数値の増減エンリッチメント</h3><p>このエンリッチメントは、正の値（増加）または負の値（減少）で数値を変更します。変更値は別の数値属性または定数値であることができます。</p><p>例えば、訪問者の注文のライフタイムトータルバリュー（LTV）を計算するために、このエンリッチメントを使用して<code>purchase</code>イベントが発生するたびに<code>order_total</code>属性の値で属性を増加させます。</p><p><strong>属性名</strong>：ライフタイムトータルバリュー</p><ul><li><strong>初期値</strong>：<code>121.78</code></li><li><strong>エンリッチメント対象</strong>：  order_total <code>220.00</code></li><li><strong>結果</strong>：<code>341.78</code></li></ul><h3 id=\"比率の設定\">比率の設定</h3><p>2つの数値の商を新しい比率数として設定します。</p><p>例えば、平均カートアイテム数を計算するために、このエンリッチメントを使用して、購入したカートアイテムの合計属性と完了した注文の合計属性の比率を設定します。</p><p><strong>属性名</strong>：平均カートアイテム数</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>：<br>購入したカートアイテムの合計: <code>48.00</code><br>完了した注文の合計: <code>3.00</code></li><li><strong>結果</strong>：<code>16.00</code></li></ul><h3 id=\"積の設定\">積の設定</h3><p>2つの数値の積を新しい数値として設定します。</p><p>例えば、<code>coupon_discount_amount</code>を計算するために、このエンリッチメントを使用して<code>order_subtotal</code>と<code>coupon_discount_percent</code>を掛け合わせます。</p><p><strong>属性名</strong>：<code>coupon_discount_amount</code></p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>：<br>order_subtotal: <code>42.00</code><br>coupon_discount_percent: <code>0.05</code></li><li><strong>結果</strong>：<code>2.10</code></li></ul><h3 id=\"差の設定\">差の設定</h3><p>2つの数値の差を新しい数値として設定します。</p><p><strong>属性名</strong>：<code>order_subtotal</code></p><ul><li><strong>初期値</strong>：<code>42.00 </code></li><li><strong>エンリッチメント対象</strong>：<br>order_subtotal: <code>42.00</code><br>coupon_discount_amount: <code>2.10</code></li><li><strong>結果</strong>：<code>39.90</code></li></ul><h3 id=\"合計の設定\">合計の設定</h3><p>2つの数値の合計に設定します。</p><p>例えば、<code>order_total</code>を<code>order_subtotal</code>と<code>order_tax_amount</code>の合計に設定します。</p><p><strong>属性名</strong>：<code>order_total</code></p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>：<br>order_subtotal: <code>39.90</code><br>order_tax_amount: <code>3.29</code></li><li><strong>結果</strong>：<code>43.19</code></li></ul><h3 id=\"数値の設定\">数値の設定</h3><p>数値を特定の数値に設定します。</p><p>例えば、<code>purchase</code>イベントが発生するたびに、最後の購入金額を<code>order_total</code>の値に設定します。</p><p><strong>属性名</strong>：最後の購入金額</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： order_total:<code>43.19</code></li><li><strong>結果</strong>：<code>43.19</code></li></ul><h3 id=\"2つの日付間の差の設定\">2つの日付間の差の設定</h3><p>2つのイベント間の経過時間を計算します。経過時間は以下のいずれかで表現できます：</p><ul><li>分</li><li>時間</li><li>日</li><li>週</li><li>月</li></ul><p>差は常に正の値として保存されるため、日付は任意の順序で設定できます。</p><p>例えば、最後の購入日と現在の訪問日との間の日数の差として、最後の購入からの日数を計算します。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>日付属性はUnixタイムスタンプとして保存されますが、これらの例では読みやすさのためにフォーマットされた日付を使用しています。</p><p><strong>属性名</strong>：最後の購入からの日数</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>：<br>最後の購入日: <code>&quot;2018/10/30&quot;</code><br>現在の訪問日: <code>&quot;2019/11/01&quot;</code></li><li><strong>結果</strong>：<code>367</code></li></ul><h3 id=\"タイムラインに基づく移動平均の設定\">タイムラインに基づく移動平均の設定</h3><p>移動平均は、時間経過とともに取得された数値の算術平均です。これらの値は、<a href=\"/ja/server-side/attributes/data-types/timeline/\">timeline</a>内のエントリとして収集される数値とtally](/ja/server-side/attributes/data-types/tally/)属性から来ます。タイムラインの有効期限が最終平均にどのエントリを考慮に入れるかを決定します。有効期限がない場合、それは単純な平均解です。</p><p><strong>属性名</strong>：平均注文値</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： <code>[20.00, 30.00, 40.00, 50.00]</code></li><li><strong>結果</strong>： <code>35.00</code></li></ul><h3 id=\"タイムラインに基づく移動合計の設定\">タイムラインに基づく移動合計の設定</h3><p>移動合計は、数値または<a href=\"/ja/server-side/attributes/data-types/tally/\">tally</a>属性の数値値の集計で、これらは<a href=\"/ja/server-side/attributes/data-types/timeline/\">timeline</a>内のエントリとして取得されます。タイムラインの有効期限が集計中にどのエントリを考慮に入れるかを決定します。</p><p><strong>属性名</strong>：合計注文値</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li><li><strong>結果</strong>： <code>150.00</code></li></ul><h3 id=\"タイムラインのエントリ数に数値を設定\">タイムラインのエントリ数に数値を設定</h3><p>数値をタイムラインのエントリ数に設定します。</p><p><strong>属性名</strong>：合計注文数</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li><li><strong>結果</strong>： <code>5.00</code></li></ul><h3 id=\"数値をtally値に設定\">数値をtally値に設定</h3><p>数値をtally内の特定の値に設定します。tally属性とtally内のエントリの名前を指定します。例えば、サイトカテゴリビューのtallyには&quot;Shoes&quot;というエントリがあるかもしれません。</p><p><strong>属性名</strong>：シューズカテゴリビューカウント</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： サイトカテゴリビュー: <code>{&quot;Shoes&quot;: 42}</code></li><li><strong>結果</strong>： <code>42</code></li></ul><h3 id=\"数値をtallyのエントリ数に設定\">数値をtallyのエントリ数に設定</h3><p>属性をtallyのエントリ数に設定します。例えば、サイトカテゴリビューのtallyには3つのエントリがあるかもしれません。</p><p><strong>属性名</strong>：閲覧したカテゴリ数</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>：</li></ul><pre tabindex=\"0\"><code>{    &#34;Shoes&#34;: 42,    &#34;Shirts&#34;: 11,    &#34;Pants&#34;: 8} </code></pre><ul><li><strong>結果</strong>： <code>3.00</code></li></ul><h3 id=\"文字列セットのアイテム数に数値を設定\">文字列セットのアイテム数に数値を設定</h3><p>数値を文字列セットのアイテム数に設定します。例えば、アクティブなブラウザタイプの文字列セットには3つのエントリがあるかもしれません。</p><p><strong>属性名</strong>：アクティブなブラウザタイプの数</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： <code>[&quot;Firefox&quot;, &quot;Safari&quot;, &quot;Chrome&quot;]</code></li><li><strong>結果</strong>： <code>3.00</code></li></ul><h3 id=\"タイムラインに基づくtallyの移動最大値に数値を設定\">タイムラインに基づくtallyの移動最大値に数値を設定</h3><p>数値を、タイムライン内で取得された別の数値の移動最大値に設定します。</p><p><strong>属性名</strong>：最高注文値</p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li><li><strong>結果</strong>： <code>50.00</code></li></ul><h3 id=\"数値の変化に数値を設定\">数値の変化に数値を設定</h3><p>この属性を、最後のイベントからの別の属性との差に設定します。例えば、このエンリッチメントを使用して、前回の注文金額と現在の注文金額の差を取得します。注文値の変化という属性を設定するには、前回の注文から<code>order_subtotal</code>の変化を設定します。</p><p><strong>属性名</strong>：注文値の変化</p><ul><li><strong>初期値</strong>：<code>30.00 </code></li><li><strong>エンリッチメント対象</strong>： order_subtotal: <code>42.00</code></li><li><strong>結果</strong>： <code>12.00</code></li></ul><h3 id=\"日付の変化に数値を設定\">日付の変化に数値を設定</h3><p>この属性を、このイベントと最後のイベントの間の選択された値の変化に設定します。例えば、このエンリッチメントを使用して、購入が行われるたびに最後の購入日の日付属性の月数の変化を取得します。</p><p>日付の変化は以下のいずれかで表現できます：</p><ul><li>分</li><li>時間</li><li>日</li><li>週</li><li>月</li></ul><p><strong>属性名</strong>：最後の購入からの月数</p><ul><li><strong>初期値</strong>：</li><li><strong>エンリッチメント対象</strong>：<br>最後の購入日（最後のイベント）: <code>&quot;10/31/2019&quot;</code><br>最後の購入日（このイベント）: <code>&quot;12/31/2019&quot;</code></li><li><strong>結果</strong>： 2 (月)</li></ul><h3 id=\"配列内のアイテム数に設定\">配列内のアイテム数に設定</h3><p>配列内のアイテム数に設定します。例えば、カート内の商品数を保存するために、このエンリッチメントを使用して<code>cart_product_id</code>配列内のアイテム数を取得します。</p><p><strong>属性名</strong>：<code>num_cart_items</code></p><ul><li><strong>初期値</strong>：&mdash;</li><li><strong>エンリッチメント対象</strong>： product_id: <code>[&quot;prod123&quot;, &quot;prod456&quot;]</code></li><li><strong>結果</strong>： <code>2.00</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/date/",
            "title": "日付属性",
            "body":"<p>日付属性を使用して、最初の購入日、最後のチェックアウト日、最後の訪問日などの重要なタイムスタンプを保存します。</p><p>日付属性は次の範囲で利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/attribute-scopes-table-all.png\"><img src=\"https://docs.tealium.com/images/server-side/attribute-scopes-table-all.png\"         alt=\"attribute-scopes-table-all.png\"         title=\"attribute-scopes-table-all.png\" width=\"400\" height=\"110\"/>    </a></figure><h2 id=\"日付フォーマッター\">日付フォーマッター</h2><p>文字列属性を日付に変換するには、日付フォーマッターを使用します。日付形式パネルから文字列値に一致するタイムスタンプコンポーネントを選択します。例えば、&ldquo;01/31/2020&quot;のような文字列値は、&ldquo;MM/dd/yyyy&quot;の形式を使用して日付に変換できます。</p><p>日付と時間の文字列パターン：</p><pre tabindex=\"0\"><code>G 紀元表示（紀元前、紀元後）y 年（例：12または2012）。yyまたはyyyyを使用します。M 年の中の月。Mの数が形式の長さを決定します（例：MM、MMM、MMMMM）d 月の中の日。dの数が形式の長さを決定します（例：dまたはdd）h 日の中の時間、1-12（AM / PM）（通常はhh）H 日の中の時間、0-23（通常はHH）m 時間の中の分、0-59（通常はmm）s 分の中の秒、0-59（通常はss）S 秒の中のミリ秒、0-999（通常はSSS）a AM / PMマーカーz タイムゾーンZ RFC 822タイムゾーン&#39; テキスト区切りのエスケープ&#39; シングルクォート</code></pre><p>参考（例付き）：<a href=\"https://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html\">SimpleDateFormat Java Class</a></p><h2 id=\"日付のエンリッチメント\">日付のエンリッチメント</h2><h3 id=\"日付の取得\">日付の取得</h3><p>Capture Dateエンリッチメントは、イベント条件の時点での現在のタイムスタンプを属性に構成します。このエンリッチメントは、イベント、訪問、訪問の範囲で利用可能です。</p><p>例えば、最後の購入日を取得するには、購入イベントを識別するルールとこのエンリッチメントを使用します。</p><p><strong>属性名:</strong> 最後の購入日</p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメントされた値</strong>:</li><li><strong>結果の値</strong>: <code>1491233145706</code></li></ul><h3 id=\"日付の構成\">日付の構成</h3><p>Set Dateエンリッチメントは、属性を別の属性の値に構成します。もし他の属性が文字列であれば、<a href=\"#date-formatter\">Date Formatter</a>を使用してそれを日付に変換します。このエンリッチメントは、イベント、訪問、訪問の属性で利用可能です。</p><p><strong>属性名</strong>: 最後の購入日</p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメントされた値</strong>:| <code>1491233145706</code></li><li><strong>結果の値</strong>: <code>1491233145706</code></li></ul><h3 id=\"日付の削除\">日付の削除</h3><p>Remove Dateエンリッチメントは、日付属性の値を消去します。このエンリッチメントは、イベント、訪問、訪問の属性で利用可能です。</p><p><strong>属性名</strong>: 最後の訪問日</p><ul><li><strong>初期値</strong>: <code>1491233145706</code></li><li><strong>結果の値</strong>: <code>&quot;&quot;</code></li></ul><h3 id=\"日付の形式\">日付の形式</h3><p>Format Dateエンリッチメントは、入力値の予想される日付形式に基づいて値を構成します。&ldquo;TiQ変数&quot;もネイティブ属性タイプも存在しない場合に使用されます。</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>このエンリッチメントはイベント属性のみで利用可能です。</p>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/arrays/arrays/",
            "title": "文字列の配列",
            "body":"<h2 id=\"エンリッチメント\">エンリッチメント</h2><p>文字列の配列属性は、テキスト値のリストを保存します。</p><p>文字列の配列は次のスコープで利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"         alt=\"array of strings\"         title=\"array of strings\"/>    </a></figure><h3 id=\"文字列の追加\">文字列の追加</h3><p>このエンリッチメントは、文字列属性の値を配列に追加します。追加される属性は、文字列、iQ変数、またはオムニチャネル属性のみです。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Pants&quot;]</code></li><li><strong>エンリッチメント</strong>: <code>&quot;Shirts&quot;</code></li><li><strong>結果の値</strong>: <code>[&quot;Pants&quot;, &quot;Shirts&quot;]</code></li></ul><h3 id=\"文字列の配列の追加\">文字列の配列の追加</h3><p>このエンリッチメントは、別の配列からすべての値を配列に追加します。追加される属性は、文字列の配列またはiQ変数のみです。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Pants&quot;]</code></li><li><strong>エンリッチメント</strong>: <code>[&quot;Shirts&quot;, &quot;Shoes&quot;]</code></li><li><strong>結果の値</strong>: <code>[&quot;Pants&quot;, &quot;Shirts&quot;, &quot;Shoes&quot;]</code></li></ul><h3 id=\"二つの配列間の差分\">二つの配列間の差分</h3><p>このエンリッチメントは、二つの配列を入力として取り、第一の配列には存在するが第二の配列には存在しないすべての値を含む新しい配列を返します。この例では、<code>Wishlist Products</code>から<code>Purchased Products</code>にも存在しない値が結果の配列に追加されます。</p><p><strong>属性名</strong>: <code> Unpurchased Products</code></p><ul><li><strong>初期値</strong>: <code>[]</code></li><li><strong>エンリッチメント</strong>:<br>差分: Wishlist Products  <code>[&quot;Pants&quot;, &quot;Shirt&quot;, &quot;Shoes&quot;, &quot;Belt&quot;]</code> と Purchased Products <code>[&quot;Pants&quot;, &quot;Shirt&quot;]</code></li><li><strong>結果の値</strong>: <code>[&quot;Shoes&quot;, &quot;Belt&quot;]</code></li></ul><p>この例は、結果の属性値が置き換えられ、追加されず、最初の配列の重複した値が削除されることを示しています。</p><ul><li><strong>初期値</strong>: <code>[7, 8, 9]</code></li><li><strong>エンリッチメント</strong>:  差分: Some Numbers <code>[1, 3, 1, 2, 3]</code> と Some Other Numbers <code>[3]</code></li><li><strong>結果の値</strong>: <code>[1, 1, 2]</code></li></ul><h3 id=\"リセット\">リセット</h3><p>このエンリッチメントは、配列からすべての値を削除します。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Shoes&quot;, &quot;Belt&quot;]</code></li><li><strong>エンリッチメント</strong>:</li><li><strong>結果の値</strong>: <code>[]</code></li></ul><h3 id=\"小文字化\">小文字化</h3><p>このエンリッチメントは、配列内のすべての値を小文字にします。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Shoes&quot;, &quot;BELT&quot;]</code></li><li><strong>エンリッチメント</strong>:</li><li><strong>結果の値</strong>: <code>[&quot;shoes&quot;, &quot;belt&quot;]</code></li></ul><h3 id=\"文字列のセットに構成\">文字列のセットに構成</h3><p>文字列の配列を文字列のセットに構成します。このエンリッチメントは、配列内のすべての値を置き換えます。</p><p><strong>属性名</strong>: <code>Active Browser Types</code></p><ul><li><strong>初期値</strong>: <code>[&quot;IE&quot;]</code></li><li><strong>エンリッチメント</strong>: <code>[&quot;Chrome&quot; &quot;FireFox&quot;, &quot;Opera&quot;]</code></li><li><strong>結果の値</strong>: <code>[&quot;Chrome&quot; &quot;FireFox&quot;, &quot;Opera&quot;]</code></li></ul><h3 id=\"文字列のセットの追加\">文字列のセットの追加</h3><p>文字列のセットを文字列の配列に追加します。このエンリッチメントは、配列内の既存の値を保持するため、結果の値には重複する項目が存在する可能性があります。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Pants&quot;]</code></li><li><strong>エンリッチメント</strong>: <code>[&quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li><li><strong>結果の値</strong>: <code>[&quot;Pants&quot;, &quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li></ul><h3 id=\"配列から文字列の削除\">配列から文字列の削除</h3><p>削除する文字列の最初、最後、またはすべてのインスタンスを指定します。このエンリッチメントは、削除する項目のすべてのインスタンスを配列から削除します。</p><p><strong>属性名</strong>: <code>product_name</code></p><ul><li><strong>初期値</strong>: <code>[&quot;Pants&quot;, &quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li><li><strong>エンリッチメント</strong>: <code>&quot;Pants&quot;</code></li><li><strong>結果の値</strong>: <code>[&quot;Shoes&quot;, &quot;Ties&quot;]</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/ja/server-side/attributes/data-types/string/",
            "title": "文字列属性",
            "body":"<p>例えば、文字列は、名前や郵便番号などの顧客情報、注文IDや配送方法などの注文情報、サイトセクションやサイト言語などのサイト情報に使用されます。</p><p>文字列属性は次のスコープで利用可能です：イベント、訪問、訪問。</p><figure><a class=\"slb\" href=\"/images/server-side/attribute-scopes-table-all.png\"><img src=\"https://docs.tealium.com/images/server-side/attribute-scopes-table-all.png\"         alt=\"attribute-scopes-table-all.png\"         title=\"attribute-scopes-table-all.png\"/>    </a></figure><h2 id=\"サイズ制限\">サイズ制限</h2><p>EventStreamの文字列属性は最大長が1,500文字です。この制限を超えると、文字列は1,500文字に切り捨てられます。</p><p>AudienceStreamの文字列属性の値は最大長が1,000文字です。エンリッチメントにより1,000文字を超える文字列が生成された場合、その値は保存されません。</p><h2 id=\"文字列のエンリッチメント\">文字列のエンリッチメント</h2><p>以下のエンリッチメントが文字列属性に利用可能です。</p><h3 id=\"文字列の構成\">文字列の構成</h3><p>このエンリッチメントは、文字列属性の値を構成します。これは、あなたが提供する定数値または別の文字列属性の値から構成することができます。ソース値は文字列、iQ変数、またはOmnichannel属性のみ可能です。</p><p><strong>属性名</strong>: <code>customer_type</code></p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメント</strong>: <code>&quot;unknown&quot;</code></li><li><strong>結果の値</strong>: <code>&quot;unknown&quot;</code></li></ul><h3 id=\"文字列の分割\">文字列の分割</h3><p>このエンリッチメントでは、分布パーセントに基づいて複数の値を構成することができます。構成する各値にはパーセンテージ構成もあります。複数の値/パーセンテージエントリが存在することができますが、分布は合計で100%でなければなりません。分布はランダムな数値生成に基づいているため、小さなサンプルでは分布が一致しない場合がありますが、より多くの値が割り当てられるにつれて分布比率はより正確になります。ソース値は文字列、iQ変数、またはOmnichannel属性のみ可能です。</p><p>この例では、属性名<code>test_group</code>を使用して、ユーザーを&quot;GroupA&quot;と&quot;GroupB&quot;という2つの等しいグループ（50/50）に分けます。この属性は、各グループに関連する活動を識別するために使用できます。</p><p><strong>属性名</strong>: <code>test_group</code></p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>結果の値</strong>: 文字列の人口の<code>50%</code>に対して文字列の値を<code>&quot;GroupA&quot;</code>に構成<br> 文字列の人口の<code>50%</code>に対して文字列の値を<code>&quot;GroupB&quot;</code>に構成</li></ul><p>参照：<a href=\"https://support.tealiumiq.com/en/support/solutions/articles/36000363487-enrichment-example-split-string\">エンリッチメント例：文字列の分割</a></p><h3 id=\"文字列の削除\">文字列の削除</h3><p>このエンリッチメントは、属性から全ての値を削除します。</p><ul><li><strong>初期値</strong>: <code>&quot;Jane Smith&quot;</code></li><li><strong>結果の値</strong>: <code>&quot;&quot;</code></li></ul><h3 id=\"文字列の小文字化\">文字列の小文字化</h3><p>このエンリッチメントは、文字列属性の現在の値を小文字にします。</p><p><strong>属性名</strong>: <code>email_address</code></p><ul><li><strong>初期値</strong>: <code>&quot;First.Last@Example.com&quot;</code></li><li><strong>結果の値</strong>: <code>&quot;first.last@example.com&quot;</code></li></ul><h3 id=\"属性の結合\">属性の結合</h3><p>このエンリッチメントは、デリミタを使用して複数の値を結合し、単一のテキスト値を形成します。デリミタは1文字以上であることができます。例えば、<code>site_section</code>、<code>page_category</code>、その他のページレベルの属性を組み合わせてページ階層値を作成することができます。</p><p><strong>属性名</strong>: <code>page_path</code></p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメント</strong>:<br>属性1: <code>site_region=&quot;en-us&quot;</code><br>属性2: <code>site_section=&quot;Electronics&quot;</code><br>属性3: <code>category_name=&quot;Tablets&quot;</code><br>デリミタ: <code>&quot;:&quot;</code></li><li><strong>結果の値</strong>: <code>&quot;en-us:Electronics:Tablets&quot;</code></li></ul><h3 id=\"文字列を日付に構成\">文字列を日付に構成</h3><p>このエンリッチメントは、文字列属性の値を日付に変換し、カスタムフォーマットを許可します（<a href=\"/ja/server-side/attributes/data-types/date/\">日付フォーマッターについて詳しく学ぶ</a>）。ソース値は日付、文字列、iQ変数、またはファイルインポート属性であることができます。</p><p><strong>属性名</strong>: <code>last_purchase_date</code></p><ul><li><strong>初期値</strong>: <code>&quot;&quot;</code></li><li><strong>エンリッチメント</strong>: フォーマットが<code>&quot;yyy-MM-dd&quot;</code>の最終ログイン日</li><li><strong>結果の値</strong>: <code>&quot;2019-12-31&quot;</code></li></ul>"
        }  

    ]
}
