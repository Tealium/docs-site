
{
    "kind": "term",
    "name": "iq_tabs_consent_integrations",
    "count": 3,
    "items": [

    
        {
            "weight": "0",
            "url": "https://docs.tealium.com/early-access/consent-integrations/about/",
            "title": "Consent Integrations (Early Access)",
            "body":"<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>The Consent Integration feature is currently in Early Access and is only available by request. If you are interested in trying this feature, contact your account team.</p><p>The new Consent Enforcement Framework is a core feature of Tealium iQ Consent Integration that enables robust and reliable enforcement of consent signals captured outside of Tealium iQ. This feature blocks tracking when customer consent is not given or is ambiguous.</p><p>Tealium iQ Consent Integrations provides the option for both opt-in (GDPR-style) and opt-out (CCPA-style) enforcement patterns for the supported consent management platforms (CMPs). Integrations can be written in the form of templates to support most CMPs or custom solutions.</p><p>The following terms are related to the consent integrations framework:</p><ul><li><p><strong>Purpose</strong> - A specific data use purpose to which your website users can consent (or withhold consent).</p></li><li><p><strong>Purpose Group</strong> - A representation of an enforcement policy in the form of a group of consent purposes to which tags are assigned.</p></li><li><p><strong>Consent Decision</strong> - An array of purposes that have been consented to. Consent Decision is determined with a <code>type</code> attribute and is either <code>implicit</code> or <code>explicit</code>, depending on whether the user has made an active decision (<code>implicit</code>) or not (<code>explicit</code>).</p></li><li><p><strong>Implicit decision</strong> - A decision inferred from a user&rsquo;s behavior. By visiting a site, a user consents to the necessary tags as described in the siteâ€™s privacy policy. A user can object to the sale of their data, but by default this is enabled (there is an implicit &lsquo;it&rsquo;s OK, to share/sell my data&rsquo; decision).</p></li><li><p><strong>Explicit decision</strong> - A clear and precise consent decision by a user about what tracking they consent to.</p></li><li><p><strong>Integration</strong> A set of features and configurations (pre-loaded or custom) that capture a consent decision from a specified CMP. An integration is associated with a purpose group.</p></li><li><p><strong>Enforcement Condition</strong> - Rules that determine when to enforce a consent integration.</p></li><li><p><strong>Enforcement Exemption (coming soon)</strong> - Defines cases where no enforcement is necessary, and no tags are blocked based on consent. Enforcement exemptions differ from the behavior when no consent integration enforcement conditions apply. Unless there&rsquo;s an explicit exemption, or matching consent integration and the appropriate consent decision, no tags are allowed to fire.</p></li></ul><h2 id=\"how-it-works\">How it works</h2><p>Tealium iQ Consent Integrations enables you to integrate with supported non-Tealium consent management platforms. Your CMP prompts end-users for purpose-based consent as needed, and then captures and stores those user consent decisions. When an integration is active, tags must be assigned to purposes within a purpose group before they can be triggered. A purpose must be consented to before tags assigned to that purpose can be triggered.</p><p>Each consent integration instructs the underlying framework how to communicate with a single CMP. Only one integration may be active simultaneously. However, you can use <strong>Enforcement Conditions</strong> to conditionally apply multiple active integrations without conflict, if needed.</p><p>You can set up an integration with a supported CMP in the Tealium iQ dashboard, or create a custom integration by editing the <strong>Custom template</strong>.</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Tealium iQ Consent Integrations has a dependency on the latest utag version 4.49. To enable support in previous versions, edit the <strong>uTag Loader</strong> template and add <code>##UTCM##</code> under the <code>##UTGEN##</code>publish engine flag.</p><h2 id=\"supported-integrations\">Supported integrations</h2><p>The following integrations are available or planned:</p><ul><li><a href=\"https://www.onetrust.com/\">OneTrust</a> (available)</li><li><a href=\"https://usercentrics.com/\">Usercentrics</a> (available)</li><li><a href=\"https://www.didomi.io/\">Didomi</a> (coming soon)</li><li><a href=\"https://www.sourcepoint.com/\">Sourcepoint</a> (planned)</li><li><a href=\"https://www.iubenda.com/en/\">Iubenda</a> (planned)</li><li><a href=\"https://trustarc.com/\">TrustArc</a> (planned)</li><li>Custom - write your own integration for custom tools (available)</li></ul><h2 id=\"manage-integrations\">Manage integrations</h2><p>In the Tealium iQ dashboard, the Consent Integrations screen provides the ability to add and configure consent integrations.</p><h3 id=\"add-an-integration\">Add an integration</h3><p>Follow the steps below to add an integration:</p><ol><li>Go to <strong>iQ Tag Management &gt; Consent Integrations.</strong></li><li>Click <strong>+ Add Integration</strong> to open the integration configuration modals.</li></ol><h4 id=\"step-1-configure-integrations\">Step 1: Configure integrations</h4><ol><li>In the <strong>Configure Integrations</strong> tab, enter a descriptive name for your integration.</li><li>Select a vendor from the <strong>Vendor</strong> list. Depending on your vendor selection, additional fields may be required, usually an identifier for the CMP configuration you want to integrate with.</li><li>Enter a description.</li><li>Click <strong>Next</strong>.</li></ol><h4 id=\"step-2-enforcement-conditions\">Step 2: Enforcement conditions</h4><p>Use the dropdown list to create a new rule, or select an existing rule. This rule determines when to enforce a consent integration.</p><p>To create a new rule:</p><ol><li>Click <strong>+ New Rule</strong>.</li><li>In the Add Rule dialog, add a <strong>Title</strong> for the load rule, and optional <strong>Notes</strong> if needed.</li><li>Use the drop-down lists to select a <strong>Variable</strong> and an <strong>Operator</strong>, then enter a <strong>Value</strong>.</li><li>To add another condition using AND logic, do one of the following:<ol><li>Click <strong>+</strong> next to the default conditional statement.</li><li>To create a copy of a conditional statement using AND logic by clicking the row menu and selecting <strong>Duplicate Row</strong>.<br>The duplicate conditional statement can be edited as needed.</li></ol></li><li>To add another condition using OR logic, do one of the following:<ol><li>Click <strong>+OR</strong>.</li><li>Create a copy of a condition using OR logic by clicking the condition menu and selecting <strong>Duplicate</strong>.  The duplicate condition can be edited to create a new condition.</li></ol></li><li>To remove a conditional statement from a condition, click the row menu and select <strong>Remove Row</strong>.</li><li>Click <strong>Done.</strong></li></ol><h4 id=\"step-3-publish-locations\">Step 3: Publish locations</h4><ol><li>Select the environments where you want this integration&rsquo;s enforcement to apply.</li><li>Click <strong>Next</strong>.</li></ol><h4 id=\"step-4-purpose-group\">Step 4: Purpose group</h4><ol><li>Select a purpose group for your integration from the <strong>Purpose Group</strong> drop down list.If you opted to configure your integration with the default vendor categories in step 4, complete the following steps and continue with step 9:<ol><li>Select <strong>&lt;Vendor&gt; Default</strong> from the list.</li></ol></li><li>If you did not opt to configure your integration with the default vendor categories in step 4:<ol><li>Select <strong>+ New Purpose Group</strong> from the drop down list.</li><li>In the <strong>New Purpose Group</strong> modal, click <strong>Create Purpose Group</strong>. This redirects you to the Purpose Group wizard. Your progress in the Add Integration wizard is saved and you will be redirected back after configuring your purpose group.</li><li>In the <strong>Purpose Group</strong> wizard, complete steps 4 to 13 of the <a href=\"#add-a-purpose-group\">Add a Purpose Group</a> Section.</li><li>In the <strong>Add Integration</strong> wizard, select your purpose group from the <strong>Purpose Group</strong> drop down list.</li></ol></li><li>Click <strong>Save</strong> to create your new Integration.</li></ol><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>If you are using OneTrust default vendor categories for the first time, after creating your integration, follow the steps in <a href=\"#edit-a-purpose-group\">edit purpose group</a> to assign tags to the <strong>Default</strong> purpose group.</p><h2 id=\"manage-purpose-groups\">Manage purpose groups</h2><p>To manage your purpose groups, navigate to <strong>iQ Tag Management &gt; Consent Integrations &gt; Purpose Groups</strong> tab.</p><h3 id=\"add-a-purpose-group\">Add a purpose group</h3><p>Follow the steps below to add a purpose group:</p><ol><li>Click <strong>+ Add Purpose Group</strong> to open the purpose group configuration modals.</li></ol><h4 id=\"step-1-purpose-group\">Step 1: Purpose group</h4><ol><li>Enter a name and description.</li><li>Click <strong>Next</strong>.</li></ol><h4 id=\"step-2-purposes\">Step 2: Purposes</h4><ol><li>Enter purpose name and description. Each purpose name must match the name of a consent category for the vendor you are integrating with.</li><li>You can create multiple purposes in a purpose group. To add more purposes to your purpose group, click <strong>+ Add Purpose</strong></li><li>Click <strong>Next</strong>.</li></ol><h4 id=\"step-3-tealium-iq-purpose\">Step 3: Tealium iQ purpose</h4><ol><li>Select a purpose to map to Tealium iQ from the <strong>Tealium Tag Purpose</strong>. Tealium iQ controls all tag operations and must be mapped to a purpose for any tags to function.</li><li>Click <strong>Next</strong>.</li></ol><h4 id=\"step-4-map-tags\">Step 4: Map tags</h4><p>All tags must be mapped to a purpose before they can be triggered.</p><ol><li>To map your tags to the newly created purpose(s), for each tag, click <strong>Assign/Map</strong> and select the purpose you want to map that tag with from the drop down list.</li><li>To enable or disable tag refire for each tag, toggle the <strong>OFF/ON</strong> button under the <strong>Tag Refire</strong> column. For more information about tag refire, see the Tag refire section.</li><li>Click <strong>Save</strong> to create your new purpose group.</li></ol><h3 id=\"edit-a-purpose-group\">Edit a purpose group</h3><p>Follow the steps below to edit a purpose group:</p><ol><li>Click the options icon beside the Purpose Group you want to edit.</li><li>Click <strong>Edit</strong> to open the purpose group configuration.</li><li>Click the tab for the section you want to edit. To map tags to a new default purpose group, click <strong>Map Tags</strong>.</li><li>Click <strong>Save</strong> to save your changes.</li></ol><h2 id=\"tag-refire\">Tag refire</h2><p>Each tag has a <strong>Tag Refire</strong> switch in the <strong>Map Tags</strong> screen:</p><figure><img src=\"/images/early-access/map-tags.png\"         alt=\"map_tags.png\"         title=\"map_tags.png\" width=\"790\" height=\"417\"/></figure><p>If you enable this option, the tag can be triggered up to twice for each user action (once with the implicit decision and once with the explicit decision). Note that no tags are triggered if the mapped purposes are not consented to.</p><p>Most tags don&rsquo;t need to be triggered again if they have consent in each of these cases. Triggering tags again may result in double tracking in some cases, which should be avoided.</p><p>Customer Data Hub customers (especially EventStream customers) can benefit from refiring the Collect tag and using the <code>purposes_with_consent_unprocessed</code>  attribute for the server-side activation logic to ensure that no server-side activation is refired for the same event. Using the <code>purposes_with_consent_unprocessed</code> attribute allows server-side activations to be triggered as quickly as possible without triggering twice for the same event.</p><h2 id=\"accessing-the-consent-decision-within-tealium-iq\">Accessing the consent decision within Tealium iQ</h2><p>Consent decisions (<code>ConsentDecision</code>) are made available in the <code>b object</code> for each event in the following attributes, which can be used in tags or extensions.</p><ul><li><code>tci.consent_type</code>  - The ConsentDecision&rsquo;s <code>type</code> attribute ( <code>implicit</code> or <code>explicit</code> ).</li><li><code>tci.purposes_with_consent_all</code>  - The full <code>ConsentDecision</code> array, all permitted purposes.</li><li><code>tci.purposes_with_consent_processed</code> - The array of processed consented purposes.</li><li><code>tci.purposes_with_consent_unprocessed</code> - The array of unprocessed consented purposes.</li></ul><h2 id=\"using-the-javascript-console\">Using the JavaScript console</h2><p>When consent integrations are active, you can interact with them in the JavaScript console on pages where utag.js (Tealium iQ) is implemented. This allows you to get the current consent decision which is retrieved from the CMP on every event. The consent decision is never cached by Tealium to ensure it is always up to date.</p><h3 id=\"javascript-console-commands\">JavaScript console commands</h3><p>You can interact with an active consent integration in your website using JavaScript console commands.</p><p>The following command opens the global window-scoped object with the config and helper functions:</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span></span></span></code></pre></div><p>The following command gets the current consent decision:</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">getCurrentConsentDecision</span>()</span></span></code></pre></div><p>Before consent:</p><figure><img src=\"/images/early-access/before-tracking.png\"         alt=\"before_tracking.png\"         title=\"before_tracking.png\"/></figure><p>After consent:</p><figure><img src=\"/images/early-access/after-tracking.png\"         alt=\"after_tracking.png\"         title=\"after_tracking.png\"/></figure><h2 id=\"server-side-attributes---using-collect-with-consent-integrations\">Server-side attributes - using Collect with Consent Integrations</h2><p>Tealium Collect, like all other tags, must be mapped to a consented purpose. However, the <code>refiringAllowed</code> option allows tags to be refired on new decisions. This process indicates that the tag is being used for a variety of server-side purposes, and available server-side filters and logic are used to ensure that the signal is only processed appropriately while allowing it to refire.</p><p>Depending on which server-side tools you use, the Collect tag is triggered with the following event-level attributes for each event:</p><ul><li><code>tci.purposes_with_consent_unprocessed</code> (with refiring)</li><li><code>tci.purposes_with_consent_all</code> (without refiring)</li></ul><h3 id=\"opt-in-model\">Opt-in model</h3><figure><img src=\"https://raw.githubusercontent.com/jaquith/cmp-integrations/main/docs-src/static/tiq-cmp-integration-flow-opt-in.png\"/></figure><p>Tealium iQ will not fire tags or set cookies until a consent decision is received from the CMP. If the expected CMP is not active on the page or Tealium iQ has not been consented, Tealium iQ will not run and no tags will be fired.</p><p>If no consent decision is found when Tealium iQ loads, Tealium iQ consent integration polls until one is found.</p><p>Until a consent decision is received from the CMP, all events are queued to be processed once a decision is found. If no consent decision is received, no events are processed.</p><p>If a consent decision ( <code>implicit</code> or <code>explicit</code> ) is available from the CMP, the following takes place:</p><ul><li>Tealium iQ consent integration first checks if Tealium iQ is allowed to run (since it sets cookies).</li><li>If Tealium iQ is allowed to run, it checks if each tag can run</li><li>If the tags can run, it then triggers the tags according to consent for all queued events.</li></ul><p>If the consent decision is implicit, the events go into a different queue after implicitly consented tags are fired so that they can be reprocessed for newly consented tags when the user makes an explicit decision. The solution searches for an explicit decision until one is found.</p><p>If the consent decision is explicit, all queues are emptied and polling stops. Tags fired on an implicit consent are not re-fired when the explicit consent decision is processed unless tag refire is enabled and there are new consent purposes to process.</p><p>When a user reopens the interactive CMP layer and makes a new explicit consent decision, previous events are not reprocessed with the new consent decision.</p><p>For new events processed after Tealium iQ is first loaded, the new consent decision is retrieved from the CMP as each event is processed by Tealium iQ to ensure that the CMP is treated as a universal source of truth.</p><h3 id=\"opt-out-model\">Opt-out model</h3><figure><img src=\"https://raw.githubusercontent.com/jaquith/cmp-integrations/main/docs-src/static/tiq-cmp-integration-flow-opt-out.png\"/></figure><p>The opt-out model is similar to the Opt-in model, but explicit decision is not polled as it is more restrictive than the default setting (CCPA/CPRA style) in the Opt-out model.</p>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/early-access/consent-integrations/custom-cmp/",
            "title": "Consent Integrations - Custom CMP Integration (Early Access)",
            "body":"<p>To add a new custom integration, you can use the existing integrations and the provided example as a guide. The CMP-specific component of the integration is defined using the <code>window.tealiumCmpIntegration</code> object.</p><p>The <code>window.tealiumCmpIntegration</code> object consists of a name <code>.cmpName</code>, version <code>.cmpIntegrationVersion</code>, and the following functions:</p><h2 id=\"integration-functions\">Integration functions</h2><h3 id=\"determine-operating-mode\">Determine operating mode</h3><h4 id=\"cmpcheckifoptinmodel\"><code>.cmpCheckIfOptInModel</code></h4><p>Determines if the integration should operate on the <strong>opt-in</strong> or <strong>opt-out</strong> model. Returns a boolean.</p><p>Examples:</p><ul><li><strong>OneTrust</strong> - <code>OneTrust.GetDomainData().ConsentModel</code></li><li><strong>UserCentrics</strong> - <code>UC_UI.isConsentRequired()</code></li></ul><h3 id=\"fetch-decision\">Fetch decision</h3><h4 id=\"cmpfetchcurrentconsentdecision\"><code>.cmpFetchCurrentConsentDecision</code></h4><p>Retrieves the current raw version of the consent decision (raw version, from the CMP). The result forms <code>cmpRawOutput</code>.</p><p>Examples:</p><ul><li><strong>OneTrust</strong> -<code>OneTrust.GetDomainData()</code></li><li><strong>Usercentrics</strong> - <code>UC_UI.getServicesBaseInfo()</code></li></ul><h3 id=\"validate-and-standardize-the-decision\">Validate and standardize the decision</h3><h4 id=\"cmpcheckforwellformeddecision\"><code>.cmpCheckForWellFormedDecision</code></h4><p>Verifies if the raw consent decision from<code>cmpFetchCurrentConsentDecision</code> is well-formed and understandable. Returns a boolean.</p><h4 id=\"cmpcheckfortiqconsent\"><code>.cmpCheckForTiqConsent</code></h4><p>Verifies if the raw consent decision includes permission for Tealium iQ to process data, otherwise nothing will run. Returns a boolean.</p><h4 id=\"cmpcheckforexplicitconsentdecision\"><code>.cmpCheckForExplicitConsentDecision</code></h4><p>Verifies if the raw consent decision is <strong>explicit</strong> or <strong>implicit</strong>. Returns a boolean.</p><p>Examples:</p><ul><li><strong>OneTrust</strong> - <code>OneTrust.IsAlertBoxClosed()</code></li><li><strong>Usecentrics</strong> - <code>UC_UI.getServicesBaseInfo()[0].consent.history.at(-1).type</code></li></ul><h4 id=\"cmpconvertresponsetogrouplist\"><code>.cmpConvertResponseToGroupList</code></h4><p>Transforms the raw decision from the CMP into a simple array of the allowed purposes. Returns an array of purposes.</p><p>Example:</p><ul><li><strong>Usercentrics</strong>-</li></ul><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getServicesBaseInfo</span>().<span style=\"color:#a6e22e\">map</span>(<span style=\"color:#a6e22e\">tagConsent</span> =&gt; {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">consent</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">status</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">name</span>;</span></span><span style=\"display:flex;\"><span>	 <span style=\"color:#75715e\">// [&#34;Facebook Pixel&#34;, &#34;Criteo&#34;, &#34;Bing Ads&#34;, ...]</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    }</span></span><span style=\"display:flex;\"><span>});</span></span></code></pre></div><h2 id=\"debugging-custom-integrations\">Debugging custom integrations</h2><p>To see key information about your CMP integration, include this snippet at the bottom of your integration script:</p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> - </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - vendor id:            </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed decision: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit decision:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - consented purposes:   </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()).<span style=\"color:#a6e22e\">sort</span>(),<span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">8</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)</span></span></code></pre></div><p>Pasting the above snippet into your website&rsquo;s JavaScript console lets you see key information about your CMP integration. For example, this output below shows information about an activated CMP integration, OneTrust:</p><p><strong>OneTrust - Opt-in Model</strong></p><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">Checks</span><span style=\"color:#f92672\">:</span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">-</span> <span style=\"color:#a6e22e\">vendor</span> <span style=\"color:#a6e22e\">id</span><span style=\"color:#f92672\">:</span> <span style=\"color:#a6e22e\">fff8df06</span><span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span><span style=\"color:#a6e22e\">dd2</span><span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">491</span><span style=\"color:#a6e22e\">b</span><span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">88</span><span style=\"color:#a6e22e\">f6</span><span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">01</span><span style=\"color:#a6e22e\">cae248cd17</span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">-</span> <span style=\"color:#a6e22e\">well</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">formed</span> <span style=\"color:#a6e22e\">decision</span><span style=\"color:#f92672\">:</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">-</span> <span style=\"color:#a6e22e\">explicit</span> <span style=\"color:#a6e22e\">decision</span><span style=\"color:#f92672\">:</span>    <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#f92672\">-</span> <span style=\"color:#a6e22e\">consented</span> <span style=\"color:#a6e22e\">purposes</span><span style=\"color:#f92672\">:</span>   [</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#e6db74\">&#34;Functional Cookies&#34;</span>,</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#e6db74\">&#34;Performance Cookies&#34;</span>,</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#e6db74\">&#34;Strictly Necessary Cookies&#34;</span>,</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#e6db74\">&#34;Targeting Cookies&#34;</span></span></span><span style=\"display:flex;\"><span>]</span></span></code></pre></div><p>To see your approval decision, paste the code below on <a href=\"http://onetrust.com\">onetrust.com</a>. This simple but effective testing method allows you to quickly iterate and test on multiple sites.</p><div class=\"pv2\"><div class=\"expand ba pa2 b--black-20 pv3\">    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>        <span style=\"font-weight:bold;\">            	    	Expand to view code snippet    	    	</span>    </div>    <div class=\"expand-content pa2\" style=\"display: none;\">        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#75715e\">/**</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"> *  Scope       : Pre Loader</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"> *  Condition   : n/a</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"> *  Description : CMP Integration Element 2/4 - CMP Specific Preloader component</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"> *</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"> *                CMP-specific  Logic for OneTrust</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"> */</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">/**</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  * @module integration-onetrust</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  *</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  * @description The &#39;Pre Loader&#39; CMP-specific component for OneTrust.</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  * @private</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  *</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  * 1.0.1</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  *  - Improve cmpCheckForExplicitConsentDecision - use the interaction count instead of last</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  * interaction label (more reliable)</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  *</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  * 1.0.0</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  *  - Initial version, start versioning</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">  */</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">oneTrust</span> (window) {</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;OneTrust&#39;</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;onetrust-1.0.1&#39;</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">ConsentModel</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">ConsentModel</span>.<span style=\"color:#a6e22e\">Name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;opt-out&#39;</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">OneTrust</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">GetDomainData</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">GetDomainData</span>()</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">OneTrust</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">GetDomainData</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#e6db74\">&#39;&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">id</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">GetDomainData</span>().<span style=\"color:#a6e22e\">cctId</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">id</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">ConsentIntegrationData</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">ConsentIntegrationData</span>.<span style=\"color:#a6e22e\">consentPayload</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">Groups</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// check for any logged interaction - OneTrust seems to only log decisions, not other clicks in the UI</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">ConsentIntegrationData</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">ConsentIntegrationData</span>.<span style=\"color:#a6e22e\">consentPayload</span> <span style=\"color:#f92672\">&amp;&amp;</span></span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">ConsentIntegrationData</span>.<span style=\"color:#a6e22e\">consentPayload</span>.<span style=\"color:#a6e22e\">customPayload</span> <span style=\"color:#f92672\">&amp;&amp;</span></span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">ConsentIntegrationData</span>.<span style=\"color:#a6e22e\">consentPayload</span>.<span style=\"color:#a6e22e\">customPayload</span>.<span style=\"color:#a6e22e\">Interaction</span> <span style=\"color:#f92672\">&gt;</span> <span style=\"color:#ae81ff\">0</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// convert from array of objects to object for easier lookups</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">decisionByPurpose</span> <span style=\"color:#f92672\">=</span> {}</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">ConsentIntegrationData</span> <span style=\"color:#f92672\">&amp;&amp;</span></span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">ConsentIntegrationData</span>.<span style=\"color:#a6e22e\">consentPayload</span> <span style=\"color:#f92672\">&amp;&amp;</span></span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">ConsentIntegrationData</span>.<span style=\"color:#a6e22e\">consentPayload</span>.<span style=\"color:#a6e22e\">purposes</span></span></span><span style=\"display:flex;\"><span>    ) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">ConsentIntegrationData</span>.<span style=\"color:#a6e22e\">consentPayload</span>.<span style=\"color:#a6e22e\">purposes</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">obj</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">decisionByPurpose</span>[<span style=\"color:#a6e22e\">obj</span>.<span style=\"color:#a6e22e\">Id</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">obj</span>.<span style=\"color:#a6e22e\">TransactionType</span></span></span><span style=\"display:flex;\"><span>      })</span></span><span style=\"display:flex;\"><span>    } <span style=\"color:#66d9ef\">else</span> {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> []</span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">decisionByGroupName</span> <span style=\"color:#f92672\">=</span> {}</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">Groups</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">groupInfo</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#a6e22e\">decisionByGroupName</span>[<span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">GroupName</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">decisionByPurpose</span>[<span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">PurposeId</span>] <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;ERROR-MISSING&#39;</span></span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">vendorArray</span> <span style=\"color:#f92672\">=</span> []</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">groupNames</span> <span style=\"color:#f92672\">=</span> Object.<span style=\"color:#a6e22e\">keys</span>(<span style=\"color:#a6e22e\">decisionByGroupName</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">groupNames</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">groupName</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">decisionByGroupName</span>[<span style=\"color:#a6e22e\">groupName</span>] <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;NO_CHOICE&#39;</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#a6e22e\">decisionByGroupName</span>[<span style=\"color:#a6e22e\">groupName</span>] <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;CONFIRMED&#39;</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">vendorArray</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#a6e22e\">groupName</span>)</span></span><span style=\"display:flex;\"><span>      }</span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">vendorArray</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span></span></span><span style=\"display:flex;\"><span>})(window)</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> - </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - vendor id:            </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed decision: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit decision:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - consented purposes:   </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()).<span style=\"color:#a6e22e\">sort</span>(),<span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">8</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)</span></span></code></pre></div>    </div></div></div><p class=\"tip\"><i class=\"fa fa-info-circle\"></i>Paste the above code snippet again after each new decision to verify it.</p>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/early-access/consent-integrations/supported-vendors/",
            "title": "Consent Integrations - Supported Vendor Configuration (Early Access)",
            "body":"<h2 id=\"how-it-works\">How it works</h2><p>You can access relevant vendor-specific information from the user interface of the respective partner CMP or the web page. To keep this documentation reliable and user-friendly, this section does not discuss the steps to retrieve your Vendor ID and Purposes in the user interface of each partner CMP.</p><p>To retrieve the relevant information from the web page, follow these general steps:</p><ol><li>Visit your website, where the CMP is implemented.</li><li>Accept all tracking.</li><li>Open the Developer Tools JavaScript console.</li><li>Paste the CMP-specific code from the CMP code snippets below into the console.</li><li>Enter the displayed <strong>Vendor ID</strong> and <strong>Purposes</strong> into your Consent Integration.</li></ol><h2 id=\"cmp-code-snippets\">CMP code snippets</h2><h3 id=\"onetrust\">OneTrust</h3><p>You can test this snippet on <a href=\"https://onetrust.com\">https://onetrust.com</a>.</p><div class=\"pv2\"><div class=\"expand ba pa2 b--black-20 pv3\">    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>        <span style=\"font-weight:bold;\">            	    	Expand to view code snippet    	    	</span>    </div>    <div class=\"expand-content pa2\" style=\"display: none;\">        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">oneTrust</span> (window) {</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// Allows simple adjustment of the name/id behavior</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">useNamesInsteadOfKeys</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// Allows the safety check of the expected Vendor ID to be circumvented to simplify setup at the cost of increased risk</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">disableVendorIdValidation</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;OneTrust&#39;</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;onetrust-2.0.0&#39;</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">decision</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">ConsentModel</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">decision</span>.<span style=\"color:#a6e22e\">ConsentModel</span>.<span style=\"color:#a6e22e\">Name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;opt-out&#39;</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">OneTrust</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">GetDomainData</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">GetDomainData</span>()</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">dataLayer</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Newer versions of OneTrust, starting at the end of 2022 no longer have cctId defined</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#75715e\">// This HTML attribute is the way OneTrust can tell</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">scrapeOneTrustVendorId</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">function</span> () {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allScripts</span> <span style=\"color:#f92672\">=</span> document.<span style=\"color:#a6e22e\">getElementsByTagName</span>(<span style=\"color:#e6db74\">&#39;script&#39;</span>)</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">re</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">/\/otSDKStub\.js(\?.*)*$/</span></span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">&lt;</span> <span style=\"color:#a6e22e\">allScripts</span>.<span style=\"color:#a6e22e\">length</span>; <span style=\"color:#a6e22e\">i</span><span style=\"color:#f92672\">++</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">isOneTrustScript</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">re</span>.<span style=\"color:#a6e22e\">test</span>(<span style=\"color:#a6e22e\">allScripts</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">src</span>) <span style=\"color:#75715e\">// can be null</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>        <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">isOneTrustScript</span>) {</span></span><span style=\"display:flex;\"><span>          <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">fullVendorId</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">allScripts</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">getAttribute</span>(<span style=\"color:#e6db74\">&#39;data-domain-script&#39;</span>) <span style=\"color:#75715e\">// parse it from the script</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>          <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">fullVendorId</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;-test&#39;</span>)[<span style=\"color:#ae81ff\">0</span>]</span></span><span style=\"display:flex;\"><span>        }</span></span><span style=\"display:flex;\"><span>      }</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#e6db74\">&#39;error-not-found&#39;</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">disableVendorIdValidation</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#75715e\">// Returns the Vendor ID expected be active</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>      <span style=\"color:#66d9ef\">return</span> (window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span> <span style=\"color:#f92672\">&amp;&amp;</span> Object.<span style=\"color:#a6e22e\">keys</span>(window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">map</span>)[<span style=\"color:#ae81ff\">0</span>]) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;(Vendor ID check disabled)&#39;</span> <span style=\"color:#75715e\">// Return whatever is mapped to short-circuit the check as a test</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">scrapeOneTrustVendorId</span>()</span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Treats options we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;object&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">Groups</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Treats decisions we don&#39;t understand as implicit</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>()) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">OneTrust</span>.<span style=\"color:#a6e22e\">IsAlertBoxClosed</span>()</span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Converts from array of objects to object for easier lookups</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">decisionString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">-</span> <span style=\"color:#ae81ff\">1</span>; <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">&gt;=</span> <span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">i</span><span style=\"color:#f92672\">--</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> ([<span style=\"color:#e6db74\">&#39;OneTrustGroupsUpdated&#39;</span>, <span style=\"color:#e6db74\">&#39;OneTrustLoaded&#39;</span>].<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">event</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">decisionString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">dataLayer</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">OnetrustActiveGroups</span></span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">break</span></span></span><span style=\"display:flex;\"><span>      }</span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposeIds</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">decisionString</span>.<span style=\"color:#a6e22e\">split</span>(<span style=\"color:#e6db74\">&#39;,&#39;</span>).<span style=\"color:#a6e22e\">filter</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">group</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">group</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;&#39;</span></span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span> <span style=\"color:#f92672\">=</span> {}</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">Groups</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">groupInfo</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">permittedPurposeIds</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">OptanonGroupId</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">permittedPurposesWithNames</span>[<span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">OptanonGroupId</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">groupInfo</span>.<span style=\"color:#a6e22e\">GroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;ERROR-MISSING&#39;</span></span></span><span style=\"display:flex;\"><span>      }</span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span> <span style=\"color:#75715e\">// keys are IDs, values are names</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">permittedPurposesWithNames</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">keysOrValues</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">useNamesInsteadOfKeys</span> <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;values&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;keys&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> Object[<span style=\"color:#a6e22e\">keysOrValues</span>](<span style=\"color:#a6e22e\">permittedPurposesWithNames</span>) <span style=\"color:#75715e\">// keys are IDs, values are names</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Treats decisions we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">allowedGroups</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">allowedGroups</span>.<span style=\"color:#a6e22e\">indexOf</span>(<span style=\"color:#a6e22e\">tiqGroupName</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#f92672\">-</span><span style=\"color:#ae81ff\">1</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span>})(window)</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// Debugging / development output - re-paste the integration on your test pages each time you make a change to your consent state</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`CMP Found: </span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> (</span><span style=\"color:#e6db74\">${</span>window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model)</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  Checks:</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    - id:          </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    - well-formed: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    - explicit:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    - group list:  </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()))<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">    - name lookup: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToLookupObject</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()), <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">6</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  `</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)</span></span></code></pre></div>    </div></div></div><h3 id=\"usercentrics\">Usercentrics</h3><p>You can test this snippet on <a href=\"https://usercentrics.com\">https://usercentrics.com</a>.</p><div class=\"pv2\"><div class=\"expand ba pa2 b--black-20 pv3\">    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>        <span style=\"font-weight:bold;\">            	    	Expand to view code snippet    	    	</span>    </div>    <div class=\"expand-content pa2\" style=\"display: none;\">        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span>;(<span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">usercentricsBrowserSdkV2</span> (window) {</span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// CMP specific functionality and labels</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span> <span style=\"color:#f92672\">||</span> {}</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;Usercentrics Browser SDK&#39;</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpIntegrationVersion</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#39;usercentrics-1.0.3&#39;</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span>window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getServicesBaseInfo</span> <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;function&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">=</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getServicesBaseInfo</span>()</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">cmpRawOutput</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> (window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getSettingsCore</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">getSettingsCore</span>().<span style=\"color:#a6e22e\">id</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#75715e\">// only support opt-In model for Usercentrics for now, can be added if needed</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> () {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> window.<span style=\"color:#a6e22e\">UC_UI</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">isConsentRequired</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;function&#39;</span> <span style=\"color:#f92672\">&amp;&amp;</span> window.<span style=\"color:#a6e22e\">UC_UI</span>.<span style=\"color:#a6e22e\">isConsentRequired</span>() <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the first entry as a proxy for all</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#66d9ef\">typeof</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;string&#39;</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the first entry as a proxy for all</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">consentHistory</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>] <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>[<span style=\"color:#ae81ff\">0</span>].<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">history</span>) <span style=\"color:#f92672\">||</span> []</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">lastHistoryEntryType</span> <span style=\"color:#f92672\">=</span> (<span style=\"color:#a6e22e\">consentHistory</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">consentHistory</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">consentHistory</span>[<span style=\"color:#a6e22e\">consentHistory</span>.<span style=\"color:#a6e22e\">length</span> <span style=\"color:#f92672\">-</span> <span style=\"color:#ae81ff\">1</span>].<span style=\"color:#a6e22e\">type</span>) <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">lastHistoryEntryType</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#e6db74\">&#39;explicit&#39;</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>, <span style=\"color:#a6e22e\">tiqGroupName</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">foundOptIn</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// treat things we don&#39;t understand as an opt-out</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">toString</span>.<span style=\"color:#a6e22e\">call</span>(<span style=\"color:#a6e22e\">cmpRawOutput</span>) <span style=\"color:#f92672\">!==</span> <span style=\"color:#e6db74\">&#39;[object Array]&#39;</span>) <span style=\"color:#66d9ef\">return</span> <span style=\"color:#66d9ef\">false</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// use the mapping if found, with a fallback (Usercentrics default value) if not specified in the mapping</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">tiqGroupName</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#39;tiq-group-name-missing&#39;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// check vendors if there&#39;s an object, look for at least one</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">tagInfo</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> ((<span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">status</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>) <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagInfo</span>.<span style=\"color:#a6e22e\">name</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#a6e22e\">tiqGroupName</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">foundOptIn</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">true</span></span></span><span style=\"display:flex;\"><span>      }</span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">foundOptIn</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  <span style=\"color:#66d9ef\">function</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> (<span style=\"color:#a6e22e\">cmpRawOutput</span>) {</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">vendorArray</span> <span style=\"color:#f92672\">=</span> []</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">cmpRawOutput</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">cmpRawOutput</span>.<span style=\"color:#a6e22e\">forEach</span>(<span style=\"color:#66d9ef\">function</span> (<span style=\"color:#a6e22e\">tagConsent</span>) {</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">consent</span> <span style=\"color:#f92672\">&amp;&amp;</span> <span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">consent</span>.<span style=\"color:#a6e22e\">status</span> <span style=\"color:#f92672\">===</span> <span style=\"color:#66d9ef\">true</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">vendorArray</span>.<span style=\"color:#a6e22e\">push</span>(<span style=\"color:#a6e22e\">tagConsent</span>.<span style=\"color:#a6e22e\">name</span>)</span></span><span style=\"display:flex;\"><span>      }</span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">vendorArray</span></span></span><span style=\"display:flex;\"><span>  }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpCheckForTiqConsent</span></span></span><span style=\"display:flex;\"><span>  window.<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span></span></span><span style=\"display:flex;\"><span>})(window)</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> - </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - vendor id:            </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed decision: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit decision:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - consented purposes:   </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()).<span style=\"color:#a6e22e\">sort</span>(),<span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">8</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)</span></span></code></pre></div>    </div></div></div><h3 id=\"custom-cmp\">Custom CMP</h3><div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#f92672\">&lt;&lt;</span> <span style=\"color:#a6e22e\">INPUT</span> <span style=\"color:#a6e22e\">YOUR</span> <span style=\"color:#a6e22e\">CUSTOM</span> <span style=\"color:#a6e22e\">TEMPLATE</span> <span style=\"color:#a6e22e\">HERE</span> <span style=\"color:#f92672\">&gt;&gt;</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span><span style=\"color:#66d9ef\">var</span> <span style=\"color:#a6e22e\">outputString</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpName</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> - </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckIfOptInModel</span>() <span style=\"color:#f92672\">?</span> <span style=\"color:#e6db74\">&#39;Opt-in&#39;</span> <span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#39;Opt-out&#39;</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> Model</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">Checks:</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - vendor id:            </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentLookupKey</span>()<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - well-formed decision: </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForWellFormedDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - explicit decision:    </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpCheckForExplicitConsentDecision</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>())<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">  - consented purposes:   </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpConvertResponseToGroupList</span>(<span style=\"color:#a6e22e\">tealiumCmpIntegration</span>.<span style=\"color:#a6e22e\">cmpFetchCurrentConsentDecision</span>()).<span style=\"color:#a6e22e\">sort</span>(),<span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">8</span>)<span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"></span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#a6e22e\">outputString</span>)</span></span></code></pre></div>"
        }  

    ]
}
