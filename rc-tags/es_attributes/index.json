
{
    "kind": "term",
    "name": "es_attributes",
    "count": 9,
    "items": [

    
        {
            "weight": "10",
            "url": "https://docs.tealium.com/server-side/attributes/about/",
            "title": "About attributes",
            "body":"<p>Attributes are the foundation of your implementation and are used to define your customers&rsquo; behaviors and interactions with your brand. Attributes define the properties of a visitor, a visitor&rsquo;s session, and events collected. Common examples of attributes include Email Address, Member ID, Product Category, Date of Last Visit, and Active Browser.</p><h2 id=\"scope\">Scope</h2><p>Scope refers to how long an attribute persists in real-time.</p><p>The following table lists supported scopes:</p><table><thead><tr><th>Scope</th><th>Description / Examples</th><th>Uses</th></tr></thead><tbody><tr><td>Event</td><td>Attributes associated with individual events that describe the page, content, and real-time actions being taken by a customer. Examples: Page Name, Product Price, Event Name, Order Total, etc.</td><td><strong>Attribute Sources</strong><br> Event attributes are sourced from the following values:<br> <ul><li><strong>Universal Variable</strong> <a href=\"/platforms/javascript/universal-data-object/\">Universal Data Object</a></li><li><strong>Javascript Page Variable</strong> Global JavaScript variable (browser)</li><li><strong>HTML Metadata</strong> Metadata tag (browser)</li><li><strong>First-Party Cookie</strong> Browser cookie</li><li><strong>Querystring Parameter</strong> Current page&rsquo;s URL querystring (browser)</li></ul></td></tr><tr><td>Visit</td><td>Attributes about a particular visit (or session). Data persists for the length of the visit. Examples: Visit Duration, Browser Used, Referring URL, and Carted Products.</td><td>These attributes represent visitor activity from the current session on a single device. Visit attributes persist for the length of the session. See <a href=\"#session-length\">Session Length</a> for more detail.</td></tr><tr><td>Visitor</td><td>Attributes about a particular visitor across all visits. Examples: Email Address, Member ID, Lifetime Order Total, and Category Views.</td><td>This data follows a visitor from session to session and across different devices. Visitor data persists even after the current visit ends.</td></tr><tr><td>Omnichannel</td><td>For importing offline data via the Omnichannel service. This scope does not require a data type.</td><td><a href=\"/server-side/data-sources/importing-offline-data-omnichannel/\">Omnichannel</a> attributes are defined when you define your file imports.</td></tr></tbody></table><h3 id=\"session-length\">Session Length</h3><p>In AudienceStream, session length is set based on the platform of the events:</p><ul><li><strong>Web</strong> - 30 min (10 min if one event and no follow-up events)</li><li><strong>Mobile App</strong> - 2 min</li><li><strong>Omnichannel</strong> - 1 min</li><li><strong>File Import</strong>- 1 min</li><li><strong>Collect API</strong>- 30 min</li></ul><p>The platform is based on the reserved attribute named <code>platform</code> according to the following values:</p><ul><li><strong>Web</strong> - <code>platform</code> is set to <code>web</code> or not set.</li><li><strong>Mobile</strong> - platform is set one of <code>android|ios|win|bb10|native_mobile</code>.</li></ul><p>To customize the session length set the data layer variable <code>_dc_ttl_</code> to a value in milliseconds on the first event of a session. The session length cannot be changed once the session has commenced. The following example sets the session length to 30 minutes (180000 milliseconds): <code>&quot;_dc_ttl_&quot;: 1800000</code></p><p class=\"note\"><i class=\"fas fa-info-circle\"></i>To set a custom session length, you must omit the <code>platform</code> variable. If you set a custom value for <code>platform</code>, the session length defaults to 30 minutes.</p><h2 id=\"data-types\">Data Types</h2><p>Attributes come in a variety of types, from a basic number to the more powerful tally and badge. The data type determines the format in which the attribute value is stored.</p><p>The following data types are supported:</p><table><thead><tr><th>Data Type</th><th>Description</th></tr></thead><tbody><tr><td><a href=\"/server-side/attributes/data-types/number/\">Number</a></td><td>Stores numerical values such as order total, lifetime event count, or number of days since last visit.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/string/\">String</a></td><td>Stores text values such as first/last name, address, favorite product, and page name.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/boolean/\">Boolean</a></td><td>Stores only one of two values: &rsquo;true&rsquo; and &lsquo;false&rsquo;. <a href=\"/server-side/attributes/data-types/boolean/\">Boolean</a> can be used for indicating the status of a visitor action or visit.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/arrays/array-of-numbers/\">Array of Numbers</a></td><td>Stores multiple numeric values as an <a href=\"/server-side/attributes/data-types/arrays/array-of-numbers/\">array</a>. The array may contain unique or duplicate numeric values.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/arrays/arrays/\">Array of Strings</a></td><td>Stores multiple string values as an array. The array may contain unique or duplicate string values.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/arrays/array-of-booleans/\">Array of Booleans</a></td><td>Stores multiple Boolean values as an array. The array may contain unique or duplicate Boolean values.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/tally/\">Tally</a></td><td>Stores one or more key-value pairs.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/set-of-strings/\">Set of Strings</a></td><td>Stores a collection of unique string values as a set.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/date/\">Date</a></td><td>Stores the date of an event, a visitor event, or particular visit.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/funnel/\">Funnel</a></td><td>Tracks the status of every step in a multi-step event, such as payment funnel and registration.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/timeline/\">Timeline</a></td><td>Records all occurrences of a visitor action within a time range.</td></tr><tr><td><a href=\"/server-side/attributes/data-types/badge/\">Badge</a></td><td>Assigns a visual mark or symbol to visitors who meet certain criteria or browsing behavior.</td></tr><tr><td><a href=\"/server-side/visitor-stitching/visitor-id-attribute/\">Visitor ID</a></td><td>Stores visitor&rsquo;s unique traits as their secondary identifier.</td></tr></tbody></table><h3 id=\"scope-and-data-type-matrix\">Scope and Data Type Matrix</h3><p>This matrix shows which data types are available for each scope.</p><table><thead><tr><th>Data Type</th><th>Visitor Scope</th><th>Visit Scope</th><th>Event Scope</th></tr></thead><tbody><tr><td>Number</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>String</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>Boolean</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>Array of Numbers</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>Array of Strings</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>Array of Booleans</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>Tally</td><td>✔</td><td>✔</td><td></td></tr><tr><td>Set of Strings</td><td>✔</td><td>✔</td><td></td></tr><tr><td>Date</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td>Funnel</td><td>✔</td><td>✔</td><td></td></tr><tr><td>Timeline</td><td>✔</td><td>✔</td><td></td></tr><tr><td>Badge</td><td>✔</td><td></td><td></td></tr><tr><td>Visitor ID</td><td>✔</td><td></td><td></td></tr></tbody></table><h2 id=\"storage-capacity-limits\">Storage Capacity Limits</h2><p>Most attributes for EventStream and AudienceStream have storage capacity limits and specific behaviors for when those limits are exceeded. Note that the entire visitor profile has a limit of 400 K compressed.</p><p>*No limits, but the attribute is still limited by the maximum size of the profile after encryption and compression.</p><h3 id=\"event-attributes\">Event Attributes</h3><table><thead><tr><th>Attribute</th><th>Storage Capacity Limits</th><th>Exceeded Limit Behavior</th></tr></thead><tbody><tr><td><strong>Strings</strong></td><td>1,500 characters</td><td>Strings are truncated to 1,500 characters if they are longer than the limit.</td></tr><tr><td><strong>Arrays of any type</strong></td><td>No limits*</td><td></td></tr><tr><td><strong>Dates</strong></td><td>Min: &ldquo;-292275055-05-16T16:47:04.192Z&rdquo; Max: &ldquo;+292278994-08-17T07:12:55.807Z&rdquo;</td><td></td></tr><tr><td><strong>Numbers</strong></td><td>Represented with java.lang.Number, which has dynamic precision.</td><td></td></tr></tbody></table><h3 id=\"visitvisitor-attributes\">Visit/Visitor Attributes</h3><table><thead><tr><th>Attribute</th><th>Storage Capacity Limits</th><th>Exceeded Limit Behavior</th></tr></thead><tbody><tr><td><strong>Strings</strong></td><td>1,000 characters</td><td>If an enrichment results in a string larger than 1,000 characters, the value is not saved.</td></tr><tr><td><strong>Timelines</strong></td><td>100 entries</td><td>Earliest entries are discarded when the limit is reached (First-In, First-Out). For example, if a timeline contains 100 entries, and a new entry is added, the first entry is deleted.</td></tr><tr><td><strong>Tallies</strong></td><td>No limits*</td><td></td></tr><tr><td><strong>Arrays of any type</strong></td><td>No limits*</td><td></td></tr><tr><td><strong>Set of Strings</strong></td><td>No limits*</td><td></td></tr><tr><td><strong>Dates</strong></td><td>Min: &ldquo;-292275055-05-16T16:47:04.192Z&rdquo; Max: &ldquo;+292278994-08-17T07:12:55.807Z&rdquo;</td><td></td></tr><tr><td><strong>Numbers</strong></td><td>No limits*</td><td></td></tr><tr><td><strong>Funnel</strong></td><td>No limits*</td><td></td></tr></tbody></table><h2 id=\"imported-attributes-from-iq-tag-management\">Imported Attributes from iQ Tag Management</h2><p>An imported attribute is a variable that was originally created in the corresponding Tealium iQ profile. Tealium iQ variables are available to the sever-side profile of the same name, where they are imported as event-scoped attributes. When you modify a variable in Tealium iQ (and publish), the changes are instantly applied to the matching attribute in EventStream.</p><p class=\"note\"><i class=\"fas fa-info-circle\"></i>Imported attributes are not editable. You must use Tealium iQ to manage them.</p><p>If variables from Tealium iQ do not appear in EventStream, verify that the Tealium iQ variables are in the Tealium iQ profile that corresponds to the sever-side profile and that the variables have been saved and published. Make sure you refresh the EventStream page in the browser after publishing variable changes. If you need assistance with making Tealium iQ variables available in the server-side, contact Tealium Support.</p><h3 id=\"restricted-data\">Restricted Data</h3><p>This property is used to identify attributes that contain data that should not be sent out of the system, such as third-party <a href=\"/server-side/connectors/about/\">Connectors</a> or <a href=\"/server-side/data-storage/about/\">DataAccess</a>. Learn more about <a href=\"/server-side/attributes/restricted-data/\">Restricted Data</a>.</p><h3 id=\"rule\">Rule</h3><p>A rule provides additional logic for the purpose of triggering an enrichment.</p><ul><li><p>To apply a predefined rule, make a selection from the drop-down list and click <strong>Add Rule</strong>.<br><p class=\"tip\"><i class=\"fas fa-star\"></i>Creating a new rule through the enrichments dialog box automatically applies it to the enrichment.</p></p></li><li><p>To apply a new rule, click <strong>Create Rule</strong>.<br><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/7969iFC8E701A5E13ED34/image-size/large?v=v2&amp;amp;px=999\"          alt=\"Using Attributes_Rules.png\"         title=\"Using Attributes_Rules.png\"/></p></li></ul>"
        }  

    , 
        {
            "weight": "30",
            "url": "https://docs.tealium.com/server-side/attributes/enrichments/",
            "title": "About enrichments",
            "body":"<p>An enrichment is the use of custom logic to transform an attribute from a static value to a dynamic one. This is used to create new data values or modify incoming data. Pre-built enrichments are available for each data type. For example, the ability to increment or decrement a numeric value is available to number attributes.</p><h2 id=\"linked-enrichments\">Linked enrichments</h2><p>When two or more enrichments have a dependency on the same attribute, they become <em>linked enrichments</em>. The following example shows the enrichments applied to the start and end of a visit. The enrichment in the <code>Visit Start</code> attribute uses the <code>Visit End</code> attribute and vice-versa. Because each enrichment is linked to the other by an attribute, they are considered linked enrichments.</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/8001i41EB67FB9A7DB5F4/image-size/large?v=v2&amp;amp;px=999\"         alt=\"UsingEnrichments_VisitStart and VisitEnd Linked Enrichments_Combined Screens\"         title=\"UsingEnrichments_VisitStart and VisitEnd Linked Enrichments_Combined Screens\"/></figure>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/arrays/array-of-booleans/",
            "title": "Array of booleans",
            "body":"<p>The array of booleans attribute stores a list of true/false values.</p><p>The array of booleans is available in the following scopes: Event, Visit, Visitor.</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/9250iBF3483222A5E949A/image-size/medium?v=v2&amp;amp;px=400\"         alt=\"array of booleans\"         title=\"array of booleans\"/></figure><p class=\"tip\"><i class=\"fas fa-star\"></i>The strings &ldquo;true&rdquo; and &ldquo;false&rdquo; (any mix of upper/lowercase) are converted to their respective boolean values. All other non-boolean values are ignored.</p><h2 id=\"enrichments\">Enrichments</h2><h3 id=\"add-a-boolean\">Add a boolean</h3><p>This enrichment adds a value to the array. The added attribute can only be a boolean, iQ variable, or omnichannel attribute. For example, you may wish to add a boolean to the array to represent that the customer purchased on their last visit.</p><p><strong>Attribute Name</strong>: <code>did_purchase_on_visit</code></p><ul><li><strong>Starting value</strong>: <code>[true]</code></li><li><strong>Enriched With</strong>: <code>false</code></li><li><strong>Resulting value</strong>: <code>[true, false]</code></li></ul><h3 id=\"add-an-array-of-booleans\">Add an array of booleans</h3><p>This enrichment adds all the values from another array to the array. The added attribute type can only be an array of booleans or iQ variables.</p><p><strong>Attribute Name</strong>: <code>my_booleans</code></p><ul><li><strong>Starting value</strong>: <code>[true]</code></li><li><strong>Enriched With</strong>: <code>[false, true]</code></li><li><strong>Resulting value</strong>: <code>[true, false, true]</code></li></ul><h3 id=\"reset\">Reset</h3><p>This enrichment removes all values from the boolean array.</p><p><strong>Attribute Name</strong>:<code>did_purchase_on_visit</code></p><ul><li><strong>Starting value</strong>: <code>[true, false, true]</code></li><li><strong>Resulting value</strong>: <code>[]</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/arrays/array-of-numbers/",
            "title": "Array of numbers",
            "body":"<p>The array of numbers attribute stores a list of numeric values for browsing metrics such as visits, page views, and purchase events.</p><p>Numeric values are stored as decimals or integers. Choose the type that matches your needs:</p><ul><li><p><strong>Decimal (default)</strong>* Decimal values can have zero or more decimal digits.* Example: <strong>12</strong>,<strong>12.0</strong>, <strong>12.345</strong>* Recommended for attributes that represent monetary values.</p></li><li><p><strong>Integer</strong><br>* Only whole number values are stored.* Example: <strong>12</strong>, -<strong>4</strong>,<strong>3214</strong>* Useful for number attributes that represent quantities, counters, or scores.</p></li></ul><p>The array of numbers is available in the following scopes: Event, Visit, Visitor.</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/9249i7AFD6D64ACF776F2/image-size/medium?v=v2&amp;amp;px=400\"         alt=\"array of numbers\"         title=\"array of numbers\"/></figure><p class=\"note\"><i class=\"fas fa-info-circle\"></i>String representations of numbers (&ldquo;0&rdquo;, &ldquo;123&rdquo;, &ldquo;12.95&rdquo;) are converted to their numeric values. All other non-numeric values are ignored.</p><h2 id=\"enrichments\">Enrichments</h2><h3 id=\"add-a-number\">Add a number</h3><p>This enrichment adds a number value to the array. The added attribute can only be a number, iQ variable, or omnichannel attribute. For example, you may wish to add the last purchase value to the rolling <code>purchase_total_history</code> value array.</p><p><strong>Attribute Name</strong>: <code>purchase_total_history</code></p><ul><li><strong>Starting value</strong>: <code>[12.95]</code></li><li><strong>Enriched With</strong>: <code>5.99</code></li><li><strong>Resulting value</strong>: <code>[12.95, 5.99]</code></li></ul><h3 id=\"add-an-array-of-numbers\">Add an array of numbers</h3><p>This enrichment adds all the values from another array to the array. The added attribute type can only be an array of numbers or iQ variable. For example, you may wish to add the array of purchased product prices to an array of all purchased product prices.</p><p><strong>Attribute Name</strong>: <code>purchased_products_history</code></p><ul><li><strong>Starting value</strong>: <code>[24.99, 12.95]</code></li><li><strong>Enriched With</strong>: <code>[5.99, 10.00]</code></li><li><strong>Resulting value</strong>: <code>[24.99, 12.95, 5.99, 10.00]</code></li></ul><h3 id=\"reset\">Reset</h3><p>This enrichment removes all values from the array. For example, you may wish to remove the last purchase items from the array of last purchases.</p><p><strong>Attribute Name</strong>: <code>purchase_total_history</code></p><ul><li><strong>Starting value</strong>: <code>[12.95, 5.99]</code></li><li><strong>Resulting value</strong>: <code>[]</code></li></ul><h3 id=\"set-array-of-numbers-to-be-the-difference-of-two-arrays\">Set array of numbers to be the difference of two arrays</h3><p>This enrichment takes two arrays as input, looks for values that occur in one and not the other, and inserts them into the array. In this example, values from <code>Gift Card Amounts</code> that do not also occur in <code>Gift Cards Purchased</code> are added to the resulting array.</p><p><strong>Attribute Name</strong>: <code>gift_card_not_purchased</code></p><ul><li><strong>Starting value</strong>: <code>[]</code></li><li><strong>Enriched With</strong>:  Difference between: <code>Gift Card Amounts</code> <code>[5.00, 10.00, 25.00, 50.00, 100.00, 250.00]</code> and <code>Gift Cards Purchased</code> <code>[25.00, 50.00]</code></li><li><strong>Resulting value</strong>: <code>[5.00, 10.00, 100.00, 250.00]</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/arrays/arrays/",
            "title": "Array of strings",
            "body":"<h2 id=\"enrichments\">Enrichments</h2><p>The array of strings attribute stores a list of text values.</p><p>The array of strings is available in the following scopes: Event, Visit, Visitor.</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/9249i7AFD6D64ACF776F2/image-size/medium?v=v2&amp;amp;px=400\"         alt=\"array of strings\"         title=\"array of strings\"/></figure><h3 id=\"add-a-string\">Add a string</h3><p>This enrichment adds the value of a string attribute to the array. The added attribute can only be a string, iQ variable, or omnichannel attribute.</p><p><strong>Attribute Name</strong>: <code>product_name</code></p><ul><li><strong>Starting value</strong>: <code>[&quot;Pants&quot;]</code></li><li><strong>Enriched With</strong>: <code>&quot;Shirts&quot;</code></li><li><strong>Resulting value</strong>: <code>[&quot;Pants&quot;, &quot;Shirts&quot;]</code></li></ul><h3 id=\"add-an-array-of-strings\">Add an array of strings</h3><p>This enrichment adds all the values from another array to the array. The added attribute can only be an array of strings or an iQ variable.</p><p><strong>Attribute Name</strong>: <code>product_name</code></p><ul><li><strong>Starting value</strong>: <code>[&quot;Pants&quot;]</code></li><li><strong>Enriched With</strong>: <code>[&quot;Shirts&quot;, &quot;Shoes&quot;]</code></li><li><strong>Resulting value</strong>: <code>[&quot;Pants&quot;, &quot;Shirts&quot;, &quot;Shoes&quot;]</code></li></ul><h3 id=\"difference-between-two-arrays\">Difference between two arrays</h3><p>This enrichment takes two arrays as input, and returns a new array containing all values found in the first array but not the second. In this example, values from <code>Wishlist Products</code> that do not also occur in <code>Purchased Products</code> are added to the resulting array.</p><p><strong>Attribute Name</strong>: <code> Unpurchased Products</code></p><ul><li><strong>Starting value</strong>: <code>[]</code></li><li><strong>Enriched With</strong>:<br>Difference between: Wishlist Products  <code>[&quot;Pants&quot;, &quot;Shirt&quot;, &quot;Shoes&quot;, &quot;Belt&quot;]</code> and Purchased Products <code>[&quot;Pants&quot;, &quot;Shirt&quot;]</code></li><li><strong>Resulting value</strong>: <code>[&quot;Shoes&quot;, &quot;Belt&quot;]</code></li></ul><p>This example shows that the resulting attribute value is replaced, not appended to and that repeated values in the first array are removed.</p><ul><li><strong>Starting value</strong>: <code>[7, 8, 9]</code></li><li><strong>Enriched With</strong>:  Difference between: Some Numbers <code>[1, 3, 1, 2, 3]</code> and Some Other Numbers <code>[3]</code></li><li><strong>Resulting value</strong>: <code>[1, 1, 2]</code></li></ul><h3 id=\"reset\">Reset</h3><p>This enrichment removes all values from the array.</p><p><strong>Attribute Name</strong>: <code>product_name</code></p><ul><li><strong>Starting value</strong>: <code>[&quot;Shoes&quot;, &quot;Belt&quot;]</code></li><li><strong>Enriched With</strong>:</li><li><strong>Resulting value</strong>: <code>[]</code></li></ul><h3 id=\"lowercase\">Lowercase</h3><p>This enrichment lowercases every value in the array.</p><p><strong>Attribute Name</strong>: <code>product_name</code></p><ul><li><strong>Starting value</strong>: <code>[&quot;Shoes&quot;, &quot;BELT&quot;]</code></li><li><strong>Enriched With</strong>:</li><li><strong>Resulting value</strong>: <code>[&quot;shoes&quot;, &quot;belt&quot;]</code></li></ul><h3 id=\"set-to-set-of-strings\">Set to set of strings</h3><p>Sets an array of strings to a set of strings. This enrichment replaces all values in the array.</p><p><strong>Attribute Name</strong>: <code>Active Browser Types</code></p><ul><li><strong>Starting value</strong>: <code>[&quot;IE&quot;]</code></li><li><strong>Enriched With</strong>: <code>[&quot;Chrome&quot; &quot;FireFox&quot;, &quot;Opera&quot;]</code></li><li><strong>Resulting value</strong>: <code>[&quot;Chrome&quot; &quot;FireFox&quot;, &quot;Opera&quot;]</code></li></ul><h3 id=\"add-a-set-of-strings\">Add a set of strings</h3><p>Adds a set of strings to a string array. This enrichment preserves the existing values in the array, therefore there can be duplicate items in the resulting value.</p><p><strong>Attribute Name</strong>: <code>product_name</code></p><ul><li><strong>Starting value</strong>: <code>[&quot;Pants&quot;]</code></li><li><strong>Enriched With</strong>: <code>[&quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li><li><strong>Resulting value</strong>: <code>[&quot;Pants&quot;, &quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li></ul><h3 id=\"remove-a-string-from-the-array\">Remove a string from the array</h3><p>Specify a first, last, or all instances of a string to remove. This enrichment removes from an array every instance of the item selected for removal.</p><p><strong>Attribute Name</strong>: <code>product_name</code></p><ul><li><strong>Starting value</strong>: <code>[&quot;Pants&quot;, &quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li><li><strong>Enriched With</strong>: <code>&quot;Pants&quot;</code></li><li><strong>Resulting value</strong>: <code>[&quot;Shoes&quot;, &quot;Ties&quot;]</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/boolean/",
            "title": "Boolean Attribute",
            "body":"<p>A boolean attribute is used to store the true or false value of a condition. For example, a boolean can store whether or not a visitor had added items to their cart or visited a specific section of site.</p><p>The boolean attribute is available in the following scopes: Event, Visit, Visitor.</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/9227i335E7C0E9AF913E5/image-dimensions/400x110?v=v2\" width=\"400\" height=\"110\"/></figure><h2 id=\"boolean-enrichments\">Boolean enrichments</h2><h3 id=\"set-boolean\">Set boolean</h3><p>Use this enrichment to set the boolean attribute to true or false.</p><p>This example shows how to know if a visitor has added an item to his/her cart using a boolean attribute named &ldquo;Did Add to Cart&rdquo;. Initialize the attribute by settting it to false at the beginning of each visit, then set it to true whenever the <code>cart_add</code> event occurs.</p><p>Create two enrichments to achieve this:</p><pre tabindex=\"0\"><code>Set to: falseWHEN: New Visit</code></pre><pre tabindex=\"0\"><code>Set to: trueWHEN: Any eventRule: tealium_event equals &#34;cart_add&#34;</code></pre><p><strong>Attribute Name:</strong> Did Add to Cart</p><ul><li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li><li><strong>Enriched With</strong>: <code>true</code></li><li><strong>Resulting Value</strong> <code>true</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/date/",
            "title": "Date Attribute",
            "body":"<p>Use the date attribute to store important timestamps such as First Purchase Date, Last Checkout Date, or Last Visit date.</p><p>The date attribute is available for the following scopes: Event, Visit and Visitor.</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/9227i335E7C0E9AF913E5/image-dimensions/400x110?v=v2\"         alt=\"attribute-scopes-table-all.png\"         title=\"attribute-scopes-table-all.png\" width=\"400\" height=\"110\"/></figure><h2 id=\"date-formatter\">Date formatter</h2><p>To convert a string attribute to a date, use the date formatter. Select the timestamp components from the date format panel that match the string values. For example, a string value such as &ldquo;01/31/2020&rdquo; can be converted to a date using a format of &ldquo;MM/dd/yyyy&rdquo;.</p><p>Date and time string patterns:</p><pre tabindex=\"0\"><code>G Era designator (before christ, after christ)y Year (e.g. 12 or 2012). Use either yy or yyyy.M Month in year. Number of M&#39;s determine length of format (e.g. MM, MMM or MMMMM)d Day in month. Number of d&#39;s determine length of format (e.g. d or dd)h Hour of day, 1-12 (AM / PM) (normally hh)H Hour of day, 0-23 (normally HH)m Minute in hour, 0-59 (normally mm)s Second in minute, 0-59 (normally ss)S Millisecond in second, 0-999 (normally SSS)a AM / PM markerz Time ZoneZ RFC 822 Time Zone&#39; Escape for text delimiter&#39; Single quote</code></pre><p>Reference (with examples): <a href=\"https://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html\">SimpleDateFormat Java Class</a></p><h2 id=\"date-enrichments\">Date enrichments</h2><h3 id=\"capture-date\">Capture date</h3><p>The Capture Date enrichment sets the attribute to the current timestamp at the time of an event condition. This enrichment is available for scopes: event, visit and visitor.</p><p>For example, to capture the Last Purchase Date, use this enrichment with a rule that identifies a purchase event.</p><p><strong>Attribute Name:</strong> Last Purchase Date</p><ul><li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li><li><strong>Enriched With</strong>:</li><li><strong>Resulting Value</strong>: <code>1491233145706</code></li></ul><h3 id=\"set-date\">Set date</h3><p>The Set Date enrichment sets the attribute to the value of another attribute. If the other attribute is a string, use the <a href=\"#date-formatter\">Date Formatter</a> to convert it to a date. This enrichment is available for attributes: event, visit and visitor.</p><p><strong>Attribute Name</strong>: Last Purchase Date</p><ul><li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li><li><strong>Enriched With</strong>:| <code>1491233145706</code></li><li><strong>Resulting Value</strong>: <code>1491233145706</code></li></ul><h3 id=\"remove-date\">Remove date</h3><p>The Remove Date enrichment erases the value of a date attribute. This enrichment is available for attributes: event, visit and visitor.</p><p><strong>Attribute Name</strong>: Last Visit Date</p><ul><li><strong>Starting Value</strong>: <code>1491233145706</code></li><li><strong>Resulting Value</strong>: <code>&quot;&quot;</code></li></ul><h3 id=\"format-date\">Format date</h3><p>The Format Date enrichment sets the value based on an expected date format of incoming values. It is used when neither a &ldquo;TiQ Variable&rdquo; nor native attribute type exists.</p><p class=\"note\"><i class=\"fas fa-info-circle\"></i>This enrichment is only available for event attributes.</p>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/number/",
            "title": "Number Attribute",
            "body":"<p>The number attribute stores a numeric value for browsing metrics such as visits, page views, and events. Common examples include Lifetime Value, Order Total Transaction, or Days Since Last Purchase.</p><h2 id=\"how-it-works\">How it works</h2><p>Numeric values are stored as decimals or integers. Choose the type that matches your needs:</p><ul><li><p><strong>Decimal (default)</strong></p><ul><li>Decimal values can have zero (0) or more decimal digits.</li><li>Example: <code>12</code>, <code>12.0</code>, <code>12.345</code></li><li>Recommended for attributes that represent monetary values.</li></ul></li><li><p><strong>Integer</strong></p><ul><li>Only whole number values are stored.</li><li>Example: <code>12</code>, <code>-4</code>, <code>3214</code></li><li>Useful for number attributes that represent quantities, counters, or scores.</li></ul></li></ul><p>The number attribute is available in the following scopes: Event, Visit, Visitor.</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/9228i0393683347DA6B17/image-size/medium?v=v2&amp;amp;px=400\"/></figure><p>There are no storage capacity limits for number attributes, but these attributes are still limited by the maximum size of the profile after encryption and compression.</p><h2 id=\"number-enrichments\">Number enrichments</h2><h3 id=\"increment-or-decrement-number-enrichment\">Increment or decrement number enrichment</h3><p>This enrichment modifies a number with a positive value (increment) or a negative value (decrement). The modifying value can be a separate number attribute or a constant value.</p><p>For example, to calculate the Lifetime Total Value (LTV) of a visitor&rsquo;s orders use this enrichment to increment the attribute with the value of the <code>order_total</code> attribute each time the <code>purchase</code> event occurs.</p><p><strong>Attribute Name</strong>: Lifetime Total Value</p><ul><li><strong>Initial</strong>: <code>121.78</code></li><li><strong>Enriched With</strong>:  order_total <code>220.00</code></li><li><strong>Result</strong>: <code>341.78</code></li></ul><h3 id=\"set-ratio\">Set ratio</h3><p>Set the quotient of two numbers as a new ratio number.</p><p>For example, to calculate the Average Cart Items Per Order use this enrichment to set the ratio of the Total Cart Items Purchased attribute to the Total Orders Completed attribute.</p><p><strong>Attribute Name</strong>: Average Cart Items Per Order</p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>:<br>Total Cart Items Purchased: <code>48.00</code><br>Total Orders Completed: <code>3.00</code></li><li><strong>Result</strong>: <code>16.00</code></li></ul><h3 id=\"set-product\">Set product</h3><p>Set the product of two numbers as a new number.</p><p>For example, to calculate the <code>coupon_discount_amount</code>, use this enrichment to multiply the <code>order_subtotal</code> by the <code>coupon_discount_percent</code>.</p><p><strong>Attribute Name</strong>: <code>coupon_discount_amount</code></p><ul><li><strong>Initial</strong>:&mdash;</li><li><strong>Enriched With</strong>:<br>order_subtotal: <code>42.00</code><br>coupon_discount_percent: <code>0.05</code></li><li><strong>Result</strong>: <code>2.10</code></li></ul><h3 id=\"set-difference\">Set difference</h3><p>Set the difference of two numbers as a new number.</p><p><strong>Attribute Name</strong>: <code>order_subtotal</code></p><ul><li><strong>Initial</strong>: <code>42.00 </code></li><li><strong>Enriched With</strong>:<br>order_subtotal: <code>42.00</code><br>coupon_discount_amount: <code>2.10</code></li><li><strong>Result</strong>: <code>39.90</code></li></ul><h3 id=\"set-sum\">Set sum</h3><p>Set to the sum of two numbers.</p><p>For example, set <code>order_total</code> to the sum of <code>order_subtotal</code> and <code>order_tax_amount</code>.</p><p><strong>Attribute Name</strong>: <code>order_total</code></p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>:<br>order_subtotal: <code>39.90</code><br>order_tax_amount: <code>3.29</code></li><li><strong>Result</strong>: <code>43.19</code></li></ul><h3 id=\"set-number\">Set number</h3><p>Set the number to a specific number.</p><p>For example, set Last Purchase Amount to the value of <code>order_total</code> whenever the <code>purchase</code> event occurs.</p><p><strong>Attribute Name</strong>: Last Purchase Amount</p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>: order_total:<code>43.19</code></li><li><strong>Result</strong>: <code>43.19</code></li></ul><h3 id=\"set-difference-between-two-dates\">Set difference between two dates</h3><p>Calculates the elapsed time between two events. Elapsed time can be expressed as one of the following:</p><ul><li>Minutes</li><li>Hours</li><li>Days</li><li>Weeks</li><li>Months</li></ul><p>The difference is always stored as a positive value, so the dates can be set in any order.</p><p>For example, to calculate Days Since Last Purchase as the difference in days between Last Purchase Date and Current Visit Date.</p><p class=\"note\"><i class=\"fas fa-info-circle\"></i>While date attributes are stored as Unix timestamps, these examples use formatted dates for readability.</p><p><strong>Attribute Name</strong>: Days Since Last Purchase</p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>:<br>Last Purchase Date: <code>&quot;2018/10/30&quot;</code><br>Current Visit Date: <code>&quot;2019/11/01&quot;</code></li><li><strong>Result</strong>: <code>367</code></li></ul><h3 id=\"set-rolling-average-based-on-timeline\">Set rolling average based on timeline</h3><p>The rolling average is the arithmetic mean of numerical values captured over time. These values come from number and tally](/server-side/attributes/data-types/tally/) attributes that are collected as entries in a <a href=\"/server-side/attributes/data-types/timeline/\">timeline</a>. The timeline&rsquo;s expiration determines which entries can be factored into the final average. If there is not an expiration date, it is a simple average solution.</p><p><strong>Attribute Name</strong>: Average Order Value</p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>: <code>[20.00, 30.00, 40.00, 50.00]</code></li><li><strong>Result</strong>: <code>35.00</code></li></ul><h3 id=\"set-rolling-sum-based-on-timeline\">Set rolling sum based on timeline</h3><p>A rolling sum is the aggregate of numerical values in a number or <a href=\"/server-side/attributes/data-types/tally/\">tally</a> attribute that are captured as entries in a <a href=\"/server-side/attributes/data-types/timeline/\">timeline</a>. The timeline&rsquo;s expiration determines which entries can be factored in during the aggregation.</p><p><strong>Attribute Name</strong>: Total Order Value</p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>: <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li><li><strong>Result</strong>: <code>150.00</code></li></ul><h3 id=\"set-number-to-the-number-of-entries-in-timeline\">Set number to the number of entries in timeline</h3><p>Set the number to the number of entries in a timeline.</p><p><strong>Attribute Name</strong>: Total Order Count</p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>: <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li><li><strong>Result</strong>: <code>5.00</code></li></ul><h3 id=\"set-number-to-tally-value\">Set number to tally value</h3><p>Set the number to a specific value within the tally. Specify the tally attribute and the name of the entry in the tally. For example, a tally for Site Category Views might have an entry for &ldquo;Shoes&rdquo;.</p><p><strong>Attribute Name</strong>: Shoe Category View Count</p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>: Site Category Views: <code>{&quot;Shoes&quot;: 42}</code></li><li><strong>Result</strong>: <code>42</code></li></ul><h3 id=\"set-number-to-the-count-of-items-in-tally\">Set number to the count of items in tally</h3><p>Set the attribute to the number of entries in a tally. For example, a tally for Site Category Views might have three entries in it.</p><p><strong>Attribute Name</strong>: Number of Categories Viewed</p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>:</li></ul><pre tabindex=\"0\"><code>{    &#34;Shoes&#34;: 42,    &#34;Shirts&#34;: 11,    &#34;Pants&#34;: 8} </code></pre><ul><li><strong>Result</strong>: <code>3.00</code></li></ul><h3 id=\"set-number-to-the-count-of-items-in-set-of-strings\">Set number to the count of items in set of strings</h3><p>Set the number to the count of items in a set of strings. For example, a set of strings Active Browser Types might have 3 entries.</p><p><strong>Attribute Name</strong>: Number of Active Browser Types</p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>: <code>[&quot;Firefox&quot;, &quot;Safari&quot;, &quot;Chrome&quot;]</code></li><li><strong>Result</strong>: <code>3.00</code></li></ul><h3 id=\"set-number-to-tallys-rolling-max-based-on-a-timeline\">Set number to tally&rsquo;s rolling max based on a timeline</h3><p>Set the number to the rolling maximum of another number in a tally captured within a timeline.</p><p><strong>Attribute Name</strong>: Highest Order Value</p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>: <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li><li><strong>Result</strong>: <code>50.00</code></li></ul><h3 id=\"set-number-to-change-in-number\">Set number to change in number</h3><p>Set this attribute to the difference between it and another attribute since the last event. For example, use this enrichment to capture the difference between a previous order amount and the current order amount. To set an attribute named Change in Order Value, set it to the change in <code>order_subtotal</code> since the previous order.</p><p><strong>Attribute Name</strong>: Change in Order Value</p><ul><li><strong>Initial</strong>: <code>30.00 </code></li><li><strong>Enriched With</strong>: order_subtotal: <code>42.00</code></li><li><strong>Result</strong>: <code>12.00</code></li></ul><h3 id=\"set-number-to-change-in-date\">Set number to change in date</h3><p>Set this attribute to the change in value of the selected value between this event and the last event. For example, use this enrichment to capture the change in months of the Last Purchase Date date attribute each time a purchase occurs.</p><p>The change in date can be expressed as one of the following:</p><ul><li>Minutes</li><li>Hours</li><li>Days</li><li>Weeks</li><li>Months</li></ul><p><strong>Attribute Name</strong>: Months Since Last Purchase</p><ul><li><strong>Initial</strong>:</li><li><strong>Enriched With</strong>:<br>Last Purchase Date (last event): <code>&quot;10/31/2019&quot;</code><br>Last Purchase Date (this event): <code>&quot;12/31/2019&quot;</code></li><li><strong>Result</strong>: 2 (months)</li></ul><h3 id=\"set-to-the-number-of-items-in-an-array\">Set to the number of items in an array</h3><p>Set to the number of items in an array. For example, to store the number of products in the cart, use this enrichment to capture the number of items in the <code>cart_product_id</code> array.</p><p><strong>Attribute Name</strong>: <code>num_cart_items</code></p><ul><li><strong>Initial</strong>: &mdash;</li><li><strong>Enriched With</strong>: product_id: <code>[&quot;prod123&quot;, &quot;prod456&quot;]</code></li><li><strong>Result</strong>: <code>2.00</code></li></ul>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/string/",
            "title": "String Attribute",
            "body":"<p>For example, strings are used for customer information such as First Name and Postal Code, order information such as Order ID and Shipping Method, or site information such as Site Section or Site Language.</p><p>The string attribute is available in the following scopes: Event, Visit, Visitor.</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/9227i335E7C0E9AF913E5/image-size/medium?v=v2&amp;amp;px=400\"         alt=\"attribute-scopes-table-all.png\"         title=\"attribute-scopes-table-all.png\"/></figure><h2 id=\"size-limits\">Size limits</h2><p>EventStream string attributes have a maximum length of 1,500 characters. Strings are truncated to 1,500 characters if they exceed this limit.</p><p>AudienceStream string attributes values have a maximum length of 1,000 characters. If an enrichment results in a string larger than 1,000 characters, the value is not saved.</p><h2 id=\"string-enrichments\">String enrichments</h2><p>The following enrichments are available to string attributes.</p><h3 id=\"set-string\">Set string</h3><p>This enrichment sets the value of a string attribute, either from a constant value you provide or from the value of another string attribute. The source values can only be a string, iQ variable, or Omnichannel attribute.</p><p><strong>Attribute Name</strong>: <code>customer_type</code></p><ul><li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li><li><strong>Enriched With</strong>: <code>&quot;unknown&quot;</code></li><li><strong>Resulting Value</strong>: <code>&quot;unknown&quot;</code></li></ul><h3 id=\"split-string\">Split string</h3><p>This enrichment allows you to set multiple values based on a distribution percentage. Each value you set also has a percentage setting. There can be multiple value/percentage entries, but the distribution must total 100%. The distribution is based on a random number generator, so smaller samples might not match the distribution, but as more values are assigned the distribution ratio will become more accurate. The source values can only be a string, iQ variable, or Omnichannel attribute.</p><p>In this example an attribute named <code>test_group</code> is used to segment users into two equal groups (50/50), one named &ldquo;GroupA&rdquo; and the other &ldquo;GroupB&rdquo;. This attribute can then be used to identify activity associated with each group.</p><p><strong>Attribute Name</strong>: <code>test_group</code></p><ul><li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li><li><strong>Resulting Value</strong>: Set string&rsquo;s value to <code>&quot;GroupA&quot;</code> for <code>50%</code> of string population<br> Set string&rsquo;s value to <code>&quot;GroupB&quot;</code> for <code>50%</code> of string populartion</li></ul><p>See also: <a href=\"https://community.tealiumiq.com/t5/Universal-Data-Hub/Enrichment-Example-Split-String/ta-p/11882\">Enrichment Example: Split String</a></p><h3 id=\"remove-string\">Remove string</h3><p>This enrichment removes the entire value from the attribute.</p><ul><li><strong>Starting Value</strong>: <code>&quot;Jane Smith&quot;</code></li><li><strong>Resulting Value</strong>: <code>&quot;&quot;</code></li></ul><h3 id=\"lowercase-string\">Lowercase string</h3><p>This enrichment will lowercase the current value of the string attribute.</p><p><strong>Attribute Name</strong>: <code>email_address</code></p><ul><li><strong>Starting Value</strong>: <code>&quot;First.Last@Example.com&quot;</code></li><li><strong>Resulting Value</strong>: <code>&quot;first.last@example.com&quot;</code></li></ul><h3 id=\"join-attributes\">Join attributes</h3><p>This enrichment joins multiple values with a delimiter to form a single text value. The delimiter can be one or more characters. For example, you could create a page hierarchy value by combining <code>site_section</code>, <code>page_category</code>, and other page level attributes.</p><p><strong>Attribute Name</strong>: <code>page_path</code></p><ul><li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li><li><strong>Enriched With</strong>:<br>Attribute 1: <code>site_region=&quot;en-us&quot;</code><br>Attribute 2: <code>site_section=&quot;Electronics&quot;</code><br>Attribute 3: <code>category_name=&quot;Tablets&quot;</code><br>Delimiter: <code>&quot;:&quot;</code></li><li><strong>Resulting Value</strong>: <code>&quot;en-us:Electronics:Tablets&quot;</code></li></ul><h3 id=\"set-string-to-date\">Set string to date</h3><p>This enrichment converts the value of a string attribute to a date and allows for custom formatting (<a href=\"/server-side/attributes/data-types/date/\">learn more about the date formatter</a>). The source values can be a date, string, iQ variable, or file import attribute.</p><p><strong>Attribute Name</strong>: <code>last_purchase_date</code></p><ul><li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li><li><strong>Enriched With</strong>: Last Login Date with format <code>&quot;yyy-MM-dd&quot;</code></li><li><strong>Resulting Value</strong>: <code>&quot;2019-12-31&quot;</code></li></ul>"
        }  

    ]
}
