
{
    "kind": "term",
    "name": "as_attributes",
    "count": 17,
    "items": [

    
        {
            "weight": "10",
            "url": "https://docs.tealium.com/server-side/attributes/about/",
            "title": "About attributes",
            "body": "<p>Attributes are the foundation of your implementation and are used to define your customers&rsquo; behaviors and interactions with your brand. Attributes define the properties of a visitor, a visitor&rsquo;s session, and events collected. Common examples of attributes include Email Address, Member ID, Product Category, Date of Last Visit, and Active Browser.</p>\n<p>Each profile can contain a maximum of 500 visitor and visit attributes. You can see your current attribute total on the <strong>Visit/Visitor Attributes</strong> screen:</p>\n<figure><a class=\"slb\" href=\"/images/server-side/attributes/count-of-attributes.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/count-of-attributes.png\"\n         alt=\"Location of the count of attributes\"\n         title=\"Location of the count of attributes\"/>\n    </a>\n</figure>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>If you need more than 500 attributes in a profile, contact your Customer Success Manager.</p>\n<h2 id=\"scope\">Scope</h2>\n<p>Scope refers to how long an attribute persists in real-time.</p>\n<p>The following table lists supported scopes:</p>\n<table>\n<thead>\n<tr>\n<th>Scope</th>\n<th>Description / Examples</th>\n<th>Uses</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Event</td>\n<td>Attributes associated with individual events that describe the page, content, and real-time actions being taken by a customer. Examples: Page Name, Product Price, Event Name, Order Total, etc.</td>\n<td><strong>Attribute Sources</strong><br> Event attributes are sourced from the following values:<br> <ul><li><strong>Universal Variable</strong> <a href=\"/platforms/javascript/universal-data-object/\">Universal Data Object</a></li><li><strong>Javascript Page Variable</strong> Global JavaScript variable (browser)</li><li><strong>HTML Metadata</strong> Metadata tag (browser)</li><li><strong>First-Party Cookie</strong> Browser cookie</li><li><strong>Querystring Parameter</strong> Current page&rsquo;s URL querystring (browser)</li></ul></td>\n</tr>\n<tr>\n<td>Visit</td>\n<td>Attributes about a particular visit (or session). Data persists for the length of the visit. Examples: Visit Duration, Browser Used, Referring URL, and Carted Products.</td>\n<td>These attributes represent visitor activity from the current session on a single device. Visit attributes persist for the length of the session. See <a href=\"#session-length\">Session Length</a> for more detail.</td>\n</tr>\n<tr>\n<td>Visitor</td>\n<td>Attributes about a particular visitor across all visits. Examples: Email Address, Member ID, Lifetime Order Total, and Category Views.</td>\n<td>This data follows a visitor from session to session and across different devices. Visitor data persists even after the current visit ends.</td>\n</tr>\n<tr>\n<td>Omnichannel</td>\n<td>For importing offline data via the Omnichannel service. This scope does not require a data type.</td>\n<td><a href=\"/server-side/data-sources/file-import/about/\">Omnichannel</a> attributes are defined when you define your file imports.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"session-length\">Session length</h3>\n<p>Session length determines when AudienceStream ends a visit. When a visit reaches the session length without a new event, the visit ends and AudienceStream performs end-of-visit processing. The next event from the visitor starts a new visit. AudienceStream has a maximum visit length of 24 hours, regardless of event activity.</p>\n<p>In AudienceStream, the default session length is set based on the platform that sends the events:</p>\n<ul>\n<li><strong>Web</strong>: 30 min (10 min if one event and no follow-up events)</li>\n<li><strong>Mobile App</strong>: 2 min</li>\n<li><strong>Omnichannel</strong>: 1 min</li>\n<li><strong>File Import</strong>: 1 min</li>\n<li><strong>Collect API</strong>: 30 min</li>\n</ul>\n<p>The platform is based on the reserved attribute named <code>platform</code> according to the following values:</p>\n<ul>\n<li><strong>Web</strong> - <code>platform</code> is set to <code>web</code> or not set.</li>\n<li><strong>Mobile</strong> - <code>platform</code> is set to one of <code>android</code>,<code>ios</code>,<code>win</code>,<code>bb10</code>,<code>native_mobile</code>.</li>\n</ul>\n<p>To customize the session length, set the data layer variable <code>_dc_ttl_</code> to a value in milliseconds on the first event of a session. For example, to set the session length to five minutes, add the following to the event: <code>&quot;_dc_ttl_&quot;: 300000</code>. The session length cannot be changed after it has been set.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>To set a custom length, you must omit the <code>platform</code> variable. If you set a custom value for <code>platform</code>, the session length defaults to 30 minutes.</p>\n<h2 id=\"data-types\">Data types</h2>\n<p>Attributes come in a variety of types, from a basic number to the more powerful tally and badge. The data type determines the format in which the attribute value is stored.</p>\n<p>The following data types are supported:</p>\n<table>\n<thead>\n<tr>\n<th>Data type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/number/\">Number</a></td>\n<td>Stores numerical values such as order total, lifetime event count, or number of days since last visit.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/string/\">String</a></td>\n<td>Stores text values such as first/last name, address, favorite product, and page name.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/boolean/\">Boolean</a></td>\n<td>Stores only one of two values: &rsquo;true&rsquo; and &lsquo;false&rsquo;. <a href=\"/server-side/attributes/data-types/boolean/\">Boolean</a> can be used for indicating the status of a visitor action or visit.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/arrays/array-of-numbers/\">Array of Numbers</a></td>\n<td>Stores multiple numeric values as an <a href=\"/server-side/attributes/data-types/arrays/array-of-numbers/\">array</a>. The array may contain unique or duplicate numeric values.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/arrays/arrays/\">Array of Strings</a></td>\n<td>Stores multiple string values as an array. The array may contain unique or duplicate string values.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/arrays/array-of-booleans/\">Array of Booleans</a></td>\n<td>Stores multiple Boolean values as an array. The array may contain unique or duplicate Boolean values.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/tally/\">Tally</a></td>\n<td>Stores one or more key-value pairs.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/set-of-strings/\">Set of Strings</a></td>\n<td>Stores a collection of unique string values as a set.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/date/\">Date</a></td>\n<td>Stores the date of an event, a visitor event, or particular visit.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/funnel/\">Funnel</a></td>\n<td>Tracks the status of every step in a multi-step event, such as payment funnel and registration.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/timeline/\">Timeline</a></td>\n<td>Records all occurrences of a visitor action within a time range.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/attributes/data-types/badge/\">Badge</a></td>\n<td>Assigns a visual mark or symbol to visitors who meet certain criteria or browsing behavior.</td>\n</tr>\n<tr>\n<td><a href=\"/server-side/visitor-stitching/visitor-id-attribute/\">Visitor ID</a></td>\n<td>Stores visitor&rsquo;s unique traits as their secondary identifier.</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"scope-and-data-type-matrix\">Scope and data type matrix</h3>\n<p>This matrix shows which data types are available for each scope.</p>\n<table>\n<thead>\n<tr>\n<th>Data type</th>\n<th>Visitor scope</th>\n<th>Visit scope</th>\n<th>Event scope</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Number</td>\n<td>✔</td>\n<td>✔</td>\n<td>✔</td>\n</tr>\n<tr>\n<td>String</td>\n<td>✔</td>\n<td>✔</td>\n<td>✔</td>\n</tr>\n<tr>\n<td>Boolean</td>\n<td>✔</td>\n<td>✔</td>\n<td>✔</td>\n</tr>\n<tr>\n<td>Array of Numbers</td>\n<td>✔</td>\n<td>✔</td>\n<td>✔</td>\n</tr>\n<tr>\n<td>Array of Strings</td>\n<td>✔</td>\n<td>✔</td>\n<td>✔</td>\n</tr>\n<tr>\n<td>Array of Booleans</td>\n<td>✔</td>\n<td>✔</td>\n<td>✔</td>\n</tr>\n<tr>\n<td>Tally</td>\n<td>✔</td>\n<td>✔</td>\n<td></td>\n</tr>\n<tr>\n<td>Set of Strings</td>\n<td>✔</td>\n<td>✔</td>\n<td></td>\n</tr>\n<tr>\n<td>Date</td>\n<td>✔</td>\n<td>✔</td>\n<td>✔</td>\n</tr>\n<tr>\n<td>Funnel</td>\n<td>✔</td>\n<td>✔</td>\n<td></td>\n</tr>\n<tr>\n<td>Timeline</td>\n<td>✔</td>\n<td>✔</td>\n<td></td>\n</tr>\n<tr>\n<td>Badge</td>\n<td>✔</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Visitor ID</td>\n<td>✔</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"attribute-ids\">Attribute IDs</h2>\n<p>All event, visit, and visitor attribute have a unique attribute identifier. The value of this ID may influence the order in which enrichments run and may be required for more complex data source or visitor stitching configurations.</p>\n<p>You can find the attribute ID next to the attribute name in the attribute list or within the expanded details.</p>\n<p><strong>Event Attributes</strong>\n<figure><a class=\"slb\" href=\"/images/server-side/event-attribute-id.png\"><img src=\"https://docs.tealium.com/images/server-side/event-attribute-id.png\"\n         alt=\"Event Attribute ID location\"\n         title=\"Event Attribute ID location\"/>\n    </a>\n</figure></p>\n<p><strong>Visitor Attributes</strong>\n<figure><a class=\"slb\" href=\"/images/server-side/visitor-attribute-id.png\"><img src=\"https://docs.tealium.com/images/server-side/visitor-attribute-id.png\"\n         alt=\"Visitor Attribute ID location\"\n         title=\"Visitor Attribute ID location\"/>\n    </a>\n</figure></p>\n<h2 id=\"size-limits\">Size limits</h2>\n<p>Most attributes for EventStream and AudienceStream have storage capacity limits and specific behaviors for when those limits are exceeded. Note that the entire visitor profile has a limit of 400 KB compressed and encrypted.</p>\n<h2 id=\"event-limits\">Event limits</h2>\n<p>To protect both the Tealium platform and individual customer accounts, AudienceStream has a limit of 10,000 events per visit.</p>\n<p>If a visitor reaches 10,000 events in a single visit, the visitor is permanently banned. When a visitor is banned, the visitor profile is deleted and all future events for the visitor ID, or any IDs that stitch to it, are ignored in both AudienceStream and EventStream. In addition, log messages are written that include the account, profile, visitor ID, and an indication that a ban occurred.</p>\n<p>The ban is permanent, or until maintenance is performed by the Tealium Operations team to purge the banned visitors collection. If you believe a visitor has been banned incorrectly, or you have a visitor that needs to be removed from the banned list, please contact Tealium Support.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>If a permanent visitor ban is removed and the visitor again exceeds the 10,000 events in a visit limit, another ban will occur.</p>\n<h2 id=\"event-attributes\">Event attributes</h2>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Storage capacity limits</th>\n<th>Exceeded limit behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Strings</strong></td>\n<td>1,500 characters</td>\n<td>Strings are truncated to 1,500 characters if they are longer than the limit.</td>\n</tr>\n<tr>\n<td><strong>Arrays of any type</strong></td>\n<td>30,000 entries</td>\n<td>If an attribute is set or updated to exceed the limit, the attribute is trimmed to 30,000 entries and set.</td>\n</tr>\n<tr>\n<td><strong>Dates</strong></td>\n<td>Min: &ldquo;-292275055-05-16T16:47:04.192Z&rdquo; Max: &ldquo;+292278994-08-17T07:12:55.807Z&rdquo;</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>Numbers</strong></td>\n<td>Represented with <code>java.lang.Number</code>, which has dynamic precision.</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"visitvisitor-attributes\">Visit/visitor attributes</h2>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Storage capacity limits</th>\n<th>Exceeded limit behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Strings</strong></td>\n<td>1,000 characters</td>\n<td>If an enrichment results in a string larger than 1,000 characters, the value is not saved.</td>\n</tr>\n<tr>\n<td><strong>Timelines</strong></td>\n<td>100 entries</td>\n<td>Earliest entries are discarded when the limit is reached (First-In, First-Out). For example, if a timeline contains 100 entries, and a new entry is added, the first entry is deleted.</td>\n</tr>\n<tr>\n<td><strong>Tallies</strong></td>\n<td>30,000 entries.</td>\n<td>If an attribute is set or updated to exceed the limit, the attribute is trimmed to 30,000 entries and set.</td>\n</tr>\n<tr>\n<td><strong>Arrays of any type</strong></td>\n<td>30,000 entries.</td>\n<td>If an attribute is set or updated to exceed the limit, the attribute is trimmed to 30,000 entries and set.</td>\n</tr>\n<tr>\n<td><strong>Set of Strings</strong></td>\n<td>30,000 entries.</td>\n<td>If an attribute is set or updated to exceed the limit, the attribute is trimmed to 30,000 entries and set.</td>\n</tr>\n<tr>\n<td><strong>Dates</strong></td>\n<td>Min: &ldquo;-292275055-05-16T16:47:04.192Z&rdquo; Max: &ldquo;+292278994-08-17T07:12:55.807Z&rdquo;</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>Numbers</strong></td>\n<td>Represented with <code>java.lang.Number</code>, which has dynamic precision.</td>\n<td></td>\n</tr>\n<tr>\n<td><strong>Visitor ID</strong></td>\n<td>2 KB</td>\n<td>If the visitor ID is over 2 KB, the record is not saved.</td>\n</tr>\n<tr>\n<td><strong>Funnel</strong></td>\n<td>No limits*</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>*No limits, but the attribute is still limited by the maximum size of the profile after encryption and compression (400 KB).</p>\n<h2 id=\"imported-attributes-from-iq-tag-management\">Imported attributes from iQ Tag Management</h2>\n<p>An imported attribute is a variable that was originally created in the corresponding Tealium iQ profile. Tealium iQ variables are available to the sever-side profile of the same name, where they are imported as event-scoped attributes. When you modify a variable in Tealium iQ (and publish), the changes are instantly applied to the matching attribute in EventStream.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Imported attributes are not editable. You must use Tealium iQ to manage them.</p>\n<p>If variables from Tealium iQ do not appear in EventStream, verify that the Tealium iQ variables are in the Tealium iQ profile that corresponds to the sever-side profile and that the variables have been saved and published. Make sure you refresh the EventStream page in the browser after publishing variable changes. If you need assistance with making Tealium iQ variables available in the server-side, contact Tealium Support.</p>\n<h3 id=\"restricted-data\">Restricted data</h3>\n<p>This property is used to identify attributes that contain data that should not be sent out of the system, such as third-party <a href=\"/server-side/connectors/about/\">Connectors</a> or <a href=\"/server-side/data-storage/about/\">DataAccess</a>. Learn more about <a href=\"/server-side/attributes/restricted-data/\">Restricted Data</a>.</p>\n<h3 id=\"rule\">Rule</h3>\n<p>A rule provides additional logic for the purpose of triggering an enrichment.</p>\n<ul>\n<li>\n<p>To apply a predefined rule, make a selection from the drop-down list and click <strong>Add Rule</strong>.<br>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>Creating a new rule through the enrichments dialog box automatically applies it to the enrichment.</p></p>\n</li>\n<li>\n<p>To apply a new rule, click <strong>Create Rule</strong>.<br>\n<figure><a class=\"slb\" href=\"/images/server-side/whiteui-using-attributes-rules.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-using-attributes-rules.png\"/>\n          </a>\n      </figure></p>\n</li>\n</ul>\n<h2 id=\"preloaded-attributes\">Preloaded attributes</h2>\n<p>AudienceStream and EventStream contain a set of preloaded visit and visitor attributes that are preconfigured with statistical information to help you determine useful information about each visitor or visit.</p>\n<p>For more information about these attributes, see <a href=\"/server-side/attributes/preloaded/\">Preloaded attributes</a>.</p>\n"
        }  

    , 
        {
            "weight": "13",
            "url": "https://docs.tealium.com/server-side/attributes/preloaded/",
            "title": "Preloaded attributes",
            "body": "<h2 id=\"how-it-works\">How it works</h2>\n<p>For your convenience, AudienceStream and EventStream contain a set of preloaded event, visit, and visitor attributes. Each attribute is configured to collect statistical information that can help you determine useful information about each visitor or visit. These attributes do not require additional attributes beyond the standard event data from the <a href=\"/client-side-tags/tealium-collect-tag/\">Tealium Collect tag</a>.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Preloaded attributes cannot be modified, but you can duplicate them and modify the copy. The duplicate contains all of the enrichments and rules from the original.</p>\n<h2 id=\"visitor-attributes\">Visitor attributes</h2>\n<table>\n<thead>\n<tr>\n<th>Visitor attributes</th>\n<th>ID</th>\n<th>Type</th>\n<th>Description</th>\n<th>Enrichments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Average visit duration in minutes</td>\n<td>26</td>\n<td>Number</td>\n<td>The average visit duration in minutes</td>\n<td>Set ratio <code>Average visit duration in minutes</code> to <code>Total time spent on site in minutes</code> divided by <code>Lifetime visit count</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Average visits per week</td>\n<td>29</td>\n<td>Number</td>\n<td>Average visits per week</td>\n<td>Set ratio  <code>Average visits per week</code> to <code>Lifetime visit count</code> divided by <code>Weeks since first visit</code> when new visit if <code>Weeks since first visit</code> is greater than or equal to <code>1</code>.</td>\n</tr>\n<tr>\n<td>Fan</td>\n<td>30</td>\n<td>Badge</td>\n<td>The visitor has visited more that two times and has more direct visits than referrals.</td>\n<td>Assign <code>Fan</code> badge to visitor when new visit if <code>Total direct visits</code> is greater than <code>Total referred visits</code>.</td>\n</tr>\n<tr>\n<td>First visit</td>\n<td>23</td>\n<td>Date</td>\n<td>The date of the first visit</td>\n<td>Set <code>First visit_copy</code> to  <code>Last event timestamp</code> when new visitor.</td>\n</tr>\n<tr>\n<td>Frequent visitor</td>\n<td>31</td>\n<td>Badge</td>\n<td>The visitor has visited two or more visits per week on average.</td>\n<td>Remove <code>Frequent visitor</code> badge from visitor when new visit if <code>Average visits per week</code> is less than <code>2</code> and assign <code>Frequent visitor</code> to visitor when new visit if <code>Average visits per week</code> is greater than or equal to <code>2</code>.</td>\n</tr>\n<tr>\n<td>Last event URL</td>\n<td>17</td>\n<td>String</td>\n<td>The last event URL for the visitor</td>\n<td>Set string <code>Last event URL</code> to <code>Current URL</code> when any event.</td>\n</tr>\n<tr>\n<td>Last visit</td>\n<td>24</td>\n<td>Date</td>\n<td>The date of the last visit</td>\n<td>Set <code>Last visit</code> to Last event timestamp when visit ended.</td>\n</tr>\n<tr>\n<td>Lifetime browser types used</td>\n<td>57</td>\n<td>Tally</td>\n<td>A tally of how many times each type of browser is used</td>\n<td>For tally <code>Lifetime browser types used</code> increment all values by <code>1</code> if found in <code>Active browser types</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Lifetime browser types used (favorite)</td>\n<td>56</td>\n<td>String</td>\n<td>The favorite item out of the Lifetime browser types used attribute</td>\n<td>Automatically generated from Lifetime browser types used.</td>\n</tr>\n<tr>\n<td>Lifetime browser versions used</td>\n<td>63</td>\n<td>Tally</td>\n<td>A tally of browser versions used</td>\n<td>For tally <code>Lifetime browser versions used</code> increment all values by <code>1</code> if found in <code>Active browser versions</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Lifetime browser versions used (favorite)</td>\n<td>62</td>\n<td>String</td>\n<td>The favorite out of the Lifetime browser versions used attribute</td>\n<td>Automatically generated from Lifetime browser versions used.</td>\n</tr>\n<tr>\n<td>Lifetime devices used</td>\n<td>55</td>\n<td>Tally</td>\n<td>A tally of devices used</td>\n<td>For tally <code>Lifetime devices used</code> increment all values by <code>1</code> if found in <code>Active devices</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Lifetime devices used (favorite)</td>\n<td>54</td>\n<td>String</td>\n<td>The favorite item out of the Lifetime devices used attribute</td>\n<td>Automatically generated from Lifetime devices used.</td>\n</tr>\n<tr>\n<td>Lifetime event count</td>\n<td>22</td>\n<td>Number</td>\n<td>The total number of events triggered by user</td>\n<td>Increment number <code>Lifetime event count</code> by <code>1</code> when any event.</td>\n</tr>\n<tr>\n<td>Lifetime operating systems used</td>\n<td>59</td>\n<td>Tally</td>\n<td>A tally of operating systems used</td>\n<td>For tally <code>Lifetime operating systems used</code> increment all values by <code>1</code> if found in <code>Active operating systems</code> when visit ended</td>\n</tr>\n<tr>\n<td>Lifetime operating systems used (favorite)</td>\n<td>58</td>\n<td>String</td>\n<td>The favorite item out of the Lifetime operating systems used attribute</td>\n<td>Automatically generated from Lifetime operating systems used.</td>\n</tr>\n<tr>\n<td>Lifetime platforms used</td>\n<td>61</td>\n<td>Tally</td>\n<td>A tally of platforms used</td>\n<td>For tally <code>Lifetime platforms used</code> increment all values by <code>1</code> if found in <code>Active platforms</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Lifetime platforms used (favorite)</td>\n<td>60</td>\n<td>String</td>\n<td>The favorite item out of the Lifetime platforms used attribute</td>\n<td>Automatically generated from Lifetime platforms used.</td>\n</tr>\n<tr>\n<td>Lifetime visit count</td>\n<td>21</td>\n<td>Number</td>\n<td>Total number of times user has visited site</td>\n<td><ul><li>Set ratio <code>Average visit duration in minutes</code> to <code>Total time spent on site in minutes</code> divided by <code>Lifetime visit count</code> when visit ended.</li><li>Set ratio <code>Average visits per week</code> to <code>Lifetime visit count</code> divided by <code>Weeks since first visit</code> when new visit if <code>Weeks since first visit</code> is greater than or equal to <code>1</code>.</li></ul></td>\n</tr>\n<tr>\n<td>Returning visitor</td>\n<td>27</td>\n<td>Boolean</td>\n<td>The visitor is a returning visitor.</td>\n<td>Set <code>Returning visitor</code> to <code>true</code> when new visit <code>Lifetime visit count</code> is greater than <code>1</code>.</td>\n</tr>\n<tr>\n<td>Total direct visits</td>\n<td>15</td>\n<td>Number</td>\n<td>The total number of direct visits</td>\n<td>Increment number <code>Total direct visits</code> by <code>1</code> when new visit if <code>Referring URL</code> is empty or <code>Referring URL</code> equals <code>Current URL</code>.</td>\n</tr>\n<tr>\n<td>Total referred visits</td>\n<td>16</td>\n<td>Number</td>\n<td>The total number of referred visits</td>\n<td>Increment number <code>Total referred visits</code> by <code>1</code> when new visit if <code>Referring URL</code> is not empty and <code>Referring URL</code> does not equal <code>Current URL</code>.</td>\n</tr>\n<tr>\n<td>Total time spent on site in minutes</td>\n<td>25</td>\n<td>Number</td>\n<td>The sum of the duration of all user visits</td>\n<td>Increment number <code>Total time spent on site in minutes</code> by <code>Visit duration </code> when visit ended.</td>\n</tr>\n<tr>\n<td>Unbadged</td>\n<td>32</td>\n<td>Badge</td>\n<td>The visitor has not been assigned any badges.</td>\n<td>Assign <code>Unbadged</code> badge to visitor when new visitor.</td>\n</tr>\n<tr>\n<td>Weeks since first visit</td>\n<td>28</td>\n<td>Number</td>\n<td>The number of weeks elapsed since first visit</td>\n<td>Set ratio <code>Average visits per week</code> to <code>Lifetime visit count</code> divided by <code>Weeks since first visit</code> when new visit if <code>Weeks since first visit</code> is greater than or equal to <code>1</code>.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"visit-attributes\">Visit attributes</h2>\n<table>\n<thead>\n<tr>\n<th>Visit attributes</th>\n<th>ID</th>\n<th>Type</th>\n<th>Description</th>\n<th>Enrichments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Active browser type</td>\n<td>44</td>\n<td>String</td>\n<td>The browser actively being used by the visitor</td>\n<td><ul><li>Set string <code>Active browser version</code> to <code>Active browser type</code> when any event if <code>User Agent</code> does not contain <code>Firefox</code> and <code>User Agent</code> does not contain <code>Safari</code> and <code>User Agent</code> does not contain <code>MSIE</code> and <code>User Agent</code> does not contain <code>Edg</code> and <code>User Agent</code> does not contain Opera.</li><li>Set string <code>Active browser version</code> to <code>Active browser type</code> when any event <code>User Agent</code> is <code>Chrome</code>.</li><li>Set string <code>Active browser version</code> to <code>Active browser type</code> when any event <code>User Agent</code> is <code>Firefox</code>.</li><li>Set string <code>Active browser version</code> to <code>Active browser type</code> when any event <code>User Agent</code> is <code>Opera</code>.</li><li>For <code>Set of Strings</code> Active browser types add <code>Active browser type</code> when any event.</li></ul></td>\n</tr>\n<tr>\n<td>Active browser types</td>\n<td>49</td>\n<td>Set of strings</td>\n<td>A deduplicated list of browser types used this visit</td>\n<td>For tally <code>Lifetime browser types used</code> increment all values by <code>1</code> if found in <code>Active browser types when visit ended.</code></td>\n</tr>\n<tr>\n<td>Active browser version</td>\n<td>48</td>\n<td>String</td>\n<td>The browser version actively being used by the visitor</td>\n<td>For set of strings <code>Active browser versions</code> add <code>Active browser version</code> when any event.</td>\n</tr>\n<tr>\n<td>Active browser versions</td>\n<td>53</td>\n<td>Set of strings</td>\n<td>A deduplicated list of browser versions this visit</td>\n<td>For tally <code>Lifetime browser versions used</code> increment all values by <code>1</code> if found in <code>Active browser versions</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Active device</td>\n<td>46</td>\n<td>String</td>\n<td>The device actively being used by the visitor</td>\n<td>For set of strings <code>Active devices</code> add <code>Active device</code> when any visit.</td>\n</tr>\n<tr>\n<td>Active devices</td>\n<td>51</td>\n<td>Set of strings</td>\n<td>A deduplicated list of devices this visit</td>\n<td>For tally <code>Lifetime devices used</code> increment all values by <code>1</code> if found in <code>Active devices</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Active operating system</td>\n<td>45</td>\n<td>String</td>\n<td>The operating system actively being used by the visitor</td>\n<td>For set of strings <code>Active operating systems</code> add <code>Active operating system</code> when any event.</td>\n</tr>\n<tr>\n<td>Active operating systems</td>\n<td>50</td>\n<td>Set of strings</td>\n<td>A deduplicated list of operating systems</td>\n<td>For tally <code>Lifetime operating systems used</code> increment all values by <code>1</code>  if found in <code>Active operating systems</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Active platform</td>\n<td>47</td>\n<td>String</td>\n<td>The platform actively being used by the visitor</td>\n<td>For set of strings <code>Active platforms</code> add <code>Active platform</code> when any event.</td>\n</tr>\n<tr>\n<td>Active platforms</td>\n<td>52</td>\n<td>Set of strings</td>\n<td>A deduplicated list of active platforms</td>\n<td>For tally <code>Lifetime platforms used</code> increment all values by <code>1</code> if found in <code>Active platforms</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Direct visit</td>\n<td>14</td>\n<td>Boolean</td>\n<td>The user navigated directly to the site.</td>\n<td>Set boolean <code>Direct visit</code> to <code>true</code> when new visit if <code>Referring URL</code> is empty or <code>Referring URL</code> equals <code>Current URL</code>.</td>\n</tr>\n<tr>\n<td>Entry URL</td>\n<td>5</td>\n<td>String</td>\n<td>The URL of the first page visited</td>\n<td>Set string <code>Entry URL</code> to <code>Current URL</code> when new visit.</td>\n</tr>\n<tr>\n<td>Event count</td>\n<td>7</td>\n<td>Number</td>\n<td>The total number of events in this visit</td>\n<td>Increment Number <code>Event count</code> by <code>1</code> when any event</td>\n</tr>\n<tr>\n<td>Exit URL</td>\n<td>6</td>\n<td>String</td>\n<td>The URL of the last page visited</td>\n<td>Set string <code>Exit URL</code> to <code>Current URL</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Referred visit</td>\n<td>13</td>\n<td>Boolean</td>\n<td>The user was referred from another site.</td>\n<td>Set boolean <code>Referred visit</code> to <code>true</code> when new visit if <code>Referring URL</code> is not empty and <code>Referring URL</code> does not equal <code>Current URL</code>.</td>\n</tr>\n<tr>\n<td>Visit duration</td>\n<td>12</td>\n<td>Number</td>\n<td>The duration of this visit</td>\n<td>Increment number <code>Total time spent on site in minutes</code> by <code>Visit duration</code> when visit ended.</td>\n</tr>\n<tr>\n<td>Visit end</td>\n<td>11</td>\n<td>Date</td>\n<td>The end date of this visit</td>\n<td>Set number <code>Visit duration</code> to be the difference between <code>Visit end</code> and <code>Visit start</code> in minutes when any event.</td>\n</tr>\n<tr>\n<td>Visit start</td>\n<td>10</td>\n<td>Date</td>\n<td>The start date of this visit</td>\n<td>Set number <code>Visit duration</code> to be the difference between <code>Visit end</code> and <code>Visit start</code> in minutes when any event.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"event-attributes\">Event attributes</h2>\n<table>\n<thead>\n<tr>\n<th>Event attributes</th>\n<th>ID</th>\n<th>Type</th>\n<th>Description</th>\n<th>Enrichments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Client IP</td>\n<td>74</td>\n<td>String</td>\n<td>The IP address of the client</td>\n<td></td>\n</tr>\n<tr>\n<td>Client IPv6</td>\n<td>83</td>\n<td>String</td>\n<td>The IPv6 address of the client</td>\n<td></td>\n</tr>\n<tr>\n<td>Current URL</td>\n<td>4</td>\n<td>String</td>\n<td>The URL of the current page</td>\n<td><ul><li>Set string <code>Entry URL</code> to <code>Current URL</code> when new visit.</li><li>Set string <code>Exit URL</code> to <code>Current URL</code> when visit ended.</li><li>Set string <code>Last event URL</code> to <code>Current URL</code> when any event.</li></ul></td>\n</tr>\n<tr>\n<td>Domain</td>\n<td>35</td>\n<td>String</td>\n<td>The domain of the current page</td>\n<td></td>\n</tr>\n<tr>\n<td>event_name</td>\n<td>64</td>\n<td>String</td>\n<td>This attribute is deprecated; use <code>tealium_event</code> instead.</td>\n<td></td>\n</tr>\n<tr>\n<td>Last event timestamp</td>\n<td>8</td>\n<td>String</td>\n<td>The timestamp of the last event</td>\n<td><ul><li>Set date <code>Visit start</code> to <code>Last event timestamp</code> when new visit.</li><li>Set date <code>Visit end</code> to <code>Last event timestamp</code> when any event.</li><li>Set date <code>First visit</code> to <code>Last event timestamp</code> when new visitor.</li><li>Set date <code>Last visit</code> to <code>Last event timestamp</code> when visit ended.</li></ul></td>\n</tr>\n<tr>\n<td>Page Title</td>\n<td>38</td>\n<td>String</td>\n<td>The title of the current page</td>\n<td></td>\n</tr>\n<tr>\n<td>Pathname</td>\n<td>36</td>\n<td>String</td>\n<td>The pathname of the current page</td>\n<td></td>\n</tr>\n<tr>\n<td>platform</td>\n<td>40</td>\n<td>String</td>\n<td>The platform of the client</td>\n<td></td>\n</tr>\n<tr>\n<td>Query String</td>\n<td>37</td>\n<td>String</td>\n<td>The query string of the current page</td>\n<td></td>\n</tr>\n<tr>\n<td>Referring URL</td>\n<td>3</td>\n<td>String</td>\n<td>The URL of the previous page</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_account</td>\n<td>66</td>\n<td>String</td>\n<td>The account name</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_datasource</td>\n<td>70</td>\n<td>String</td>\n<td>The Data Source Key</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_environment</td>\n<td>67</td>\n<td>String</td>\n<td>The publishing environment</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_event</td>\n<td>75</td>\n<td>String</td>\n<td>The Tealium event name (either <code>view</code> or <code>link</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_event_type</td>\n<td>78</td>\n<td>String</td>\n<td>The type of Tealium event being dispatched (either <code>view</code> or <code>event</code>)</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_firstparty_visitor_id</td>\n<td>76</td>\n<td>String</td>\n<td>The visitor ID provided by the first-party cookie</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_library_name</td>\n<td>68</td>\n<td>String</td>\n<td>The library name</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_library_version</td>\n<td>69</td>\n<td>String</td>\n<td>The version of the library</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_profile</td>\n<td>79</td>\n<td>String</td>\n<td>The account profile</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_random</td>\n<td>65</td>\n<td>Number</td>\n<td>This value is a random number that the platform generated for each event. The expected value is 16 numeric digits. This value is prepended with zeroes if it is less than 16 digits.</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_session_id</td>\n<td>71</td>\n<td>Number</td>\n<td>This value is the epoch timestamp of when the first page view, event, or library finished starting up (in milliseconds). This value resets if there is no activity for 30 minutes on the web.</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_thirdparty_visitor_id</td>\n<td>77</td>\n<td>String</td>\n<td>The visitor ID provided by the third-party cookie</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_timestamp_epoch</td>\n<td>73</td>\n<td>Number</td>\n<td>This value is when the event occurred, in seconds. If event was queued, this value is the time that the event originally occurred.</td>\n<td></td>\n</tr>\n<tr>\n<td>tealium_visitor_id</td>\n<td>72</td>\n<td>String</td>\n<td>This value is the generated UUID, which is case sensitive on AudienceStream. This value was formerly <code>tealium_vid</code> in <code>vdata</code> calls.</td>\n<td></td>\n</tr>\n<tr>\n<td>User Agent</td>\n<td>2</td>\n<td>String</td>\n<td>The user agent string</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"examples\">Examples</h2>\n<p>The following examples demonstrate how you can use preloaded attributes:</p>\n<ul>\n<li>Use the <strong>Frequent visitor</strong> badge to create an audience, and then action that audience with a connector to send email to those visitors that says &ldquo;Thank you for being a regular visitor.&rdquo;</li>\n<li>Use the <strong>Lifetime operating systems used (favorite)</strong> attribute to change the placement of specific downloads on a page, making more relevant apps appear first.</li>\n<li>Use <strong>Total Direct Visits</strong> and <strong>Total Referred Visits</strong> to calculate the ratio of  direct to referred visits for a visitor to determine how they engage with the site.</li>\n</ul>\n"
        }  

    , 
        {
            "weight": "30",
            "url": "https://docs.tealium.com/server-side/attributes/enrichments/",
            "title": "About enrichments",
            "body": "<p>An enrichment is the use of custom logic to transform an attribute from a static value to a dynamic one. This is used to create new data values or modify incoming data. Pre-built enrichments are available for each data type. For example, the ability to increment or decrement a numeric value is available to number attributes.</p>\n<h2 id=\"linked-enrichments\">Linked enrichments</h2>\n<p>When two or more enrichments have a dependency on the same attribute, they become <em>linked enrichments</em>. The following example shows the enrichments applied to the start and end of a visit. The enrichment in the <code>Visit Start</code> attribute uses the <code>Visit End</code> attribute and vice-versa. Because each enrichment is linked to the other by an attribute, they are considered linked enrichments.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/whiteui-usingenrichments-visitstart-and-visitend-linked-enrichments-combined-screens.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-usingenrichments-visitstart-and-visitend-linked-enrichments-combined-screens.png\"\n         alt=\"UsingEnrichments_VisitStart and VisitEnd Linked Enrichments_Combined Screens\"\n         title=\"UsingEnrichments_VisitStart and VisitEnd Linked Enrichments_Combined Screens\"/>\n    </a>\n</figure>\n<h2 id=\"size-limits\">Size limits</h2>\n<p>Some enrichments, such as the Join Attributes enrichment, can increase the size of an attribute. Most attributes for EventStream and AudienceStream have storage capacity limits and specific behaviors for when those limits are exceeded. Also, the entire visit or visitor profile has a limit of 400 KB compressed and encrypted.</p>\n<p>For more information, see<a href=\"/server-side/attributes/about/#size-limits\">About attributes</a>.</p>\n"
        }  

    , 
        {
            "weight": "30",
            "url": "https://docs.tealium.com/server-side/visitor-stitching/visitor-id-attribute/",
            "title": "Visitor ID attributes",
            "body": "<p>Before you begin, familiarize yourself with the following:</p>\n<ul>\n<li><a href=\"/server-side/attributes/about/\">Using Attributes</a></li>\n<li><a href=\"/server-side/attributes/enrichments/\">Using Enrichments</a></li>\n<li><a href=\"/server-side/visitor-stitching/about/\">About Visitor Stitching</a></li>\n</ul>\n<p>A visitor ID attribute is configured in AudienceStream to uniquely identify visitors. When you create a visitor ID attribute, you add an enrichment to set the value to a user identifier, which is an event attribute, such as <code>email_address_hash</code> or <code>customer_id</code>. For visitor stitching to work properly, you must choose a unique user identifier, create a rule to determine when to identify a visitor, and verify that the chosen attribute is unique for each visitor. For more information about selecting a user identifier, see <a href=\"/guides/user-identifier-guide/\">Best practices for selecting user identifiers</a>.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Visitor stitching is disabled by default. Contact your account manager to enable it.</p>\n<p>Visitor ID attributes are available in the Visitor scope.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.27.27-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.27.27-pm.png\"\n         alt=\"Screenshot 2019-11-11 at 1.27.27 PM.png\"\n         title=\"Screenshot 2019-11-11 at 1.27.27 PM.png\"/>\n    </a>\n</figure>\n<h2 id=\"system-requirements-for-visitor-id-attributes\">System requirements for visitor ID attributes</h2>\n<p>A visitor ID attribute must meet the following system requirements:</p>\n<ul>\n<li><strong>Length</strong> – Values must be between 6 and 255 characters in length.</li>\n<li><strong>Non-repeating</strong> – Values must contain at least 3 different characters. A 10-character identifier with only 2 different characters ( <code>&quot;a1a1a1a1a1&quot;</code> ) is invalid.</li>\n<li><strong>Enrichment</strong> – Attributes with a data type of Number cannot be used to enrich a visitor ID attribute.</li>\n<li><strong>Size</strong> – The maximum size of a visitor ID is 2 KB.</li>\n</ul>\n<p>UTF-8 character sets are supported.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>The system automatically validates these requirements. You do not need these rule conditions in your visitor ID attribute configuration.</p>\n<h2 id=\"best-practices\">Best practices</h2>\n<p>A visitor ID attribute should follow these best practices:</p>\n<ul>\n<li>\n<p><strong>Uniqueness</strong> - Each visitor ID attribute value should be unique for each visitor.</p>\n<ul>\n<li><strong>Strong identifiers</strong> - Only use values that could be associated with a single visitor and are not likely to change, such as a hashed email address or customer ID.</li>\n<li><strong>Weak identifiers</strong> - Avoid values that cannot be guaranteed to be unique for each visitor or that have a high likelihood of changing over time, such as first and last name, username, or phone number.</li>\n</ul>\n</li>\n<li>\n<p><strong>Case Sensitive</strong> - Values are case sensitive, so convert them to lower-case. For example, a single email address can be written with case variations such as <code>FirstLast@example.com</code> and <code>firstlast@example.com</code>, which would be treated as two different IDs in AudienceStream.</p>\n</li>\n<li>\n<p><strong>Verifying the Value</strong> - If you are using an email address, you may want to verify that the address contains the <code>@</code> symbol. You may also want to check the string for other values such as, <code>undefined</code>, <code>unknown</code>, or <code>not set</code> or any text that would not be a valid value for a visitor ID attribute.</p>\n</li>\n</ul>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>See <a href=\"/server-side/visitor-stitching/create-a-visitor-id-attribute/\">Create a Visitor ID Attribute</a> for a guide to creating the most accurate visitor ID attribute possible.</p>\n<h2 id=\"when-to-set-a-value-for-a-visitor-id-attribute\">When to set a value for a visitor ID attribute</h2>\n<p>Set the value for a visitor ID attribute during a qualifying event, which is an event that occurs when a customer provides a reliable, unique means of identification, such as registering an account or completing a purchase.</p>\n<p>A visitor ID attribute should not be a marketing activation ID (such as a gid). These third-party identifiers can be stored as visitor attribute for use in connectors, but are not recommended as visitor ID attributes.</p>\n<h2 id=\"enrich-a-visitor-id-attribute\">Enrich a visitor ID attribute</h2>\n<p>Use an enrichment to store a user identifier for a visitor in a visitor ID attribute. For example, when a user registers or signs up, your system might generate an internal ID that is added to the data layer as <code>customer_id</code>. In this case, you would use an enrichment to set a visitor ID attribute to <code>customer_id</code> when the <code>user_register</code> event occurs.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>After a visitor ID attribute is set, it cannot be updated.</p>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/arrays/array-of-booleans/",
            "title": "Array of booleans",
            "body": "<p>The array of booleans attribute stores a list of true/false values.</p>\n<p>The array of booleans is available in the following scopes: Event, Visit, Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"\n         alt=\"array of booleans\"\n         title=\"array of booleans\"/>\n    </a>\n</figure>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>The strings &ldquo;true&rdquo; and &ldquo;false&rdquo; (any mix of upper/lowercase) are converted to their respective boolean values. All other non-boolean values are ignored.</p>\n<h2 id=\"enrichments\">Enrichments</h2>\n<h3 id=\"add-a-boolean\">Add a boolean</h3>\n<p>This enrichment adds a value to the array. The added attribute can only be a boolean, iQ variable, or omnichannel attribute. For example, you may wish to add a boolean to the array to represent that the customer purchased on their last visit.</p>\n<p><strong>Attribute Name</strong>: <code>did_purchase_on_visit</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[true]</code></li>\n<li><strong>Enriched With</strong>: <code>false</code></li>\n<li><strong>Resulting value</strong>: <code>[true, false]</code></li>\n</ul>\n<h3 id=\"add-an-array-of-booleans\">Add an array of booleans</h3>\n<p>This enrichment adds all the values from another array to the array. The added attribute type can only be an array of booleans or iQ variables.</p>\n<p><strong>Attribute Name</strong>: <code>my_booleans</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[true]</code></li>\n<li><strong>Enriched With</strong>: <code>[false, true]</code></li>\n<li><strong>Resulting value</strong>: <code>[true, false, true]</code></li>\n</ul>\n<h3 id=\"reset\">Reset</h3>\n<p>This enrichment removes all values from the boolean array.</p>\n<p><strong>Attribute Name</strong>:<code>did_purchase_on_visit</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[true, false, true]</code></li>\n<li><strong>Resulting value</strong>: (Removed)</li>\n</ul>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/arrays/array-of-numbers/",
            "title": "Array of numbers",
            "body": "<p>The array of numbers attribute stores a list of numeric values for browsing metrics such as visits, page views, and purchase events.</p>\n<p>Numeric values are stored as decimals or integers. Choose the type that matches your needs:</p>\n<ul>\n<li>\n<p><strong>Decimal (default)</strong></p>\n<ul>\n<li>Decimal values can have zero or more decimal digits.</li>\n<li>Example: <code>12</code>, <code>12.0</code>, <code>12.345</code></li>\n<li>Recommended for attributes that represent monetary values.</li>\n</ul>\n</li>\n<li>\n<p><strong>Integer</strong></p>\n<ul>\n<li>Only whole number values are stored.</li>\n<li>Example: <code>12</code>, <code>-4</code>, <code>3214</code></li>\n<li>Useful for number attributes that represent quantities, counters, or scores.</li>\n</ul>\n</li>\n</ul>\n<p>The array of numbers is available in the following scopes: Event, Visit, Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"\n         alt=\"array of numbers\"\n         title=\"array of numbers\"/>\n    </a>\n</figure>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>String representations of numbers (<code>0</code>, <code>123</code>, <code>12.95</code>) are converted to their numeric values. All other non-numeric values are ignored.</p>\n<h2 id=\"enrichments\">Enrichments</h2>\n<h3 id=\"add-a-number\">Add a number</h3>\n<p>This enrichment adds a number value to the array. The added attribute can only be a number, iQ variable, or omnichannel attribute. For example, you may wish to add the last purchase value to the rolling <code>purchase_total_history</code> value array.</p>\n<p><strong>Attribute Name</strong>: <code>purchase_total_history</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[12.95]</code></li>\n<li><strong>Enriched With</strong>: <code>5.99</code></li>\n<li><strong>Resulting value</strong>: <code>[12.95, 5.99]</code></li>\n</ul>\n<h3 id=\"add-an-array-of-numbers\">Add an array of numbers</h3>\n<p>This enrichment adds all the values from another array to the array. The added attribute type can only be an array of numbers or iQ variable. For example, you may wish to add the array of purchased product prices to an array of all purchased product prices.</p>\n<p><strong>Attribute Name</strong>: <code>purchased_products_history</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[24.99, 12.95]</code></li>\n<li><strong>Enriched With</strong>: <code>[5.99, 10.00]</code></li>\n<li><strong>Resulting value</strong>: <code>[24.99, 12.95, 5.99, 10.00]</code></li>\n</ul>\n<h3 id=\"reset\">Reset</h3>\n<p>This enrichment removes all values from the array. For example, you may wish to remove the last purchase items from the array of last purchases.</p>\n<p><strong>Attribute Name</strong>: <code>purchase_total_history</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[12.95, 5.99]</code></li>\n<li><strong>Resulting value</strong>: (Removed)</li>\n</ul>\n<h3 id=\"set-array-of-numbers-to-be-the-difference-of-two-arrays\">Set array of numbers to be the difference of two arrays</h3>\n<p>This enrichment takes two arrays as input, looks for values that occur in one and not the other, and inserts them into the array. In this example, values from <code>Gift Card Amounts</code> that do not also occur in <code>Gift Cards Purchased</code> are added to the resulting array.</p>\n<p><strong>Attribute Name</strong>: <code>gift_card_not_purchased</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[]</code></li>\n<li><strong>Enriched With</strong>:  Difference between: <code>Gift Card Amounts</code> <code>[5.00, 10.00, 25.00, 50.00, 100.00, 250.00]</code> and <code>Gift Cards Purchased</code> <code>[25.00, 50.00]</code></li>\n<li><strong>Resulting value</strong>: <code>[5.00, 10.00, 100.00, 250.00]</code></li>\n</ul>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/arrays/arrays/",
            "title": "Array of strings",
            "body": "<h2 id=\"enrichments\">Enrichments</h2>\n<p>The array of strings attribute stores a list of text values.</p>\n<p>The array of strings is available in the following scopes: Event, Visit, Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.24.29-pm.png\"\n         alt=\"array of strings\"\n         title=\"array of strings\"/>\n    </a>\n</figure>\n<h3 id=\"add-a-string\">Add a string</h3>\n<p>This enrichment adds the value of a string attribute to the array. The added attribute can only be a string, iQ variable, or omnichannel attribute.</p>\n<p><strong>Attribute Name</strong>: <code>product_name</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[&quot;Pants&quot;]</code></li>\n<li><strong>Enriched With</strong>: <code>&quot;Shirts&quot;</code></li>\n<li><strong>Resulting value</strong>: <code>[&quot;Pants&quot;, &quot;Shirts&quot;]</code></li>\n</ul>\n<h3 id=\"add-an-array-of-strings\">Add an array of strings</h3>\n<p>This enrichment adds all the values from another array to the array. The added attribute can only be an array of strings or an iQ variable.</p>\n<p><strong>Attribute Name</strong>: <code>product_name</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[&quot;Pants&quot;]</code></li>\n<li><strong>Enriched With</strong>: <code>[&quot;Shirts&quot;, &quot;Shoes&quot;]</code></li>\n<li><strong>Resulting value</strong>: <code>[&quot;Pants&quot;, &quot;Shirts&quot;, &quot;Shoes&quot;]</code></li>\n</ul>\n<h3 id=\"difference-between-two-arrays\">Difference between two arrays</h3>\n<p>This enrichment takes two arrays as input, and returns a new array containing all values found in the first array but not the second. In this example, values from <code>Wishlist Products</code> that do not also occur in <code>Purchased Products</code> are added to the resulting array.</p>\n<p><strong>Attribute Name</strong>: <code> Unpurchased Products</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[]</code></li>\n<li><strong>Enriched With</strong>:<br>\nDifference between: Wishlist Products  <code>[&quot;Pants&quot;, &quot;Shirt&quot;, &quot;Shoes&quot;, &quot;Belt&quot;]</code> and Purchased Products <code>[&quot;Pants&quot;, &quot;Shirt&quot;]</code></li>\n<li><strong>Resulting value</strong>: <code>[&quot;Shoes&quot;, &quot;Belt&quot;]</code></li>\n</ul>\n<p>This example shows that the resulting attribute value is replaced, not appended to and that repeated values in the first array are removed.</p>\n<ul>\n<li><strong>Starting value</strong>: <code>[7, 8, 9]</code></li>\n<li><strong>Enriched With</strong>:  Difference between: Some Numbers <code>[1, 3, 1, 2, 3]</code> and Some Other Numbers <code>[3]</code></li>\n<li><strong>Resulting value</strong>: <code>[1, 1, 2]</code></li>\n</ul>\n<h3 id=\"reset\">Reset</h3>\n<p>This enrichment removes all values from the array.</p>\n<p><strong>Attribute Name</strong>: <code>product_name</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[&quot;Shoes&quot;, &quot;Belt&quot;]</code></li>\n<li><strong>Enriched With</strong>:</li>\n<li><strong>Resulting value</strong>: (Removed)</li>\n</ul>\n<h3 id=\"lowercase\">Lowercase</h3>\n<p>This enrichment lowercases every value in the array.</p>\n<p><strong>Attribute Name</strong>: <code>product_name</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[&quot;Shoes&quot;, &quot;BELT&quot;]</code></li>\n<li><strong>Enriched With</strong>:</li>\n<li><strong>Resulting value</strong>: <code>[&quot;shoes&quot;, &quot;belt&quot;]</code></li>\n</ul>\n<h3 id=\"set-to-set-of-strings\">Set to set of strings</h3>\n<p>Sets an array of strings to a set of strings. This enrichment replaces all values in the array.</p>\n<p><strong>Attribute Name</strong>: <code>Active Browser Types</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[&quot;IE&quot;]</code></li>\n<li><strong>Enriched With</strong>: <code>[&quot;Chrome&quot; &quot;FireFox&quot;, &quot;Opera&quot;]</code></li>\n<li><strong>Resulting value</strong>: <code>[&quot;Chrome&quot; &quot;FireFox&quot;, &quot;Opera&quot;]</code></li>\n</ul>\n<h3 id=\"add-a-set-of-strings\">Add a set of strings</h3>\n<p>Adds a set of strings to a string array. This enrichment preserves the existing values in the array, therefore there can be duplicate items in the resulting value.</p>\n<p><strong>Attribute Name</strong>: <code>product_name</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[&quot;Pants&quot;]</code></li>\n<li><strong>Enriched With</strong>: <code>[&quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li>\n<li><strong>Resulting value</strong>: <code>[&quot;Pants&quot;, &quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li>\n</ul>\n<h3 id=\"remove-a-string-from-the-array\">Remove a string from the array</h3>\n<p>Specify a first, last, or all instances of a string to remove. This enrichment removes from an array every instance of the item selected for removal.</p>\n<p><strong>Attribute Name</strong>: <code>product_name</code></p>\n<ul>\n<li><strong>Starting value</strong>: <code>[&quot;Pants&quot;, &quot;Pants&quot;, &quot;Shoes&quot;, &quot;Ties&quot;]</code></li>\n<li><strong>Enriched With</strong>: <code>&quot;Pants&quot;</code></li>\n<li><strong>Resulting value</strong>: <code>[&quot;Shoes&quot;, &quot;Ties&quot;]</code></li>\n</ul>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/badge/",
            "title": "Badge Attribute",
            "body": "<h2 id=\"how-it-works\">How it works</h2>\n<p>Badges are the building blocks for <a href=\"/server-side/audiences/audience-discovery/about/\">discovering audiences</a>. A behavior is defined using attributes and rules that describe its conditions.</p>\n<p>For example, you might be interested in the behavior of visitors that frequently browse your site but do not make a purchase. In this case, the following behaviors might characterize this type of visitor:</p>\n<ul>\n<li><strong>Visited</strong>: Has visited the site three times in the last 7 days.</li>\n<li><strong>Showed Interest</strong>: Has viewed a product details page or read an article.</li>\n<li><strong>Did Not Convert</strong>: Has not purchased or signed up for a service.</li>\n</ul>\n<p>This pattern of behavior could be configured as a badge attribute named &ldquo;Window Shopper&rdquo; to identify the visitors that match its behavior.</p>\n<p>The badge attribute is available in the following scopes: Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.27.27-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.27.27-pm.png\"\n         alt=\"Screenshot 2019-11-11 at 1.27.27 PM.png\"\n         title=\"Screenshot 2019-11-11 at 1.27.27 PM.png\"/>\n    </a>\n</figure>\n<h3 id=\"size-limits\">Size Limits</h3>\n<p>The size of a each badge is not limited, but these attributes are still limited by the maximum size of the profile after encryption and compression (400 KB).</p>\n<h3 id=\"badge-associations\">Badge associations</h3>\n<p>Badge associations allow you to quickly assign multiple badges based on other badges the visitor has earned. Typically, you would trigger a badge assignment based on a certain browsing behavior or criteria, but with badge associations you can trigger more than one badge assignment after the visitor has successfully earned the qualifying badge or badges.</p>\n<p>Learn more about <a href=\"#badge-associations\">setting up badge associations</a>.</p>\n<h2 id=\"enrichments\">Enrichments</h2>\n<p>Badges are assigned to and removed from visitors based on the logic of their rules. Each new visitor is assigned a default badge named <strong>Unbadged</strong>. This badge is automatically removed after the visitor earns a custom badge. Badges are assigned (and removed) using the following enrichments.</p>\n<h3 id=\"assign-badge\">Assign badge</h3>\n<p>Assigns the badge to a visitor when a set of conditions are met. All visitors are initially without a badge. For example, to assign the <strong>Window Shopper</strong> badge, it must be determined if the visitor navigated away from the site without purchasing.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Window Shopper&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>&quot;Unbadged&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;Window Shopper&quot;</code></li>\n</ul>\n<h3 id=\"remove-badge\">Remove badge</h3>\n<p>Removes an assigned badge when the visitor no longer satisfies the conditions. For example, a <strong>Window Shopper</strong> badge is removed after the visitor makes a purchase.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Window Shopper&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>:  <code>&quot;Window Shopper&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;Unbadged&quot;</code></li>\n</ul>\n<h3 id=\"assign-badge-from-another-badge\">Assign badge from another badge</h3>\n<p>Assigns a badge based on another badge. For example, a <strong>Window Shopper</strong> badge is replaced with a <strong>Cart Abandoner</strong> badge after the visitor abandons a cart. Of course, a visitor can have more than one badge, so a visitor can be a <strong>Window Shopper</strong> and a <strong>Cart Abandoner</strong>.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Cart Abandoner&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>:  <code>&quot;Window Shopper&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;Cart Abandoner&quot;</code></li>\n</ul>\n<h2 id=\"popular-badges\">Popular badges</h2>\n<p>The following table lists several popular badges. For a complete list of popular badges, see <a href=\"/server-side/attributes/data-types/popular-badges/\">Popular Badges</a>.</p>\n<table>\n<thead>\n<tr>\n<th>Badge name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Known Visitor</td>\n<td><ul><li>Assigned when we capture an important identifier of the visitor</li><li>For example: Customer ID (client&rsquo;s ID), Customer Email, Facebook ID</li><li>Possible Action to take: none, but used in an Audience to ensure the visitor is targetable with a selected vendor API</li><li>These visitors are more commonly targeted via Email or Social Media</li></ul></td>\n</tr>\n<tr>\n<td>Unknown Visitor</td>\n<td><ul><li>Assigned when the visitor has yet to authenticate on the website</li><li>Authenticate does not necessarily mean they have logged in, if a visitor comes to the site from an email and the email is in the URL then we&rsquo;ve determined who the visitor is and they&rsquo;ve &ldquo;authenticated&rdquo;</li><li>Possible Action to take: display a modal to the visitor encouraging them to identify themselves</li><li>These visitors are more commonly targeted via Display Ad</li></ul></td>\n</tr>\n<tr>\n<td>Window Shopper</td>\n<td><ul><li>A visitor who visits the site often but does not purchase</li><li>For example: a visitor who has been to the site 3 times in the last 7 days, has viewed a product details page or read an article, and has not purchased or signed up for a service</li><li>Possible Action to take: determine their affinity to a category and change the landing page of the next session to personalize the experience</li></ul></td>\n</tr>\n<tr>\n<td>Purchaser</td>\n<td><ul><li>A visitor who has converted</li><li>For example: purchased a product or signed up for a service</li><li>Possible Action to take: email in 2 weeks with an offer enticing to make another purchase or an email showing related items for purchase, for example if the visitor bought a baseball bat offer a baseball bag and batting gloves</li><li>Possible Action: remove visitor from retargeting campaign so they are not remarketed unnecessarily</li></ul></td>\n</tr>\n<tr>\n<td>Browse Abandoner</td>\n<td><ul><li>A visitor who has viewed a product and did not add an item to the cart. </li><li>Possible Action to take: if a Known Visitor and Facebook ID is known, send data to Facebook to retarget the brand to the visitor. </li></ul></td>\n</tr>\n<tr>\n<td>Cart Abandoner</td>\n<td><ul><li>A visitor who has added an item to the cart and did not purchase. </li><li>Possible Action to take: if email address is known, send a personalized email with the abandoned items. </li></ul></td>\n</tr>\n<tr>\n<td>Search Abandoner</td>\n<td><ul><li>A visitor who has landed on the site from a search engine and has not completed a qualifying action, such as 3 page views in the visit. </li></ul></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"badge-associations-1\">Badge Associations</h2>\n<h3 id=\"creating-the-enrichment-for-new-or-existing-badges\">Creating the enrichment (for new or existing badges)</h3>\n<ol>\n<li>Go to <strong>Attributes &gt; Visitor / Visit Attributes</strong>.</li>\n<li>Add a new badge or click the edit icon for the badge to which you want to append another badge or badges.</li>\n<li>Click <strong>Add Enrichment</strong> and select <strong>Assign badge from another badge</strong>.<br>\n<figure><a class=\"slb\" href=\"/images/server-side/attributes/badge-enrichments.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/badge-enrichments.png\"\n         alt=\"badge enrichments.png\"\n         title=\"badge enrichments.png\"/>\n    </a>\n</figure></li>\n<li>From the drop-down list, select the badge you want to assign.\n<figure><a class=\"slb\" href=\"/images/server-side/attributes/select-a-badge-to-associate.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/select-a-badge-to-associate.png\"\n         alt=\"Select a badge to associate.png\"\n         title=\"Select a badge to associate.png\"/>\n    </a>\n</figure></li>\n<li>Repeat steps 2 - 4 to assign more badges.</li>\n<li>Click <strong>Finish</strong>.</li>\n<li>When you are done, save your profile to apply the changes.</li>\n</ol>\n<h3 id=\"using-the-badge-association-wizard-for-existing-badges-only\">Using the Badge Association Wizard (for existing badges only)</h3>\n<ol>\n<li>\n<p>In the <strong>Visitor / Visit Attributes</strong> table, click the badge to which you want to assign.</p>\n</li>\n<li>\n<p>Click the Badge Association icon in the top-right corner of the panel.<br>\n<figure><a class=\"slb\" href=\"/images/server-side/attributes/badge-association-icon.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/badge-association-icon.png\"\n         alt=\"badge association icon.png\"\n         title=\"badge association icon.png\"/>\n    </a>\n</figure></p>\n</li>\n<li>\n<p>Click the <code>+</code> icon and select the badge that you wish to assign.</p>\n</li>\n</ol>\n<figure><a class=\"slb\" href=\"/images/server-side/attributes/badge-select.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/badge-select.png\"\n         alt=\"Select a badge\"\n         title=\"Select a badge\"/>\n    </a>\n</figure>\n<h3 id=\"understanding-the-badge-association-wizard\">Understanding the badge association wizard</h3>\n<p>Click on an existing badge to display this wizard. You will notice the currently assigned badge is always in the center column with arrows on each side. The arrows always point in the direction of the recipient badge. You can assign any number of badges to the current and the recipient badge; however you can&rsquo;t reassign a recipient back to its source badge. Take a look at the example below.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/attributes/car-badge-example.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/car-badge-example.png\"\n         alt=\"Car badge example\"\n         title=\"Car badge example\"/>\n    </a>\n</figure>\n<p>The <strong>Car badge</strong> in the center is currently assigned to qualifying visitors. Here&rsquo;s how the other badge assignments will trigger.</p>\n<ol>\n<li>Qualifying visitors receive the <strong>Car badge</strong>.</li>\n<li><strong>Car badge</strong> visitors are automatically assigned <strong>Fancy cars</strong> and <strong>Electric</strong> badges.</li>\n<li><strong>Tesla</strong> badge visitors are automatically assigned <strong>Car badge</strong>, <strong>Fancy cars</strong>, and <strong>Electric cars</strong> badges.</li>\n<li><strong>Fun cars</strong> badge visitors are automatically assigned <strong>Car badge</strong>, <strong>Fancy cars</strong> and <strong>Electric</strong> badges.</li>\n</ol>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/boolean/",
            "title": "Boolean Attribute",
            "body": "<h2 id=\"how-it-works\">How it works</h2>\n<p>A boolean attribute is used to store the true or false value of a condition. For example, a boolean can store whether or not a visitor had added items to their cart or visited a specific section of site.</p>\n<p>The boolean attribute is available in the following scopes: Event, Visit, Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/attribute-scopes-table-all.png\"><img src=\"https://docs.tealium.com/images/server-side/attribute-scopes-table-all.png\" width=\"400\" height=\"110\"/>\n    </a>\n</figure>\n<h3 id=\"size-limits\">Size Limits</h3>\n<p>The size of a each boolean is not limited, but these attributes are still limited by the maximum size of the profile after encryption and compression (400 KB).</p>\n<h2 id=\"enrichments\">Enrichments</h2>\n<h3 id=\"set-boolean\">Set boolean</h3>\n<p>Use this enrichment to set the boolean attribute to true or false.</p>\n<p>This example shows how to know if a visitor has added an item to his/her cart using a boolean attribute named &ldquo;Did Add to Cart&rdquo;. Initialize the attribute by setting it to false at the beginning of each visit, then set it to true whenever the <code>cart_add</code> event occurs.</p>\n<p>Create two enrichments to achieve this:</p>\n<pre tabindex=\"0\"><code>Set to: false\nWHEN: New Visit\n</code></pre><pre tabindex=\"0\"><code>Set to: true\nWHEN: Any event\nRule: tealium_event equals &#34;cart_add&#34;\n</code></pre><p><strong>Attribute Name:</strong> Did Add to Cart</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li>\n<li><strong>Enriched With</strong>: <code>true</code></li>\n<li><strong>Resulting Value</strong> <code>true</code></li>\n</ul>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/date/",
            "title": "Date Attribute",
            "body": "<h2 id=\"how-it-works\">How it works</h2>\n<p>Use the date attribute to store important timestamps such as First Purchase Date, Last Checkout Date, or Last Visit date.</p>\n<p>The date attribute is available for the following scopes: Event, Visit and Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/attribute-scopes-table-all.png\"><img src=\"https://docs.tealium.com/images/server-side/attribute-scopes-table-all.png\"\n         alt=\"attribute-scopes-table-all.png\"\n         title=\"attribute-scopes-table-all.png\" width=\"400\" height=\"110\"/>\n    </a>\n</figure>\n<h2 id=\"date-formatter\">Date formatter</h2>\n<p>To convert a string attribute to a date, use the date formatter. Select the timestamp components from the date format panel that match the string values. For example, a string value such as <code>01/31/2020</code> can be converted to a date using a format of <code>MM/dd/yyyy</code>.</p>\n<p>Date and time string patterns:</p>\n<pre tabindex=\"0\"><code>G Era designator (BC, AD)\ny Year (for example: 12 or 2012). Use either yy or yyyy.\nM Month in year. Number of M&#39;s determine length of format. For example: MM, MMM or MMMMM.\nd Day in month. Number of d&#39;s determine length of format. For example: d or dd.\nh Hour of day, 1-12 (AM / PM) (normally hh)\nH Hour of day, 0-23 (normally HH)\nm Minute in hour, 0-59 (normally mm)\ns Second in minute, 0-59 (normally ss)\nS Millisecond in second, 0-999 (normally SSS)\na AM / PM marker\nz Time Zone\nZ RFC 822 Time Zone\n&#39; Escape for text delimiter\n&#39; Single quote\n</code></pre><p>Reference (with examples): <a href=\"https://docs.oracle.com/javase/6/docs/api/java/text/SimpleDateFormat.html\">SimpleDateFormat Java Class</a></p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>If the string includes a <code>T</code>, ensure that you include single quotes before and after the <code>T</code> in the expression (for example, a <code>2024-08-22T10:24:58.905</code> string will use the expression <code>yyyy-MM-dd'T'HH:mm:ss.SSS</code>).</p>\n<h3 id=\"size-limits\">Size Limits</h3>\n<p>The size of a each date attribute is limited to the following range:</p>\n<ul>\n<li>Minimum: <code>-292275055-05-16T16:47:04.192Z</code></li>\n<li>Maximum: <code>+292278994-08-17T07:12:55.807Z</code></li>\n</ul>\n<p>These attributes are also limited by the maximum size of the profile after encryption and compression (400 KB).</p>\n<h2 id=\"enrichments\">Enrichments</h2>\n<h3 id=\"capture-date\">Capture date</h3>\n<p>The Capture Date enrichment sets the attribute to the current timestamp at the time of an event condition. This enrichment is available for scopes: event, visit and visitor.</p>\n<p>For example, to capture the Last Purchase Date, use this enrichment with a rule that identifies a purchase event.</p>\n<p><strong>Attribute Name:</strong> Last Purchase Date</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li>\n<li><strong>Enriched With</strong>:</li>\n<li><strong>Resulting Value</strong>: <code>1491233145706</code></li>\n</ul>\n<h3 id=\"set-date\">Set date</h3>\n<p>The Set Date enrichment sets the attribute to the value of another attribute. If the other attribute is a string, use the <a href=\"#date-formatter\">Date Formatter</a> to convert it to a date. This enrichment is available for attributes: event, visit and visitor.</p>\n<p><strong>Attribute Name</strong>: Last Purchase Date</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li>\n<li><strong>Enriched with String</strong>: <code>01/04/2019</code></li>\n<li><strong>Using Format</strong>: <code>dd/MM/yyy</code></li>\n</ul>\n<p>When you use the <strong>Set date</strong> enrichment to set an EventStream date from another date attribute (EventStream or AudienceStream), you can use a placeholder for the format string. For example, in the <strong>Set Date</strong> enrichment, set the following:</p>\n<ul>\n<li><strong>Set date to</strong>: The date attribute you want to set the value to. In this example,<code>date_of_birth</code>.</li>\n<li><strong>with date format</strong>: Enter any placeholder, for example, <code>x</code>.</li>\n</ul>\n<figure><a class=\"slb\" href=\"/images/server-side/attributes/set_date_enrichment_example.png\"><img src=\"https://docs.tealium.com/images/server-side/attributes/set_date_enrichment_example.png\"\n         alt=\"Set date enrichment with placeholder date format value\"\n         title=\"Set date enrichment with placeholder date format value\"/>\n    </a>\n</figure>\n<h3 id=\"remove-date\">Remove date</h3>\n<p>The Remove Date enrichment erases the value of a date attribute. This enrichment is available for attributes: event, visit and visitor.</p>\n<p><strong>Attribute Name</strong>: Last Visit Date</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>1491233145706</code></li>\n<li><strong>Resulting Value</strong>: (Removed)</li>\n</ul>\n<h3 id=\"convert-from-date-format\">Convert from date format</h3>\n<p>The Format Date enrichment sets the value based on an expected date format of incoming values. This enrichment is used to convert string data types sent from the Collect tag or API into a date type. Use the <a href=\"#date-formatter\">Date Formatter</a> to convert the string data to a date.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>This enrichment is only available for event attributes.</p>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/funnel/",
            "title": "Funnel Attribute",
            "body": "<p>The funnel attribute is available in the following scopes: Visit and Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"\n         alt=\"Screenshot 2019-11-11 at 1.26.28 PM.png\"\n         title=\"Screenshot 2019-11-11 at 1.26.28 PM.png\"/>\n    </a>\n</figure>\n<h2 id=\"how-it-works\">How it works</h2>\n<p>The funnel attribute tracks a sequence of steps, measuring the visitor&rsquo;s progress from start to finish. A step is recorded when the configured rule occurs. When a step is recorded, attribute values can also be captured as a snapshot of information about the step. Funnel steps can be required or optional, except for the last step which is always required.</p>\n<p>Example funnels include: Checkout Funnel, Purchase Funnel, or a Lead-Generator Funnel.</p>\n<h3 id=\"size-limits\">Size Limits</h3>\n<p>There are no storage capacity limits for funnel attributes, but these attributes are still limited by the maximum size of the profile after encryption and compression (400 KB).</p>\n<h3 id=\"required-and-optional-steps\">Required and optional steps</h3>\n<p>When setting up a funnel, you define all the steps (both required and optional) in the expected sequence.</p>\n<h4 id=\"required-steps\">Required steps</h4>\n<p>Steps marked as required are recorded as they occur in the sequence that is defined in the funnel configuration. If a visitor performs a required step out of sequence, it is not recorded in the funnel. In other words, required steps are only recorded when they occur in sequence.</p>\n<p>Example funnel behavior with three required steps: Step #1, Step #2, Step #3:</p>\n<table>\n<thead>\n<tr>\n<th>Steps performed by visitor</th>\n<th>Steps recorded by funnel</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Step #1</td>\n<td>Step #1</td>\n</tr>\n<tr>\n<td>Step #3 (out of sequence)</td>\n<td>Step #1</td>\n</tr>\n<tr>\n<td>Step #2</td>\n<td>Step #1, Step #2</td>\n</tr>\n<tr>\n<td>Step #3</td>\n<td>Step #1, Step #2, Step #3</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"optional-steps\">Optional steps</h4>\n<p>Steps not marked as required are considered optional. Optional steps are only recorded if they occur in the exact sequence that is defined in the funnel. Optional steps can be skipped by the visitor and the funnel continues recording subsequent steps. However, when an optional step is skipped, and then performed later, it is not recorded or back-filled in the funnel. In other words, if an optional step is performed out of sequence, it is not recorded in the funnel.</p>\n<p>Example funnel behavior with one optional step: Step #1, Step #2 (optional), Step #3, and Step #4:</p>\n<table>\n<thead>\n<tr>\n<th>Steps performed by visitor</th>\n<th>Steps recorded by funnel</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Step #1</td>\n<td>Step #1</td>\n</tr>\n<tr>\n<td>Step #3 (option Step #2 skipped)</td>\n<td>Step #1, Step #3</td>\n</tr>\n<tr>\n<td>Step #2</td>\n<td>Step #1, Step #3 (Step #2 not back-filled)</td>\n</tr>\n<tr>\n<td>Step #3</td>\n<td>Step #1, Step #3</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"capture-attribute-data\">Capture attribute data</h3>\n<p>In addition to recording each step of a funnel, you can also capture the value of one or more attributes when a step occurs. Captured data provide more information about the state of the visitor when the step occurred.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Funnel attributes are accessible in AudienceStore, but not in AudienceDB or via Data Layer Enrichment.</p>\n<h2 id=\"enrichments\">Enrichments</h2>\n<h3 id=\"create-a-step\">Create a step</h3>\n<p>Use this enrichment to create a step in the funnel. As you add funnel steps, the step listed at the top of the list is the first step in the funnel and the step listed at the bottom is the last (required) step. New steps are added to the top of the list.</p>\n<p>To create a funnel step:</p>\n<ol>\n<li>Click <strong>Create a Step</strong>.</li>\n<li>Enter a step title.</li>\n<li>(Optional) To capture attribute values, select an attribute and click <strong>Add Attribute</strong>.</li>\n<li>For optional steps, clear the <strong>Is Required</strong> checkbox.</li>\n<li>Select a timing option and a rule.</li>\n</ol>\n<p>Repeat these steps for each step in the funnel.</p>\n<p>After entering all the steps, drag them into the proper sequence.</p>\n<h4 id=\"example\">Example</h4>\n<p>A basic purchase funnel: the path from a product page through the cart page and checkout page to the purchase page.</p>\n<p><strong>Step 1: View Product</strong>\nCapture Data: <code>product_name</code><br>\nRule: <code>tealium_event equals &quot;product_view&quot;</code></p>\n<p><strong>Step 2: View Cart</strong><br>\nCapture Data: none<br>\nRule: <code>tealium_event equals &quot;cart_view&quot;</code></p>\n<p><strong>Step 3: Checkout</strong><br>\nCapture Data: none<br>\nRule: <code>tealium_event equals &quot;checkout&quot;</code></p>\n<p><strong>Step 4: Purchase Complete</strong><br>\nCapture Data: <code>order_id</code> and <code>order_total</code><br>\nRule: <code>tealium_event equals &quot;purchase&quot;</code></p>\n<h2 id=\"usage-example\">Usage example</h2>\n<h3 id=\"free-trial-registration-funnel\">Free trial registration funnel</h3>\n<p>Let&rsquo;s assume you allow your visitors to try a premium product for free before buying it. The trial product, however, is only available to visitors who complete a simple, three-step registration process. You define all the steps in your Funnel and arrange them in the order the visitor must complete them. There are two ways to do this:</p>\n<ul>\n<li>Add them in the reverse chronological order.</li>\n<li>Or add them in a random order, then drag each step to the appropriate position.</li>\n</ul>\n<p>For this example, you will follow the reverse chronological method. Be certain to mark each step as &lsquo;Required&rsquo;. It&rsquo;s how you will know who successfully registered and who dropped off before the end.</p>\n<ol>\n<li>Add the Funnel Attribute. Give it a title and set the scope.</li>\n</ol>\n<pre tabindex=\"0\"><code>Funnel Title: Free Trial Registration\nFunnel Scope: Visitor\n</code></pre><ol start=\"2\">\n<li>Create the final step of the registration, one that brings the visitor to the &lsquo;Thank you&rsquo; page. Being the only step at this point, it is automatically set to Required. No Attribute data is captured here.</li>\n</ol>\n<pre tabindex=\"0\"><code>Title: Step 3-Trial Complete\nWHEN: ANY EVENT\nRule: Free Trial - Thanks\n  Current URL contains (ignore case) &#34;freetrialthanks.html&#34;\n</code></pre><ol start=\"3\">\n<li>Create the intermediate step that requires the visitor to click the &lsquo;Register&rsquo; button. This step is &lsquo;Required&rsquo; but no Attribute data is captured here.</li>\n</ol>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Prior to this step, you have to track the button with a jQuery listener and capture the category and action data when it is clicked by a visitor. In Tealium iQ, <a href=\"/iq-tag-management/data-layer/data-layer-variables/\">add two UDO variables</a>, <code>ga_category</code> and <code>ga_action</code>, then configure the <a href=\"/iq-tag-management/extensions/extensions-list/jquery-onhandler-extension/\">jQuery Extension</a>. Only then will the data sources be available to the rule condition.</p>\n<pre tabindex=\"0\"><code>Title: Step 2-Trial Engaged\nWHEN: ANY EVENT\nRule:\n  ga_category contains (ignore case) &#34;free trial&#34;\n  AND\n  ga_action contains &#34;engaged&#34;\n</code></pre><ol start=\"4\">\n<li>Create the first step that brings the visitor to the free trial registration page. This step is &lsquo;Required&rsquo; but no Attribute data is captured here.</li>\n</ol>\n<pre tabindex=\"0\"><code>Title: Step 1- Trial Landed\nWHEN: ANY EVENT\nRule: Free Trial Landing\n  Current URL contains (ignore case)&#34;freetrial.html&#34;\n</code></pre><h4 id=\"result\">Result</h4>\n<p>When a required step is completed, it is immediately funneled out while the visitor advances in the registration. This pattern of tracking and funneling continues until the visitor has successfully registered for the product. On the other hand, the registration is deemed incomplete should the visitor fail to complete any step in the Funnel.</p>\n<h3 id=\"conversion-funnel\">Conversion funnel</h3>\n<p>Create a funnel attribute name <code>Conversion Funnel</code>. Then click <strong>Create a Step</strong> for each step of the funnel.</p>\n<h4 id=\"step-1---viewed-a-product\">Step 1 - Viewed a Product</h4>\n<figure><a class=\"slb\" href=\"/images/server-side/funnel-3.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-3.png\"\n         alt=\"Funnel - Viewed a product\"\n         title=\"Funnel - Viewed a product\"/>\n    </a>\n</figure>\n<h4 id=\"step-2---viewed-cart-page\">Step 2 - Viewed Cart Page</h4>\n<figure><a class=\"slb\" href=\"/images/server-side/funnel-4.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-4.png\"\n         alt=\"Funnel - Viewed cart\"\n         title=\"Funnel - Viewed cart\"/>\n    </a>\n</figure>\n<h4 id=\"step-3---viewed-checkout-page-optional-as-the-user-may-already-be-logged-in\">Step 3 - Viewed Checkout Page (optional as the user may already be logged in)</h4>\n<figure><a class=\"slb\" href=\"/images/server-side/funnel-5.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-5.png\"\n         alt=\"Funnel - Viewed checkout page\"\n         title=\"Funnel - Viewed checkout page\"/>\n    </a>\n</figure>\n<p>The following steps are all required and mirror Step 2.</p>\n<h4 id=\"step-4---viewed-billing-page\">Step 4 - Viewed Billing Page</h4>\n<pre tabindex=\"0\"><code>page_name EQUALS billing\n</code></pre><h4 id=\"step-5---viewed-shipping-page\">Step 5 - Viewed Shipping Page</h4>\n<pre tabindex=\"0\"><code>page_name EQUALS shipping_method\n</code></pre><h4 id=\"step-6---viewed-payment-page\">Step 6 - Viewed Payment Page</h4>\n<pre tabindex=\"0\"><code>page_name EQUALS payment\n</code></pre><h4 id=\"step-7---viewed-order-review-page\">Step 7 - Viewed Order Review Page</h4>\n<pre tabindex=\"0\"><code>page_name EQUALS review\n AND\n page_type EQUALS checkout\n</code></pre><h4 id=\"step-8---viewed-order-success-page\">Step 8 - Viewed Order Success Page</h4>\n<pre tabindex=\"0\"><code>page_name EQUALS cart success\n AND\n order_id IS ASSIGNED\n</code></pre><h4 id=\"funnel-fallout\">Funnel fallout</h4>\n<p>Knowing where a user dropped from the funnel is an important piece to many marketing campaigns, and AudienceStream can tell you the last step completed.</p>\n<p>First, several rules must be created for each step of the funnel. For example the rule <code>Conversion Funnel - Step 1 Complete</code> checks if <code>Step 1 - Product</code> has been completed.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/no-title-1138i54b80adb945590ff.png\"><img src=\"https://docs.tealium.com/images/server-side/no-title-1138i54b80adb945590ff.png\"\n         alt=\"Check Step 1\"\n         title=\"Check Step 1\"/>\n    </a>\n</figure>\n<p>Then, create a string attribute named <code>Conversion Funnel - Last Step Completed</code>. This string attribute will have an enrichment for each step of the funnel and will check for each step of the funnel being completed using the rules above.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/funnel-7.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-7.png\"\n         alt=\"String attribute created\"\n         title=\"String attribute created\"/>\n    </a>\n</figure>\n<h4 id=\"abandonment\">Abandonment</h4>\n<p>Abandonment must be determined at the end of the session to ensure that all page views have been accounted for. This can be done by creating a badge titled <code>Cart Abandoner</code> that looks at the conversion funnel at the end of the visit and checks to see if the funnel was started but not completed.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/no-title-1140i2e61df3ec9067d5c.png\"><img src=\"https://docs.tealium.com/images/server-side/no-title-1140i2e61df3ec9067d5c.png\"\n         alt=\"Cart abandoned?\"\n         title=\"Cart abandoned?\"/>\n    </a>\n</figure>\n<p>We also want to remove the badge upon the <code>Page View</code> event when the conversion funnel is completed.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/funnel-8-remove-badge.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-8-remove-badge.png\"\n         alt=\"Remove badge\"\n         title=\"Remove badge\"/>\n    </a>\n</figure>\n<h4 id=\"audience\">Audience</h4>\n<p>We can then add an audience that makes use of the newly created badge. The audience should also verify we have some sort of identified about the customer, such as the email address, so that they are able to be targeted.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/funnel-9-audience.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-9-audience.png\"\n         alt=\"Create audience\"\n         title=\"Create audience\"/>\n    </a>\n</figure>\n<h4 id=\"action\">Action</h4>\n<p>This audience can now be used to trigger any connector (for example, to an ESP) to help get the customer back to the website and convert.</p>\n<p>The who: in our example this customer email address is used to tell the vendor who is the user.</p>\n<p>The what: we are telling the vendor the visitor abandoned the cart and at which step.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/funnel-10-action2.png\"><img src=\"https://docs.tealium.com/images/server-side/funnel-10-action2.png\"\n         alt=\"Funnel action 2\"\n         title=\"Funnel action 2\"/>\n    </a>\n</figure>\n<h4 id=\"trace\">Trace</h4>\n<p>To see how this works, perform a trace and navigate through each step of the conversion funnel.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/trace-2.png\"><img src=\"https://docs.tealium.com/images/server-side/trace-2.png\"\n         alt=\"Trace 3\"\n         title=\"Trace 3\" width=\"262\" height=\"263\"/>\n    </a>\n</figure>\n<p>Notice how the trait is updated to show the last step completed, and the funnel is updated to show all steps completed.</p>\n<p>Upon session end, the <code>Cart Abandoner</code> badge is assigned, the <code>Cart Abandoners</code> audience is joined, and related connectors are triggered.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/trace-part-1-enriched.png\"><img src=\"https://docs.tealium.com/images/server-side/trace-part-1-enriched.png\"\n         alt=\"Cart abandoner enriched\"\n         title=\"Cart abandoner enriched\"/>\n    </a>\n</figure>\n<figure><a class=\"slb\" href=\"/images/server-side/trace-part-2-enriched.png\"><img src=\"https://docs.tealium.com/images/server-side/trace-part-2-enriched.png\"\n         alt=\"Cart abandoner enriched 2\"\n         title=\"Cart abandoner enriched 2\"/>\n    </a>\n</figure>\n<figure><a class=\"slb\" href=\"/images/server-side/trace-audience.png\"><img src=\"https://docs.tealium.com/images/server-side/trace-audience.png\"\n         alt=\"Trace audience\"\n         title=\"Trace audience\"/>\n    </a>\n</figure>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/number/",
            "title": "Number Attribute",
            "body": "<p>The number attribute stores a numeric value for browsing metrics such as visits, page views, and events. Common examples include Lifetime Value, Order Total Transaction, or Days Since Last Purchase.</p>\n<h2 id=\"how-it-works\">How it works</h2>\n<p>Numeric values are stored as decimals or integers. Choose the type that matches your needs:</p>\n<ul>\n<li><strong>Decimal (default)</strong>\n<ul>\n<li>Decimal values can have zero or more decimal digits.</li>\n<li>For example: <code>12</code>, <code>12.0</code>, <code>12.345</code></li>\n<li>Decimal values use the Java Double class. For more information, see <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html\">Class Double</a>.</li>\n<li>Recommended for attributes that represent monetary values.</li>\n</ul>\n</li>\n<li><strong>Integer</strong>\n<ul>\n<li>Only whole number values are stored.</li>\n<li>For example: <code>12</code>, <code>-4</code>, <code>3214</code></li>\n<li>Useful for number attributes that represent quantities, counters, or scores.</li>\n</ul>\n</li>\n</ul>\n<p>The number attribute is available in the following scopes: Event, Visit, Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/scope-3checks.png\"><img src=\"https://docs.tealium.com/images/server-side/scope-3checks.png\"/>\n    </a>\n</figure>\n<h3 id=\"size-limits\">Size Limits</h3>\n<p>Decimal values of number attributes must be in the range of <code>-1.7976931348623157×10^308</code> to <code>1.7976931348623157×10^308</code>. Integer values of number attributes must be in the range of <code>-2147483647</code> to <code>2147483647</code>.</p>\n<p>Number attributes are also limited by the maximum size of the profile after encryption and compression (400 KB).</p>\n<h2 id=\"enrichments\">Enrichments</h2>\n<h3 id=\"increment-or-decrement-number-enrichment\">Increment or decrement number enrichment</h3>\n<p>This enrichment modifies a number with a positive value (increment) or a negative value (decrement). The modifying value can be a separate number attribute or a constant value.</p>\n<p>For example, to calculate the Lifetime Total Value (LTV) of a visitor&rsquo;s orders use this enrichment to increment the attribute with the value of the <code>order_total</code> attribute each time the <code>purchase</code> event occurs.</p>\n<p><strong>Attribute Name</strong>: Lifetime Total Value</p>\n<ul>\n<li><strong>Initial</strong>: <code>121.78</code></li>\n<li><strong>Enriched With</strong>:  order_total <code>220.00</code></li>\n<li><strong>Result</strong>: <code>341.78</code></li>\n</ul>\n<h3 id=\"set-ratio\">Set ratio</h3>\n<p>Set the quotient of two numbers as a new ratio number.</p>\n<p>For example, to calculate the Average Cart Items Per Order use this enrichment to set the ratio of the Total Cart Items Purchased attribute to the Total Orders Completed attribute.</p>\n<p><strong>Attribute Name</strong>: Average Cart Items Per Order</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>:<br>\nTotal Cart Items Purchased: <code>48.00</code><br>\nTotal Orders Completed: <code>3.00</code></li>\n<li><strong>Result</strong>: <code>16.00</code></li>\n</ul>\n<h3 id=\"set-product\">Set product</h3>\n<p>Set the product of two numbers as a new number.</p>\n<p>For example, to calculate the <code>coupon_discount_amount</code>, use this enrichment to multiply the <code>order_subtotal</code> by the <code>coupon_discount_percent</code>.</p>\n<p><strong>Attribute Name</strong>: <code>coupon_discount_amount</code></p>\n<ul>\n<li><strong>Initial</strong>:&mdash;</li>\n<li><strong>Enriched With</strong>:<br>\norder_subtotal: <code>42.00</code><br>\ncoupon_discount_percent: <code>0.05</code></li>\n<li><strong>Result</strong>: <code>2.10</code></li>\n</ul>\n<h3 id=\"set-difference\">Set difference</h3>\n<p>Set the difference of two numbers as a new number.</p>\n<p><strong>Attribute Name</strong>: <code>order_subtotal</code></p>\n<ul>\n<li><strong>Initial</strong>: <code>42.00 </code></li>\n<li><strong>Enriched With</strong>:<br>\norder_subtotal: <code>42.00</code><br>\ncoupon_discount_amount: <code>2.10</code></li>\n<li><strong>Result</strong>: <code>39.90</code></li>\n</ul>\n<h3 id=\"set-sum\">Set sum</h3>\n<p>Set to the sum of two numbers.</p>\n<p>For example, set <code>order_total</code> to the sum of <code>order_subtotal</code> and <code>order_tax_amount</code>.</p>\n<p><strong>Attribute Name</strong>: <code>order_total</code></p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>:<br>\norder_subtotal: <code>39.90</code><br>\norder_tax_amount: <code>3.29</code></li>\n<li><strong>Result</strong>: <code>43.19</code></li>\n</ul>\n<h3 id=\"set-number\">Set number</h3>\n<p>Set the number to a specific number.</p>\n<p>For example, set Last Purchase Amount to the value of <code>order_total</code> whenever the <code>purchase</code> event occurs.</p>\n<p><strong>Attribute Name</strong>: Last Purchase Amount</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: order_total:<code>43.19</code></li>\n<li><strong>Result</strong>: <code>43.19</code></li>\n</ul>\n<h3 id=\"set-difference-between-two-dates\">Set difference between two dates</h3>\n<p>(AudienceStream only)</p>\n<p>Calculates the elapsed time between two events. Elapsed time can be expressed as one of the following:</p>\n<ul>\n<li>Minutes</li>\n<li>Hours</li>\n<li>Days</li>\n<li>Weeks</li>\n<li>Months</li>\n</ul>\n<p>The difference is always stored as a positive value, so the dates can be set in any order.</p>\n<p>For example, to calculate Days Since Last Purchase as the difference in days between Last Purchase Date and Current Visit Date.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>While date attributes are stored as Unix timestamps, these examples use formatted dates for readability.</p>\n<p><strong>Attribute Name</strong>: Days Since Last Purchase</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>:<br>\nLast Purchase Date: <code>&quot;2018/10/30&quot;</code><br>\nCurrent Visit Date: <code>&quot;2019/11/01&quot;</code></li>\n<li><strong>Result</strong>: <code>367</code></li>\n</ul>\n<h3 id=\"set-rolling-average-based-on-timeline\">Set rolling average based on timeline</h3>\n<p>(AudienceStream only)</p>\n<p>The rolling average is the arithmetic mean of numerical values captured over time. These values come from number and <a href=\"/server-side/attributes/data-types/tally/\">tally</a> attributes that are collected as entries in a <a href=\"/server-side/attributes/data-types/timeline/\">timeline</a>. The timeline&rsquo;s expiration determines which entries can be factored into the final average. If there is not an expiration date, it is a simple average solution.</p>\n<p><strong>Attribute Name</strong>: Average Order Value</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: <code>[20.00, 30.00, 40.00, 50.00]</code></li>\n<li><strong>Result</strong>: <code>35.00</code></li>\n</ul>\n<h3 id=\"set-rolling-sum-based-on-timeline\">Set rolling sum based on timeline</h3>\n<p>(AudienceStream only)</p>\n<p>A rolling sum is the aggregate of numerical values in a number or <a href=\"/server-side/attributes/data-types/tally/\">tally</a> attribute that are captured as entries in a <a href=\"/server-side/attributes/data-types/timeline/\">timeline</a>. The timeline&rsquo;s expiration determines which entries can be factored in during the aggregation.</p>\n<p><strong>Attribute Name</strong>: Total Order Value</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li>\n<li><strong>Result</strong>: <code>150.00</code></li>\n</ul>\n<h3 id=\"set-number-to-the-number-of-entries-in-timeline\">Set number to the number of entries in timeline</h3>\n<p>Set the number to the number of entries in a timeline.</p>\n<p><strong>Attribute Name</strong>: Total Order Count</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li>\n<li><strong>Result</strong>: <code>5.00</code></li>\n</ul>\n<h3 id=\"set-number-to-tally-value\">Set number to tally value</h3>\n<p>(AudienceStream only)</p>\n<p>Set the number to a specific value within the tally. Specify the tally attribute and the name of the entry in the tally. For example, a tally for Site Category Views might have an entry for &ldquo;Shoes&rdquo;.</p>\n<p><strong>Attribute Name</strong>: Shoe Category View Count</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: Site Category Views: <code>{&quot;Shoes&quot;: 42}</code></li>\n<li><strong>Result</strong>: <code>42</code></li>\n</ul>\n<h3 id=\"set-number-to-the-count-of-items-in-tally\">Set number to the count of items in tally</h3>\n<p>(AudienceStream only)</p>\n<p>Set the attribute to the number of entries in a tally. For example, a tally for Site Category Views might have three entries in it.</p>\n<p><strong>Attribute Name</strong>: Number of Categories Viewed</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>:</li>\n</ul>\n<pre tabindex=\"0\"><code>{  \n  &#34;Shoes&#34;: 42,  \n  &#34;Shirts&#34;: 11,  \n  &#34;Pants&#34;: 8\n} \n</code></pre><ul>\n<li><strong>Result</strong>: <code>3.00</code></li>\n</ul>\n<h3 id=\"set-number-to-the-count-of-items-in-set-of-strings\">Set number to the count of items in set of strings</h3>\n<p>(AudienceStream only)</p>\n<p>Set the number to the count of items in a set of strings. For example, a set of strings Active Browser Types might have three entries.</p>\n<p><strong>Attribute Name</strong>: Number of Active Browser Types</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: <code>[&quot;Firefox&quot;, &quot;Safari&quot;, &quot;Chrome&quot;]</code></li>\n<li><strong>Result</strong>: <code>3.00</code></li>\n</ul>\n<h3 id=\"set-number-to-tallys-rolling-max-based-on-a-timeline\">Set number to tally&rsquo;s rolling max based on a timeline</h3>\n<p>(AudienceStream only)</p>\n<p>Set the number to the rolling maximum of another number in a tally captured within a timeline.</p>\n<p><strong>Attribute Name</strong>: Highest Order Value</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: <code>[10.00, 20.00, 30.00, 40.00, 50.00]</code></li>\n<li><strong>Result</strong>: <code>50.00</code></li>\n</ul>\n<h3 id=\"set-number-to-change-in-number\">Set number to change in number</h3>\n<p>(AudienceStream only)</p>\n<p>Set this attribute to the difference between it and another attribute since the last event. For example, use this enrichment to capture the difference between a previous order amount and the current order amount. To set an attribute named Change in Order Value, set it to the change in <code>order_subtotal</code> since the previous order.</p>\n<p><strong>Attribute Name</strong>: Change in Order Value</p>\n<ul>\n<li><strong>Initial</strong>: <code>30.00 </code></li>\n<li><strong>Enriched With</strong>: order_subtotal: <code>42.00</code></li>\n<li><strong>Result</strong>: <code>12.00</code></li>\n</ul>\n<h3 id=\"set-number-to-change-in-date\">Set number to change in date</h3>\n<p>(AudienceStream only)</p>\n<p>Set this attribute to the change in value of the selected value between this event and the last event. For example, use this enrichment to capture the change in months of the Last Purchase Date date attribute each time a purchase occurs.</p>\n<p>The change in date can be expressed as one of the following:</p>\n<ul>\n<li>Minutes</li>\n<li>Hours</li>\n<li>Days</li>\n<li>Weeks</li>\n<li>Months</li>\n</ul>\n<p><strong>Attribute Name</strong>: Months Since Last Purchase</p>\n<ul>\n<li><strong>Initial</strong>:</li>\n<li><strong>Enriched With</strong>:<br>\nLast Purchase Date (last event): <code>&quot;10/31/2019&quot;</code><br>\nLast Purchase Date (this event): <code>&quot;12/31/2019&quot;</code></li>\n<li><strong>Result</strong>: 2 (months)</li>\n</ul>\n<h3 id=\"set-to-number-based-on-average-of-an-array-of-numbers\">Set To Number Based On Average of An Array of Numbers</h3>\n<p>(EventStream only)</p>\n<p>Set this attribute to the average of an array of numbers.</p>\n<p><strong>Attribute Name</strong>: Average Purchase Price</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: <code>[20.00, 25.00, 30.00, 35.00, 40.00]</code></li>\n<li><strong>Result</strong>: <code>30.00</code></li>\n</ul>\n<h3 id=\"set-to-number-based-on-max-of-an-array-of-numbers\">Set To Number Based On Max of An Array of Numbers</h3>\n<p>(EventStream only)</p>\n<p>Set this attribute to the maximum value within an array of numbers.</p>\n<p><strong>Attribute Name</strong>: Most Expensive Product Purchased</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: <code>[20.00, 25.00, 30.00, 35.00, 40.00]</code></li>\n<li><strong>Result</strong>: <code>40.00</code></li>\n</ul>\n<h3 id=\"set-to-number-based-on-min-of-an-array-of-numbers\">Set To Number Based On Min of An Array of Numbers</h3>\n<p>(EventStream only)</p>\n<p>Set this attribute to the minimum value within an array of numbers.</p>\n<p><strong>Attribute Name</strong>: Least Expensive Product Purchased</p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: <code>[20.00, 25.00, 30.00, 35.00, 40.00]</code></li>\n<li><strong>Result</strong>: <code>20.00</code></li>\n</ul>\n<h3 id=\"set-to-the-number-of-items-in-an-array\">Set to the number of items in an array</h3>\n<p>Set to the number of items in an array. For example, to store the number of products in the cart, use this enrichment to capture the number of items in the <code>cart_product_id</code> array.</p>\n<p><strong>Attribute Name</strong>: <code>num_cart_items</code></p>\n<ul>\n<li><strong>Initial</strong>: &mdash;</li>\n<li><strong>Enriched With</strong>: product_id: <code>[&quot;prod123&quot;, &quot;prod456&quot;]</code></li>\n<li><strong>Result</strong>: <code>2.00</code></li>\n</ul>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/popular-badges/",
            "title": "Popular Badges",
            "body": "<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Badge</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badge-browseabandoner.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badge-browseabandoner.png\" class=\"noshadow\" width=\"78\" height=\"77\"/>\n    </a>\n</figure><br> Browse Abandoner</td>\n<td><ul><li><strong>Rule</strong> – A visitor who has viewed a product and did not add an item to the cart.</li><li><strong>Action</strong> – If a Known Visitor and Facebook ID is known, send data to Facebook to retarget the brand to the visitor.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges%29business-family.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges%29business-family.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>\n    </a>\n</figure><br> Business/Family Traveler</td>\n<td><ul><li><strong>Rule</strong> – Assign when the visitor marks their travel type.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-cartabandoner.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-cartabandoner.png\" class=\"noshadow\" width=\"79\" height=\"79\"/>\n    </a>\n</figure><br> Cart Abandoner</td>\n<td><ul><li><strong>Rule</strong> – A visitor who has added an item to the cart and did not purchase.</li><li><strong>Action</strong> – If email address is known, send a personalized email with the abandoned items.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-couponcodeabuser.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-couponcodeabuser.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>\n    </a>\n</figure><br> Coupon Code Abuser</td>\n<td><ul><li><strong>Rule</strong> – A visitor attempts to use more than a certain number of coupon or promotion codes in a single visit.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-bades-couponcodestuffer.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-bades-couponcodestuffer.png\" class=\"noshadow\" width=\"79\" height=\"79\"/>\n    </a>\n</figure><br> Coupon Code Stuffer</td>\n<td><ul><li><strong>Rule</strong> – A visitor has successfully used more than a certain number of coupon or promotion codes across all visits.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-disappointedshopper.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-disappointedshopper.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>\n    </a>\n</figure><br> Disappointed Shopper</td>\n<td><ul><li><strong>Rule</strong> – Assign when a visitor views a product that is currently out of stock.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-freetrialuser.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-freetrialuser.png\"\n         alt=\"Badges-Free-Trial-User.png\"\n         title=\"Badges-Free-Trial-User.png\" class=\"noshadow\" width=\"77\" height=\"77\"/>\n    </a>\n</figure><br> Free Trial User</td>\n<td><ul><li><strong>Rule</strong> – Assign when a visitor has signed up for a Free Trial.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-frequenttraveler.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-frequenttraveler.png\" class=\"noshadow\" width=\"79\" height=\"78\"/>\n    </a>\n</figure><br> Frequent Traveler</td>\n<td><ul><li><strong>Rule</strong> – Assign when the visitor has traveled more than a certain number of times over a given time period, for example: Visitor has traveled 5 times in the last 12 weeks.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-knownvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-knownvisitor.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>\n    </a>\n</figure><br> Known Visitor</td>\n<td><ul><li><strong>Rule</strong> – Assigned when we capture an important identifier of the visitor, for example: Customer ID (client&rsquo;s ID), Customer Email, Facebook ID. These visitors commonly targeted via email or social media</li><li><strong>Action</strong> – None, but used in an Audience to ensure the visitor is targetable with a selected vendor API.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-loyalvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-loyalvisitor.png\" class=\"noshadow\" width=\"77\" height=\"77\"/>\n    </a>\n</figure><br> Loyal Visitor</td>\n<td><ul><li><strong>Rule</strong> – Assign when a visitor has a certain number of direct visits to the site.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-newvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-newvisitor.png\" class=\"noshadow\" width=\"92\" height=\"92\"/>\n    </a>\n</figure><br> New Visitor</td>\n<td><ul><li><strong>Rule</strong> – Assign when &ldquo;Lifetime visit count&rdquo; equals 1.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-purchaser.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-purchaser.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>\n    </a>\n</figure><br> Purchaser</td>\n<td><ul><li><strong>Rule</strong> – A visitor who has converted, for example: purchased a product or signed up for a service.</li><li><strong>Action</strong> – Email in 2 weeks with an offer enticing to make another purchase or an email showing related items for purchase, for example if the visitor bought a baseball bat offer a baseball bag and batting gloves.</li><li><strong>Action</strong> – Remove visitor from retargeting campaign so they are not remarketed unnecessarily.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-recentvipvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-recentvipvisitor.png\" class=\"noshadow\" width=\"77\" height=\"78\"/>\n    </a>\n</figure><br> Recent VIP Visitor</td>\n<td><ul><li><strong>Rule</strong> – Assign when their rolling 90-day purchase value is over a certain dollar amount.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-salesearcher.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-salesearcher.png\" class=\"noshadow\" width=\"78\" height=\"79\"/>\n    </a>\n</figure><br> Sale Searcher</td>\n<td><ul><li><strong>Rule</strong> – Assigned when a visitor views more than a certain number of sale pages, no matter whether is the sales category or a product on sale.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badge-browseabandoner.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badge-browseabandoner.png\" class=\"noshadow\" width=\"78\" height=\"77\"/>\n    </a>\n</figure><br> Search Abandoner</td>\n<td><ul><li><strong>Rule</strong> – A visitor who has landed on the site from a search engine and has not shown completed a common action, such as viewing at least 3 pages in the visit.</li><li><strong>Action</strong> – Determine the category searched and retarget with a Display Ad vendor.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-siteresearcher.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-siteresearcher.png\" class=\"noshadow\" width=\"76\" height=\"76\"/>\n    </a>\n</figure><br> Site Researcher</td>\n<td><ul><li><strong>Rule</strong> – Assign when a visitor has more than a certain number of visits to the site and the average visit duration is over a specific number of minutes.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-testuser.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-testuser.png\" class=\"noshadow\" width=\"78\" height=\"77\"/>\n    </a>\n</figure><br> Test User</td>\n<td><ul><li><strong>Rule</strong> – Assigned when &ldquo;test&rdquo; is in the URL, or debug cookie is set, or some other criteria that indicates a test visitor.</li><li>Allows an Audience and Action to be tested in production before a campaign goes live to ensure setup is correct.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-unknownvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-unknownvisitor.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>\n    </a>\n</figure><br> Unknown Visitor</td>\n<td><ul><li><strong>Rule</strong> – Assigned when the visitor has yet to authenticate on the website. Authenticate does not necessarily mean they have logged in, if a visitor comes to the site from an email and the email is in the URL then we&rsquo;ve determined who the visitor is and they have &ldquo;authenticated&rdquo;,</li><li><strong>Action</strong> – Display a modal to the visitor encouraging them to identify themselves. These visitors are more commonly targeted via Display Ad.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-recentvipvisitor.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-recentvipvisitor.png\" class=\"noshadow\" width=\"77\" height=\"78\"/>\n    </a>\n</figure><br> VIP Visitor</td>\n<td><ul><li><strong>Rule</strong> – Assign when lifetime purchase value has increased to a certain dollar amount.</li></ul></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><figure class=\"dib\"><a class=\"slb\" href=\"/images/server-side/whiteui-badges-windowshopper.png\"><img src=\"https://docs.tealium.com/images/server-side/whiteui-badges-windowshopper.png\" class=\"noshadow\" width=\"78\" height=\"78\"/>\n    </a>\n</figure><br> Window Shopper</td>\n<td><ul><li><strong>Rule</strong> – A visitor who visits the site often but does not purchase, for example: a visitor who has been to the site 3 times in the last 7 days, has viewed a product details page or read an article, and has not purchased or signed up for a service.</li><li><strong>Action</strong> – Determine their affinity to a category and change the landing page of the next session to personalize the experience.</li></ul></td>\n</tr>\n</tbody>\n</table>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/set-of-strings/",
            "title": "Set of Strings Attribute",
            "body": "<h2 id=\"how-it-works\">How it works</h2>\n<p>Values in a set are only stored once, regardless of the number of times they occur for the visitor or visit. The set of strings attribute is most commonly used for product categories viewed, pages viewed, and products purchased.</p>\n<p>Examples:</p>\n<table>\n<thead>\n<tr>\n<th>Attribute name</th>\n<th>Values</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Product Categories Viewed</td>\n<td>&ldquo;Home Improvement&rdquo;, &ldquo;Electronics&rdquo;, &ldquo;Apparel&rdquo;, &ldquo;Kitchen&rdquo;</td>\n</tr>\n<tr>\n<td>Browsers Used</td>\n<td>&ldquo;Chrome&rdquo;, &ldquo;Safari&rdquo;</td>\n</tr>\n<tr>\n<td>Cart Items</td>\n<td>&ldquo;iPad&rdquo;, &ldquo;Screen Protector&rdquo;, &ldquo;Headphones&rdquo;</td>\n</tr>\n</tbody>\n</table>\n<p>The set of strings attribute is available in the following scopes: Visit and Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"/>\n    </a>\n</figure>\n<h3 id=\"size-limits\">Size limits</h3>\n<p>Sets of strings are limited to 30,000 strings. The size of a each string is not limited, but these attributes are still limited by the maximum size of the profile after encryption and compression (400 KB).</p>\n<h2 id=\"enrichments\">Enrichments</h2>\n<h3 id=\"add-to-set-of-strings\">Add to Set of Strings</h3>\n<p>Add a string value to a set of strings. Adds only unique strings.</p>\n<p><strong>Attribute Name</strong>: <code>product_category</code></p>\n<ul>\n<li><strong>Starting Value</strong>:  <code>&quot;Home Improvement&quot;, &quot;Electronics&quot;, &quot;Kitchen&quot;</code></li>\n<li><strong>Enriched With</strong>: <code>&quot;Apparel&quot;, &quot;Electronics&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;Home Improvement&quot;, &quot;Electronics&quot;, &quot;Kitchen&quot;, &quot;Apparel&quot;</code></li>\n</ul>\n<p>The result ignores the &ldquo;Electronics&rdquo; item because it exists already in the set of strings.</p>\n<h3 id=\"store-array-as-set-of-strings\">Store Array as Set of Strings</h3>\n<p>This enrichment is used to save the values from an array of strings attribute into a set of strings attribute. All duplicate elements in the array are ignored in the new set, which permits only unique strings.</p>\n<p><strong>Attribute Name</strong>: <code>Product Categories Viewed</code></p>\n<ul>\n<li><strong>Starting Value</strong>:  <code>&quot;Kitchen&quot;</code></li>\n<li><strong>Enriched With</strong>: <code>[&quot;Home Improvement&quot;, &quot;Electronics&quot;, &quot;Kitchen&quot;]</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;Home Improvement&quot;, &quot;Electronics&quot;, &quot;Kitchen&quot;</code></li>\n</ul>\n<h3 id=\"update-set-of-strings-by-set-of-strings\">Update Set of Strings By Set of Strings</h3>\n<p>This enrichment appends the values from another set of strings attribute into the set of strings. For example, to track the product categories that a visitor purchases from you might have two set of strings attributes named &ldquo;Categories Purchased&rdquo;, with one scoped to visit to capture when the purchase occurs and one scoped to visitor to store the master set.</p>\n<table>\n<thead>\n<tr>\n<th><strong>Visit: Categories Purchased</strong></th>\n<th><strong>Visitor: Categories Purchased</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>&quot;Electronics&quot;</code></td>\n<td><code>&quot;Electronics&quot;</code></td>\n</tr>\n<tr>\n<td><code>&quot;Kitchen&quot;, &quot;Apparel&quot;</code></td>\n<td><code>&quot;Electronics&quot;, &quot;Kitchen&quot;, &quot;Apparel&quot;</code></td>\n</tr>\n<tr>\n<td><code>&quot;Kitchen&quot;, &quot;Electronics&quot;</code></td>\n<td><code>&quot;Electronics&quot;, &quot;Kitchen&quot;, &quot;Apparel&quot;</code></td>\n</tr>\n</tbody>\n</table>\n<p>While the set of strings scoped to visit is overwritten with new values each time, the enrichment copies those values into the set of strings scoped to visitor where the master list expands, storing each unique value encountered.</p>\n<p><strong>Attribute Name</strong>: <code>Product Category Purchased</code></p>\n<ul>\n<li><strong>Starting Value</strong>:  <code>&quot;Electronics&quot;</code></li>\n<li><strong>Enriched With</strong>: <code>&quot;Home Improvement&quot;, &quot;Electronics&quot;, &quot;Kitchen&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;Electronics&quot;, &quot;Home Improvement&quot;, &quot;Kitchen&quot;</code></li>\n</ul>\n<h3 id=\"difference-between-two-sets-of-strings\">Difference Between Two Sets of Strings</h3>\n<p>Create a new set of strings attribute that contains the items from one set of strings that do not appear in another set of strings. For example, to find the categories that a customer browsed, but did not purchase from, use this enrichment to find the difference between &ldquo;Categories Browsed&rdquo; and &ldquo;Categories Purchased&rdquo;.</p>\n<p>Example:</p>\n<p>Find values present in: <code>Categories Browsed</code> and that are not in: <code>Categories Purchased</code>.</p>\n<p><strong>Attribute Name</strong>: <code>Browsed Categories Not Purchased</code></p>\n<ul>\n<li><strong>Starting Value</strong>:</li>\n<li><strong>Enriched With</strong>:  &ldquo;Categories Browsed&rdquo;: <code>&quot;Home Improvement&quot;, &quot;Kitchen&quot;, &quot;Windows&quot;</code> &ldquo;Categories Purchased&rdquo;: <code>&quot;Home Improvement&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;Kitchen&quot;, &quot;Windows&quot;</code></li>\n</ul>\n<h3 id=\"remove-set-of-strings\">Remove Set of Strings</h3>\n<p>Remove a set of strings based on a set of conditions. This is the equivalent of deleting the set.</p>\n<p><strong>Attribute Name</strong>: <code>product_category</code></p>\n<ul>\n<li><strong>Starting Value</strong>:  <code>&quot;Home Improvement&quot;, &quot;Kitchen&quot;, &quot;Windows&quot;</code></li>\n<li><strong>Resulting Value</strong>: (Removed)</li>\n</ul>\n<h3 id=\"lowercase-set-of-strings\">Lowercase Set of Strings</h3>\n<p>Lowercase a set of strings based on a set of conditions.</p>\n<p><strong>Attribute Name</strong>: <code>product_category</code></p>\n<ul>\n<li><strong>Starting Value</strong>:  <code>&quot;Home Improvement&quot;, &quot;Electronics&quot;, &quot;Kitchen&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;home improvement&quot;, &quot;electronics&quot;, &quot;kitchen&quot;</code></li>\n</ul>\n<h3 id=\"set-to-top-tally-items\">Set to Top Tally Items</h3>\n<p>Create a set of strings using the highest valued items from a tally. For example, to track the three most viewed products, create a set of strings to capture the top three entries from a tally attribute that tracks the occurrences of viewed products.</p>\n<p><strong>Attribute Name</strong>: <code>Top 3 Products Viewed</code></p>\n<ul>\n<li><strong>Starting Value</strong>:  &ndash;</li>\n<li><strong>Enriched With</strong>: Top 3 Items in &ldquo;Viewed Products&rdquo;: <br> <code>{ &quot;AirPods Pro&quot; : 3 &quot;iPhone 10&quot; : 6 &quot;iPhone Case&quot; : 10 &quot;MacBook Pro&quot; : 1 &quot;iMac&quot; : 2 }</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;iPhone Case&quot;, &quot;iPhone 10&quot;, &quot;AirPods Pro&quot;</code></li>\n</ul>\n<h3 id=\"set-to-tally-items-above-target-value\">Set to Tally Items Above Target Value</h3>\n<p>Create a set of strings using the items from a tally whose values are above a set threshold. For example, to track products that have been viewed more than 20 times, create a set of strings to capture the entries from a tally attribute that tracks the occurrences of viewed products.</p>\n<p><strong>Attribute Name</strong>: <code>Products Viewed 20+ Times</code></p>\n<ul>\n<li><strong>Starting Value</strong>: &ndash;</li>\n<li><strong>Enriched With</strong>:  Items in &ldquo;Products Viewed&rdquo; that are greater than 20: <br><code>{  &quot;AirPods Pro&quot; : 21,  &quot;iPhone 10&quot; : 35, &quot;iPhone Case&quot; : 12, &quot;MacBook Pro&quot; : 1 &quot;iMac&quot; : 2 }</code></li>\n<li><strong>Resulting Value</strong>:  <code>&quot;iPhone 10&quot;, &quot;AirPods Pro&quot;</code></li>\n</ul>\n<h3 id=\"remove-entry-from-set-of-strings\">Remove Entry from Set of Strings</h3>\n<p>Remove an entry from a set of strings based on a set of conditions. For example, remove the entry &ldquo;iPhone Case&rdquo; from a set of strings that tracks a product wishlist because it has been purchased.</p>\n<p><strong>Attribute Name</strong>: <code>Product Wishlist</code></p>\n<ul>\n<li><strong>Starting Value</strong>:  <code>&quot;iPhone 10&quot;, &quot;AirPods Pro&quot;, &quot;iPhone Case&quot;</code></li>\n<li><strong>Enriched With</strong>:  Remove <code>purchased_product</code> (value &ldquo;iPhone Case&rdquo;)</li>\n<li><strong>Resulting Value</strong>: <code>&quot;iPhone 10&quot;, &quot;AirPods Pro&quot;</code></li>\n</ul>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/string/",
            "title": "String Attribute",
            "body": "<h2 id=\"how-it-works\">How it works</h2>\n<p>Strings are used for customer information such as First Name and Postal Code, order information such as Order ID and Shipping Method, or site information such as Site Section or Site Language.</p>\n<p>The string attribute is available in the following scopes: Event, Visit, Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/attribute-scopes-table-all.png\"><img src=\"https://docs.tealium.com/images/server-side/attribute-scopes-table-all.png\"\n         alt=\"attribute-scopes-table-all.png\"\n         title=\"attribute-scopes-table-all.png\"/>\n    </a>\n</figure>\n<h3 id=\"size-limits\">Size limits</h3>\n<p>EventStream string attributes have a maximum length of 1,500 characters. Strings are truncated to 1,500 characters if they exceed this limit.</p>\n<p>AudienceStream string attributes values have a maximum length of 1,000 characters. If an enrichment results in a string larger than 1,000 characters, the value is not saved.</p>\n<p>String attributes are also limited by the maximum size of the profile after encryption and compression (400 KB).</p>\n<h2 id=\"enrichments\">Enrichments</h2>\n<p>The following enrichments are available to string attributes.</p>\n<h3 id=\"set-string\">Set string</h3>\n<p>This enrichment sets the value of a string attribute, either from a constant value you provide or from the value of another string attribute. The source values can only be a string, iQ variable, or Omnichannel attribute.</p>\n<p><strong>Attribute Name</strong>: <code>customer_type</code></p>\n<ul>\n<li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li>\n<li><strong>Enriched With</strong>: <code>&quot;unknown&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;unknown&quot;</code></li>\n</ul>\n<h3 id=\"split-string\">Split string</h3>\n<p>This enrichment allows you to set multiple values based on a distribution percentage. Each value you set also has a percentage setting. There can be multiple value/percentage entries, but the distribution must total 100%. The distribution is based on a random number generator, so smaller samples might not match the distribution, but as more values are assigned the distribution ratio will become more accurate. The source values can only be a string, iQ variable, or Omnichannel attribute.</p>\n<p>In this example an attribute named <code>test_group</code> is used to segment users into two equal groups (50/50), one named &ldquo;GroupA&rdquo; and the other &ldquo;GroupB&rdquo;. This attribute can then be used to identify activity associated with each group.</p>\n<p><strong>Attribute Name</strong>: <code>test_group</code></p>\n<ul>\n<li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li>\n<li><strong>Resulting Value</strong>: Set string&rsquo;s value to <code>&quot;GroupA&quot;</code> for <code>50%</code> of string population<br> Set string&rsquo;s value to <code>&quot;GroupB&quot;</code> for <code>50%</code> of string populartion</li>\n</ul>\n<p>See also: <a href=\"https://support.tealiumiq.com/en/support/solutions/articles/36000363487-enrichment-example-split-string\">Enrichment Example: Split String</a></p>\n<h3 id=\"remove-string\">Remove string</h3>\n<p>This enrichment removes the entire value from the attribute.</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>&quot;Jane Smith&quot;</code></li>\n<li><strong>Resulting Value</strong>: (Removed)</li>\n</ul>\n<h3 id=\"lowercase-string\">Lowercase string</h3>\n<p>This enrichment will lowercase the current value of the string attribute.</p>\n<p><strong>Attribute Name</strong>: <code>email_address</code></p>\n<ul>\n<li><strong>Starting Value</strong>: <code>&quot;First.Last@Example.com&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;first.last@example.com&quot;</code></li>\n</ul>\n<h3 id=\"join-attributes\">Join attributes</h3>\n<p>This enrichment joins multiple values with a delimiter to form a single text value. The delimiter can be one or more characters. For example, you could create a page hierarchy value by combining <code>site_section</code>, <code>page_category</code>, and other page level attributes.</p>\n<p><strong>Attribute Name</strong>: <code>page_path</code></p>\n<ul>\n<li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li>\n<li><strong>Enriched With</strong>:<br>\nAttribute 1: <code>site_region=&quot;en-us&quot;</code><br>\nAttribute 2: <code>site_section=&quot;Electronics&quot;</code><br>\nAttribute 3: <code>category_name=&quot;Tablets&quot;</code><br>\nDelimiter: <code>&quot;:&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;en-us:Electronics:Tablets&quot;</code></li>\n</ul>\n<h3 id=\"set-string-to-date\">Set string to date</h3>\n<p>This enrichment converts the value of a string attribute to a date and allows for custom formatting (<a href=\"/server-side/attributes/data-types/date/\">learn more about the date formatter</a>). The source values can be a date, string, iQ variable, or file import attribute.</p>\n<p><strong>Attribute Name</strong>: <code>last_purchase_date</code></p>\n<ul>\n<li><strong>Starting Value</strong>: <code>&quot;&quot;</code></li>\n<li><strong>Enriched With</strong>: Last Login Date with format <code>&quot;yyy-MM-dd&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>&quot;2019-12-31&quot;</code></li>\n</ul>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/tally/",
            "title": "Tally Attribute",
            "body": "<h2 id=\"how-it-works\">How it works</h2>\n<p>The tally attribute stores a collection of key-value pairs that count the occurrences of named items across many events.</p>\n<p>For example, to keep track of the product categories that a visitor purchases from, use a tally named &ldquo;Product Category Purchases&rdquo; and enrich it with the names of product categories found in the event attribute <code>product_category</code> when purchase events occur. Over time the tally will provide valuable information about the visitor&rsquo;s buying habits.</p>\n<table>\n<thead>\n<tr>\n<th>Tally Key</th>\n<th>Tally Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&ldquo;Shoes&rdquo;</td>\n<td>1</td>\n</tr>\n<tr>\n<td>&ldquo;Pants&rdquo;</td>\n<td>3</td>\n</tr>\n<tr>\n<td>&ldquo;Shirts&rdquo;</td>\n<td>7</td>\n</tr>\n<tr>\n<td>&ldquo;Shorts&rdquo;</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>The key represents the name of the item that occurred, for example the value of the <code>product_category</code> attribute &ldquo;Shoes&rdquo;.</li>\n<li>The value represents the number of times it occurred.</li>\n</ul>\n<h3 id=\"size-limits\">Size limits</h3>\n<p>Tallies are limited to 30,000 key-value pairs. Tally attributes are also limited by the maximum size of the profile after encryption and compression (400 KB).</p>\n<h3 id=\"scope\">Scope</h3>\n<p>The tally attribute is available in the following scopes: Visit, Visitor.</p>\n<figure><a class=\"slb\" href=\"/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"><img src=\"https://docs.tealium.com/images/server-side/screenshot-2019-11-11-at-1.26.28-pm.png\"/>\n    </a>\n</figure>\n<h3 id=\"tally-favorite\">Tally favorite</h3>\n<p>By default, each tally attribute generates a corresponding string attribute that automatically captures the name of the tally entry with the highest value. This string attribute has the same name as the tally, but with the word &ldquo;(favorite)&rdquo; appended. For example, a tally named &ldquo;Product Categories Purchased&rdquo; would also have a string attribute named &ldquo;Product Categories Purchased (Favorite)&rdquo;.</p>\n<h3 id=\"tally-tie-breaker-logic\">Tally tie breaker logic</h3>\n<p>A tally tie occurs when multiple keys have the same value. When this happens, the favorite is chosen based on the following logic:</p>\n<ul>\n<li>If a tie occurs, the most recently incremented key becomes the favorite.</li>\n<li>If more than one key was incremented simultaneously using an array of values, the last entry processed becomes the favorite.</li>\n<li>If the order in which multiple keys were incremented is unclear, the favorite is chosen using an alphabetical sort.</li>\n</ul>\n<h3 id=\"examples\">Examples</h3>\n<p>The events below describes some possible tally tie scenarios and the chosen favorite in each scenario.</p>\n<p><strong>Event 1</strong></p>\n<p>There is only one key <code>Apparel</code> in this <code>page_category</code> event, so it becomes the favorite.</p>\n<pre tabindex=\"0\"><code>// Recieved Event\n&#34;page_category&#34;: { [&#34;Apparel&#34;] }\n\n// Result\n&#34;page_category&#34;:{\n    &#34;Apparel&#34;: 1\n},\n&#34;page_category_favorite&#34;: &#34;Apparel&#34;\n</code></pre><p><strong>Event 2</strong></p>\n<p>In this event, two keys <code>Apparel</code> and <code>Accessories</code> are received, causing a 3-way tie. Since <code>Accessories</code> is the last entry processed, it becomes the favorite.</p>\n<pre tabindex=\"0\"><code>// Received Event\n&#34;page_category&#34;: { [&#34;Apparel&#34;, &#34;Accessories&#34;] }\n\n// Result\n&#34;page_category&#34;: {\n    &#34;Books&#34;: 1,\n    &#34;Apparel&#34;: 1,\n    &#34;Accessories&#34;: 1\n},\n&#34;page_category&#34;: &#34;Accessories&#34;\n</code></pre><p><strong>Event 3</strong></p>\n<p>In this event, one key <code>Apparel</code> is received making it the key with the highest value, therefore, it becomes favorite.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// Recieved Event\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#e6db74\">&#34;page_category&#34;</span><span style=\"color:#f92672\">:</span> { [<span style=\"color:#e6db74\">&#34;Apparel&#34;</span>] }\n</span></span><span style=\"display:flex;\"><span>\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// Result\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#e6db74\">&#34;page_category&#34;</span><span style=\"color:#f92672\">:</span> {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#e6db74\">&#34;Accessories&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#ae81ff\">1</span>,\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#e6db74\">&#34;Apparel&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#ae81ff\">2</span>,\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#e6db74\">&#34;Books&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#ae81ff\">1</span>\n</span></span><span style=\"display:flex;\"><span>},\n</span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">&#34;page_category_favorite&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;Apparel&#34;</span>\n</span></span></code></pre></div><h2 id=\"example\">Example</h2>\n<p>The following table illustrates the example of a tally named &ldquo;Product Category Purchased&rdquo;, which counts the number of times each product category was purchased from. This tally automatically populates a string attribute with the name of the entry containing the highest value.</p>\n<p><strong>Tally Attribute: &ldquo;Product Category Purchased&rdquo;</strong></p>\n<table>\n<thead>\n<tr>\n<th>Tally Key</th>\n<th>Tally Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&ldquo;Shoes&rdquo;</td>\n<td>1</td>\n</tr>\n<tr>\n<td>&ldquo;Pants&rdquo;</td>\n<td>3</td>\n</tr>\n<tr>\n<td>&ldquo;Shirts&rdquo;</td>\n<td>7</td>\n</tr>\n<tr>\n<td>&ldquo;Shorts&rdquo;</td>\n<td>2</td>\n</tr>\n<tr>\n<td><strong>String Attribute: &ldquo;Product Category Purchased (Favorite)&rdquo;</strong></td>\n<td><strong>&ldquo;Shirts&rdquo;</strong></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"enrichments\">Enrichments</h2>\n<h3 id=\"increment-tally\">Increment Tally</h3>\n<p>Increment a number within a tally based on the value of another attribute. For example, to track the number of times each product category is viewed, use a tally named Product Category Viewed and enrich it with the <code>product_category</code> attribute. The values of <code>product_category</code> become entries in the tally.</p>\n<p>The number attribute stores a number for browsing metrics such as visits, page views, and events. Common examples include Lifetime Value, Order Total Transaction, or Days Since Last Purchase.</p>\n<p>To specify the number type, select <strong>Decimal</strong> or <strong>Integer</strong> from the <strong>Type</strong> drop-down list.</p>\n<ul>\n<li><strong>Decimal</strong>\n<ul>\n<li>Default value.</li>\n<li>Decimal values can have zero (0) or more decimal digits.</li>\n<li>Example: <code>12</code>, <code>12.0</code>, <code>12.345</code></li>\n<li>Required for attributes that represent monetary values.</li>\n</ul>\n</li>\n<li><strong>Integer</strong>\n<ul>\n<li>Only whole number values are stored.</li>\n<li>Example: <code>12</code>, <code>-4</code>, <code>3214</code></li>\n<li>Useful for whole number attributes that represent quantities, counters, or scores.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Attribute Name</strong>: &ldquo;Product Category Viewed&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>{&quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li>\n<li><strong>Enriched With</strong>: <code>product_category:&quot;Shoes&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>{&quot;Shoes&quot;: 8, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li>\n</ul>\n<h3 id=\"increment-tally-value\">Increment Tally Value</h3>\n<p>Increment a tally entry based on a custom name with a custom value or another attribute value. For example, use a tally named &ldquo;Product Category Searched&rdquo; and enrich it with a hard-coded value of &ldquo;Did Not Search&rdquo; when a search has not occurred (a condition likely based on a boolean attribute that keeps track of searches). Since the name &ldquo;Did Not Search&rdquo; would not naturally occur in a <code>product_category</code> attribute, this enrichment is used to add the custom entry.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Product Category Searched&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>{&quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li>\n<li><strong>Enriched With</strong>: Custom Key: <code>&quot;Did Not Search&quot;</code><br> Custom Increment: <code>1</code></li>\n<li><strong>Resulting Value</strong>: <code>{&quot;Did Not Search&quot;: 1, &quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li>\n</ul>\n<h3 id=\"increment-tally-by-tally\">Increment Tally by Tally</h3>\n<p>Increment the values in a tally by the values found in another tally.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Product Category Purchased (Lifetime)&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>{&quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li>\n<li><strong>Enriched With</strong>: <code>{&quot;Shoes&quot;: 1, &quot;Shirts&quot;: 2, &quot;Dresses&quot;: 1}</code></li>\n<li><strong>Resulting Value</strong>: <code>{&quot;Shoes&quot;: 8, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 5, &quot;Dresses&quot;: 1}</code></li>\n</ul>\n<h3 id=\"increment-tally-by-set-of-strings\">Increment Tally by Set of Strings</h3>\n<p>Increment the entries in a tally based on the entries in a set of strings. For example, use a tally named &ldquo;Product Category Searched (Lifetime)&rdquo; to track the product categories searched per visit, and enrich it with a set of strings named &ldquo;Product Categories Searched (Visit)&rdquo; at the end of each visit.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Product Category Searched (Lifetime)&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>{&quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li>\n<li><strong>Enriched With</strong>: Product Categories Search (Visit):<code>{&quot;Shoes&quot;, &quot;Pants&quot;, &quot;Hats&quot;}</code></li>\n<li><strong>Resulting Value</strong>: <code>[&quot;Shoes&quot;: 8, &quot;Pants&quot;: 2, &quot;Shirts&quot;: 3, &quot;Hats&quot;: 1}</code></li>\n</ul>\n<h3 id=\"set-rolling-average-based-on-timeline\">Set Rolling Average Based on Timeline</h3>\n<p>The rolling average is the arithmetic mean of numerical values captured over time. These values come from <a href=\"/server-side/attributes/data-types/number/\">number</a> and <a href=\"/server-side/attributes/data-types/number/\">tally</a> attributes that are all collected as entries in a <a href=\"/server-side/attributes/data-types/number/\">Timeline</a>. The timeline&rsquo;s expiration determines which entries can be factored into the final average. If there is no expiration date, it is a simple average solution.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Average Product Category Purchase Amounts&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>{}</code></li>\n<li><strong>Enriched With</strong>:  Timeline entry: <code>{&quot;Shoes&quot;: 150.00, &quot;Pants&quot;: 75.00, &quot;Shirts&quot;: 30.00}</code><br> Timeline entry: <code>{&quot;Pants&quot;: 75.00, &quot;Shirts&quot;: 42.00}</code><br> Timeline entry: <code>{&quot;Shoes&quot;: 110.00, &quot;Shirts&quot;: 18.00 &quot;Hats&quot;: 25.00}</code></li>\n<li><strong>Resulting Value</strong>: <code>{&quot;Shoes&quot;: 130.00, &quot;Pants&quot;: 75.00, &quot;Shirts&quot;: 30.00, &quot;Hats&quot;: 25.00}</code></li>\n</ul>\n<h3 id=\"set-rolling-sum-based-on-timeline\">Set Rolling Sum Based on Timeline</h3>\n<p>A rolling sum is the aggregate of numerical values in a number or <a href=\"/server-side/attributes/data-types/tally/\">tally</a> attribute that are captured as entries in a <a href=\"/server-side/attributes/data-types/timeline/\">timeline</a>. The Timeline&rsquo;s expiration determines which entries can be factored in during the aggregation.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Sum Product Category Purchase Amounts&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>{}</code></li>\n<li><strong>Enriched With</strong>:  Timeline entry: <code>{&quot;Shoes&quot;: 150.00, &quot;Pants&quot;: 75.00, &quot;Shirts&quot;: 30.00}</code><br> Timeline entry: <code>{&quot;Pants&quot;: 75.00, &quot;Shirts&quot;: 42.00}</code><br> Timeline entry: <code>{&quot;Shoes&quot;: 110.00, &quot;Shirts&quot;: 18.00 &quot;Hats&quot;: 25.00}</code></li>\n<li><strong>Resulting Value</strong>: <code>{&quot;Shoes&quot;: 260.00, &quot;Pants&quot;: 150.00, &quot;Shirts&quot;: 90.00, &quot;Hats&quot;: 25.00}</code></li>\n</ul>\n<h3 id=\"set-tally-by-corresponding-arrays\">Set Tally by Corresponding Arrays</h3>\n<p>Set the tally to the values defined in two corresponding arrays. For example, use a tally named &ldquo;Product Category Quantity Purchased&rdquo; to capture the quantity of products purchased and enrich it with the two arrays <code>product_category</code> and <code>product_quantity</code> when a purchase event occurs.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Product Category Quantity Purchased&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>{}</code></li>\n<li><strong>Enriched With</strong>:  <code>product_category: [&quot;Shoes&quot;, &quot;Pants&quot;, &quot;Shirts&quot;]</code><br><code>product_quantity: [1, 1, 3]</code></li>\n<li><strong>Resulting Value</strong>: <code>{&quot;Shoes&quot;: 1, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li>\n</ul>\n<h3 id=\"remove-tally\">Remove Tally</h3>\n<p>Remove tally based on a set of conditions.</p>\n<p>The remove tally enrichment can be used to reset a tally. For example, if you have been tracking visitor&rsquo;s product category searches, you might clear that tally once an order is placed.</p>\n<p><strong>Attribute Name</strong>: reset tally to zero</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>{&quot;Shoes&quot;: 1, &quot;Pants&quot;: 3}</code></li>\n<li><strong>Enriched With</strong>: <code>Purchase event occurs</code></li>\n<li><strong>Resulting Value</strong>: (Removed)</li>\n</ul>\n<h3 id=\"remove-an-entry-in-a-tally\">Remove an Entry in a Tally</h3>\n<p>Remove an entry in a tally based on a set of conditions. For example, use a tally named &ldquo;Product Category Searched&rdquo; to track a visitors product searches (and potential purchases) then use this enrichment to remove the tally entries that match items in a purchase.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Product Category Searched (Not Purchased)&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>{&quot;Shoes&quot;: 7, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3, &quot;Jeans&quot;: 10}</code></li>\n<li><strong>Enriched With</strong>: <code>product_catgory : &quot;Shoes&quot;</code></li>\n<li><strong>Resulting Value</strong>: <code>{&quot;Pants&quot;: 1, &quot;Shirts&quot;: 3, &quot;Jeans&quot;: 10}</code></li>\n</ul>\n<h3 id=\"increment-by-1-for-each-item-in-an-array\">Increment by 1 for Each Item in an Array</h3>\n<p>Increment by one (1) for each item in an array. For example, use a tally named &ldquo;Product Category Purchased&rdquo; and enrich it with the array attribute <code>product_category</code> when a purchase event occurs.</p>\n<p><strong>Attribute Name</strong>: &ldquo;Product Category Purchased&rdquo;</p>\n<ul>\n<li><strong>Starting Value</strong>: <code>{&quot;Shoes&quot;: 1, &quot;Pants&quot;: 1, &quot;Shirts&quot;: 3}</code></li>\n<li><strong>Enriched With</strong>: <code>product_category : [&quot;Pants&quot;, &quot;Ties&quot;]</code></li>\n<li><strong>Resulting Value</strong>: <code>{&quot;Shoes&quot;: 1, &quot;Pants&quot;: 2, &quot;Shirts&quot;: 3, &quot;Ties&quot;: 1}</code></li>\n</ul>\n"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side/attributes/data-types/timeline/",
            "title": "Timeline Attribute",
            "body": "<h2 id=\"how-it-works\">How it works</h2>\n<p>The timeline attribute records a list of events over a specified time period. A captured event generates an entry in the timeline that contains captured attribute values and a timestamp. The timestamp can be the time of the event or a date/time provided by another attribute. Timestamps are recorded in Unix/Epoch format.</p>\n<h3 id=\"size-limits\">Size limits</h3>\n<p>Timeline attributes are limited to a maximum of 100 entries. If a timeline reaches this limit, the earliest entries are discarded (First-In, First-Out). For example, if a timeline contains 100 entries, and a new entry is added, the first entry is deleted.</p>\n<p>Timeline attributes are also limited by the maximum size of the profile after encryption and compression (400 KB).</p>\n<h2 id=\"capture-attribute-data\">Capture attribute data</h2>\n<p>In addition to the timestamp of the event, you can also capture the value of one or more attributes when the event occurs. Captured attribute values provide more information about the event when it occurred. Numbers and tallies are the only useful attribute types to capture because only those attribute types can be aggregated using enrichments.</p>\n<p>For example, to track the order total for each purchase you would capture the attribute <code>order_total</code> in a purchase timeline.</p>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>Verify timelines by viewing the latest visitor profile in <a href=\"/server-side/trace/about/\">Trace</a>.</p>\n<h2 id=\"expiration-of-entries\">Expiration of entries</h2>\n<p>Entries in a timeline can be set to expire after a set number of days. This expiration only applies to entries within the timeline and not the timeline attribute itself. The expiration period is evaluated at the start of each visit. If an entry is older than the expiration time, it is removed from the timeline.</p>\n<p>Timelines work well with numbers because numeric entries are easily used to create a rolling sum or a rolling average value based on the timeline entries.</p>\n<h2 id=\"scope\">Scope</h2>\n<p>The timeline attribute is available in the visit and visitor scopes.</p>\n<table>\n<thead>\n<tr>\n<th><strong>Event</strong></th>\n<th><strong>Visit</strong></th>\n<th><strong>Visitor</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>✗</td>\n<td>✓</td>\n<td>✓</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"best-practices\">Best practices</h2>\n<p>Timelines are limited to 100 entries. Like any attributes, they contribute to the maximum visitor profile size of <a href=\"/server-side/attributes/about/#storage-capacity-limits\">400KB compressed</a>.</p>\n<p>To use timeline attributes efficiently, we recommend the following:</p>\n<ul>\n<li>\n<p>Do not store information in the timeline longer than required. Set an expiration date for timeline entries.</p>\n</li>\n<li>\n<p>Do not store other attributes in a timeline unless you have a specialized use case, such as sending the timeline entries to AudienceStore or another connector. You can store most attribute types in a timeline, but only numbers and tallies can be enriched onto other AudienceStream attributes from a timeline. For example, you can get the sum of a number from entries in the timeline, or aggregate a tally from entries in a timeline.  Although you can store other attribute types, there are no enrichments to aggregate the values you store. <p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Storing other attributes in a timeline entry increases the visitor profile size.</p></p>\n</li>\n<li>\n<p>You can minimize the number of entries in a timeline, and the number of timelines in total, by using them strategically.</p>\n<ul>\n<li>To efficiently count events using a timeline attribute, increment visit numbers when the target event occurs and store the visit number in the timeline at the end of the visit.</li>\n<li>To get an overall count at the beginning of the visit, use a sum enrichment to add the visits in the timeline attribute and store them in a number attribute. You can then increment this number during the visit to keep it completely up to date.</li>\n<li>If you store several numbers over the same time period, store them all in a single timeline.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"enrichments\">Enrichments</h2>\n<h3 id=\"update-timeline\">Update timeline</h3>\n<p>Use this enrichment to record an entry in a timeline. To add this enrichment, click <strong>Create an Entry</strong> and select <strong>Update Timeline</strong>.</p>\n<p>Choose one of the following options for recording the timestamp of the entry:</p>\n<ul>\n<li><strong>Time of event received (default)</strong><br>\nThe timestamp of the entry is set automatically when the event occurs.</li>\n<li><strong>Based on date</strong><br>\nThe timestamp of the entry is set to the value of another attribute. If you choose a string attribute, you must also use the <a href=\"/server-side/attributes/data-types/date/\">date formatter</a> to create a date/time pattern that matches the expected value.</li>\n</ul>\n<p>To capture attribute values in the entry, select an attribute from the drop-down list and click <strong>Add Attribute</strong>. The added attribute is displayed as a captured attribute. Repeat this step for each attribute to capture in the entry.</p>\n<h4 id=\"example\">Example</h4>\n<p><strong>Attribute Name</strong>: Orders Last 60 days<br>\n<strong>Captured Attributes:</strong> <code>order_subtotal</code> and <code>order_total</code></p>\n<p><strong>Example JSON Data</strong>:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-json\" data-lang=\"json\"><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">&#34;Orders Last 60 Days&#34;</span> <span style=\"color:#960050;background-color:#1e0010\">:</span> [\n</span></span><span style=\"display:flex;\"><span>  {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;timestamp&#34;</span> : <span style=\"color:#ae81ff\">1576862494000</span>,\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;snapshot&#34;</span> : {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_total&#34;</span> : <span style=\"color:#ae81ff\">44.00</span>,\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_subtotal&#34;</span> : <span style=\"color:#ae81ff\">38.00</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>  },\n</span></span><span style=\"display:flex;\"><span>  {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;timestamp&#34;</span> : <span style=\"color:#ae81ff\">1577640094000</span>,\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;snapshot&#34;</span> : {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_total&#34;</span> : <span style=\"color:#ae81ff\">100.00</span>,\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_subtotal&#34;</span> : <span style=\"color:#ae81ff\">95.00</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>  },\n</span></span><span style=\"display:flex;\"><span>  {\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;timestamp&#34;</span> : <span style=\"color:#ae81ff\">1578849694000</span>,\n</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#f92672\">&#34;snapshot&#34;</span>: {\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_total&#34;</span> : <span style=\"color:#ae81ff\">60.00</span>,\n</span></span><span style=\"display:flex;\"><span>      <span style=\"color:#f92672\">&#34;order_subtotal&#34;</span> : <span style=\"color:#ae81ff\">59.00</span>\n</span></span><span style=\"display:flex;\"><span>    }\n</span></span><span style=\"display:flex;\"><span>  }\n</span></span><span style=\"display:flex;\"><span>]\n</span></span></code></pre></div><h3 id=\"set-expiration-for-timeline-events\">Set expiration for timeline events</h3>\n<p>Use this enrichment to determine when an entry should be removed from the timeline based on the number of days since it was recorded. Each entry that is older than the expiration setting is removed from the timeline automatically. The expiration of timeline entries is evaluated at the beginning of a visit.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>The expiration does not apply to the timeline itself, only to the entries within it.</p>\n"
        }  

    ]
}
