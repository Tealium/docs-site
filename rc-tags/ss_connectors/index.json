
{
    "kind": "term",
    "name": "ss_connectors",
    "count": 3,
    "items": [

    
        {
            "weight": "10",
            "url": "https://docs.tealium.com/server-side/connectors/webhook-connectors/about/",
            "title": "About webhook connectors",
            "body":"<h2 id=\"requirements\">Requirements</h2><ul><li>Tealium account enabled for EventStream (for event data)</li><li>Tealium account enabled for AudienceStream (for visitor data)</li></ul><h2 id=\"how-it-works\">How it works</h2><p>The Webhook Connector allows you to send data to your vendor using customized HTTP requests and allows you to all aspects of an HTTP request, such as the URL, URL Parameters, Headers, Cookies, Body Content Type and Body Data. Webhook also supports a batching and a powerful templating feature designed to handle complex and dynamic data formats.</p><p>There are three Webhook connectors to choose from based on the authorization requirements of your vendor, as follows:</p><ul><li><strong>Webhook</strong> (BasicAuth) – For services that do not require authentication or only require basic authentication with a username and password.</li><li><strong>Webhook OAuth2</strong> (3-Legged) – Requires the user to login to the service to obtain an access token.</li><li><strong>Webhook OAuth2</strong> (2-Legged) – Does not require the user to login to the service. The webhook is configured with the information required to authenticate.</li></ul><p>Webhook OAuth2 is used for services that explicitly require OAuth 2.0 authentication.</p><p>To get started, go to the connector marketplace and add the Webhook instance you wish to use. For general instructions on how to add a connector, see <a href=\"/server-side/connectors/about/\">Connector Overview</a></p><h2 id=\"connector-actions\">Connector actions</h2><table><thead><tr><th><strong>Action Name</strong></th><th><strong>Description</strong></th><th><strong>Webhook (BasicAuth)</strong></th><th><strong>Webhook OAuth2</strong></th></tr></thead><tbody><tr><td><a href=\"/server-side/connectors/webhook-connectors/action-parameters/#action---send-event-data-via-http-request\">Send Event Data via HTTP Request</a></td><td>Sends the entire event object, either as a URL-encoded JSON string or a JSON payload.</td><td>✓</td><td>✗</td></tr><tr><td><a href=\"/server-side/connectors/webhook-connectors/action-parameters/#action---send-visitor-data-via-http-request\">Send Visitor Data via HTTP Request</a></td><td>Sends the entire visitor profile object, either as a URL-encoded JSON string or a JSON payload.</td><td>✓</td><td>✗</td></tr><tr><td><a href=\"/server-side/connectors/webhook-connectors/action-parameters/#action---send-customized-data-via-http-request-advanced\">Send Customized Data via HTTP Request (Advanced)</a></td><td>Sends individual event/visitor attributes specified via mappings.</td><td>✓</td><td>✓</td></tr><tr><td><a href=\"/server-side/connectors/webhook-connectors/action-parameters/#action---send-batched-customized-data-via-http-request-advanced\">Send Batched Customized Data via HTTP Request (Advanced)</a></td><td>Sends batched event/visitor attributes specified via mappings.</td><td>✓</td><td>✓</td></tr></tbody></table><h2 id=\"http-response-cookies\">HTTP response cookies</h2><p>While cookie-based session management is common in web browsers, it is generally discouraged in server-to-server environments that communicate with stateless APIs. For that reason, the Webhook connector does not track cookie-based sessions and effectively ignores <code>Set-Cookie</code> header values in HTTP responses.</p>"
        }  

    , 
        {
            "weight": "10",
            "url": "https://docs.tealium.com/server-side/connectors/about/",
            "title": "About connectors",
            "body":"<h2 id=\"how-it-works\">How it works</h2><p>A connector is an integration that transmits data between Tealium and another vendor in real-time. A connector offers actions that represent vendor-supported APIs. An action is triggered in real-time by an incoming event from a feed or a visitor joining or leaving an audience. An action sends data based on mappings that associate Tealium attributes to the expected vendor parameters.</p><h3 id=\"terminology\">Terminology</h3><ul><li><strong>Connector</strong><br>A connector represents the connection to your vendor account. This is configured using credentials such as an account ID, username and password, or an API key.</li><li><strong>Action</strong><br>An action is a vendor operation, such as triggering an email, building a custom audience, or managing leads. Actions vary depending on the vendor service. Multiple actions can be associated with a single connector.</li><li><strong>Frequency Cap</strong><br>A connector action performs in real-time, but some actions are designed to have a wait period before they are triggered. The frequency cap allows you to set a downtime period for actions so that they do not trigger immediately. <a href=\"/server-side/connectors/frequency-capping/about/\">Learn more about Frequency Capping and Prioritization</a></li><li><strong>Source</strong><br>Source indicates the origin of the data being acted upon. A source can be an audience or an event feed.</li></ul><h3 id=\"consent-categories\">Consent categories</h3><p>Each connector in the marketplace has one or more consent categories assigned for each available action. To view the consent category for a specific connector, click the Information icon next to the connector action.</p><figure><a class=\"slb\" href=\"/images/server-side/eventstream-connector-consent-categories.png\"><img src=\"/images/server-side/eventstream-connector-consent-categories.png\"         alt=\"EventStream Connector Consent Categories\"         title=\"EventStream Connector Consent Categories\"/>    </a></figure><p>AudienceStream is categorized in the <strong>CDP</strong> consent category and DataAccess is categorized in the <strong>Big Data</strong> consent category. For additional information about server-side consent, see <a href=\"/iq-tag-management/consent-management/consent-preferences-dialog/manage/\">Consent Preferences Manager</a>.</p><h3 id=\"retries\">Retries</h3><p>If a connector action fails, it is retried three times at 1 minute, 5 minute, and 30 minute intervals. If the request is successful on any of the subsequent retry attempts, the request is reported as a success in the UI. If all three retries fail, the request is dropped and reported as an error in the UI.</p><p>A retry is attempted when any of the following error codes occur:</p><ul><li>408 – Forbidden</li><li>429 – Too Many Requests</li><li>500 – Internal Server Error</li><li>502 – Bad Gateway</li><li>503 – Service Unavailable</li><li>504 – Gateway Timeout</li></ul><p>A retry is not attempted when a <strong>Response Timeout - Vendor API did not respond within 5000 milliseconds</strong> response is received. The request payload was sent, but the vendor did not send a response within our allowed time of 5 seconds. The request may have succeeded on the vendor&rsquo;s side but because it took longer than 5 seconds to get a response, we treat it as a failure.</p><h3 id=\"restricted-data\">Restricted data</h3><p>Connectors do not honor restricted data. This means that attributes marked as restricted data are always included, whether you are sending them through mappings or as part of the visitor profile. This cannot be changed. Learn more about <a href=\"/server-side/attributes/restricted-data/\">Restricted Data</a>.</p><h3 id=\"ip-whitelists\">IP whitelists</h3><p>If a connector you use has strict rules about which systems it accepts requests from, you can whitelist the IP addresses of the Customer Data Hub. The IP addresses that make connector requests can be found in the <a href=\"/server-side/administration/ip-allow-list/\">IP Addresses for Customer Data Hub</a>.</p><h2 id=\"screen-navigation\">Screen navigation</h2><h3 id=\"overview-screen\">Overview screen</h3><p>The connector overview screen summary displays the following metrics as columns:</p><ul><li><strong>Total</strong><br>Total actions triggered. Click the Information (i) icon to display the timeline for the total in this column.</li><li><strong>Success</strong><br>Number of action successes.</li><li><strong>Error</strong><br>Number of action errors.</li><li><strong>Data Source (EventStream) or Audience (AudienceStream)</strong><br>Data source or audience associated with the connector.</li><li><strong>Feed (EventStream) or Trigger (AudienceStream)</strong><br>Name of the feed or trigger for the action.</li></ul><p>Expand the <strong>Add Action</strong> menu to quickly access the <strong>Edit</strong>, <strong>Duplicate</strong>, <strong>Get Connector ID</strong>, or <strong>Remove</strong> features.</p><figure><a class=\"slb\" href=\"/images/server-side/screenoverviewaddactionoptions.png\"><img src=\"/images/server-side/screenoverviewaddactionoptions.png\"         alt=\"Screen Overview Add Action Options\"         title=\"Screen Overview Add Action Options\"/>    </a></figure><h3 id=\"deprecated-connectors-and-actions\">Deprecated connectors and actions</h3><p>Connectors and actions can be deprecated, which means they may be unsupported or removed in the future. Deprecation typically occurs when a connector or an action has been replaced with a newer version or a new connector or action that should be used instead.</p><p>There are two types of deprecation, as follows:</p><ul><li><strong>Functional Deprecation</strong> – The connector or action is deprecated, and may be removed in the future, but is still working.</li><li><strong>Full Deprecation</strong> – The connector or action is deprecated and no longer works. Actions for a fully deprecated connector are not executed.</li></ul><p>When a connector or an action is deprecated, an icon is shown next to the connector or action in the connector list. When you hover over the icon, a message is displayed that specifies whether the deprecated connector or action still works.</p><figure><a class=\"slb\" href=\"/images/server-side/deprecatedconnector.png\"><img src=\"/images/server-side/deprecatedconnector.png\"         alt=\"Deprecated Connector\"         title=\"Deprecated Connector\"/>    </a></figure><h3 id=\"reporting-chart-for-actions\">Reporting chart for actions</h3><p>The following sections describe how to view the reporting chart, view error details, and download error reports.</p><figure><a class=\"slb\" href=\"/images/server-side/connector-reporting-graph-overview.png\"><img src=\"/images/server-side/connector-reporting-graph-overview.png\"         alt=\"Connector Reporting Graph Overview\"         title=\"Connector Reporting Graph Overview\"/>    </a></figure><h4 id=\"view-the-chart\">View the chart</h4><p>When you click on a connector action, the chart displays the number of times the action executed each day. You can view the graph for a rolling day, week, or month. Successful actions are shown in gray and errors are shown in red. Click any part of the chart to view a summary of the data for that display.<figure><a class=\"slb\" href=\"/images/server-side/successful-connector-triggers.png\"><img src=\"/images/server-side/successful-connector-triggers.png\"         alt=\"Successful Connector Triggers\"         title=\"Successful Connector Triggers\"/>    </a></figure></p><h4 id=\"view-sampled-errors\">View sampled errors</h4><p>Use the following steps to view sampled errors for a connector:</p><ol><li>Click an action for the connector you want to view.</li><li>From the connector summary, select <strong>Rolling Day</strong>, <strong>Rolling Week</strong>, or <strong>Rolling Month.</strong></li><li>Below the graph, a list view of error messages is shown. Each entry in the list displays the error category, the number of sampled errors included in the report, a message with a description of the error, and the total number of occurrences of the error.</li><li>To view the details for an error, click the right arrow next to the category to expand.<br>The detailed view includes a sample of the affected code with a timestamp containing the day of the week, the date, and the time.</li></ol><h4 id=\"download-sampled-errors\">Download sampled errors</h4><p>Use the following steps to download sampled errors for a connector:</p><ol><li>Click an action for the connector you want to view.</li><li>From the connector summary, select <strong>Rolling Day</strong>, <strong>Rolling Week</strong>, or <strong>Rolling Month</strong>.</li><li>Click <strong>Download Sampled Errors</strong>.<br>A CSV file is saved to your default download location.</li><li>Open the CSV file to examine the details or share the file with others for further collaboration.</li></ol>"
        }  

    , 
        {
            "weight": "45",
            "url": "https://docs.tealium.com/server-side/connectors/delayed-actions/",
            "title": "About delayed actions",
            "body":"<h2 id=\"how-it-works\">How it works</h2><p>A delayed action is a connector action that is delayed based on a set of conditions or time criteria.</p><p>Delayed actions are configured in an AudienceStream connector when the trigger is set to <strong>In Audience at the end of visit</strong>, as shown in the following example:</p><figure><a class=\"slb\" href=\"/images/server-side/001.png\"><img src=\"/images/server-side/001.png\"         alt=\"Connector actions\"         title=\"Connector actions\"/>    </a></figure><p>To learn more about audience connectors and the trigger setting, see <a href=\"/server-side/connectors/add/#select-a-source-for-audiencestream\">Add a Connector</a>.</p><p>There are two types of delayed actions:</p><ul><li><strong>Scheduled</strong> - Scheduled delayed actions trigger at a later date if a scheduled condition is met.</li><li><strong>Triggered</strong> - Triggered delayed actions trigger based on conditions met at a later time.</li></ul><p>Only vistor attributes can be sent in a delayed action. Visit attributes are out of scope by the time the connector action fires.</p><p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>A delayed action is scheduled only if the visitor is in the audience at the end of current visit and the delayed action is triggered only if the visitor is still in the audience at the scheduled time.</p><h2 id=\"delay-action-for-x-hoursdays\">DELAY Action for X Hours/Days</h2><p>When selecting <strong>DELAY Action for 1 Days</strong>, if a visitor is in the audience when the visit ends, a delayed action is scheduled for 1 day later.</p><figure><a class=\"slb\" href=\"/images/server-side/002.png\"><img src=\"/images/server-side/002.png\"         alt=\"delayed action scheduled\"         title=\"delayed action scheduled\"/>    </a></figure><h2 id=\"and-was-not-a-member-of-this-audience-at-start-of-visit\">AND was not a member of this Audience at start of visit</h2><p>More often than not, we find the condition <strong>In Audience at the end of visit</strong> is too easily met. Thus, we added a new option to the <strong>In Audience at the end of visit</strong> condition called <strong>AND was not a member of this Audience at start of visit</strong>.</p><figure><a class=\"slb\" href=\"/images/server-side/003.png\"><img src=\"/images/server-side/003.png\"         alt=\"additional when option\"         title=\"additional when option\"/>    </a></figure><p>The results of selecting <strong>AND was not a member of this Audience at start of visit</strong> are:</p><ul><li>If a visitor was not in the audience at the start of the current visit <strong>AND</strong> is in the audience when the visit ends, a delayed action is scheduled for 1 day later.</li><li>After 1 day, if the visitor is still in the audience, the delayed action will be triggered.</li><li>With this new option, along with cooldown, you have better control when delayed actions get scheduled and triggered.</li></ul><h2 id=\"faq\">FAQ</h2><h4 id=\"what-happens-when-a-visitor-returns-before-the-delayed-action-has-triggered\">What happens when a visitor returns before the delayed action has triggered?</h4><p>In the <strong>DELAY Action for 1 Days</strong> example above, a delayed action is scheduled 1 day (24 hours) later at the end of the visitor&rsquo;s first visit. If the visitor returns for a second visit 12 hours after the first visit ended AND the visitor meets the condition <strong>In Audience at end of visit</strong> when the second visit ends, then the original delayed action will be rescheduled to 1 day (24 hours) after the second visit ends. In other words, the delayed action is now scheduled to 36 hours after the first visit ends.</p><h4 id=\"what-happens-when-a-visitor-returns-after-the-delayed-action-has-already-been-triggered\">What happens when a visitor returns after the delayed action has already been triggered?</h4><p>In this case, the visitor returns for a second visit after the original delayed action has been triggered. If the visitor meets the condition <strong>In Audience at the end of visit</strong> when the second visit ends, then a new delayed action will be scheduled.</p><h4 id=\"can-i-use-decimals-in-the-delay-action-for-hoursdays-text-field\">Can I use decimals in the &ldquo;DELAY Action for Hours/Days&rdquo; text field?</h4><p>No. The value is stored as an integer. So you can only use whole numbers like <code>1</code>, <code>2</code>, <code>3</code>, et cetera. Number values like <code>0.25</code>,<code> 0.75</code>, <code>1.5</code> are not allowed. The lowest value you can use is <code>1</code>.</p><h4 id=\"what-is-the-longest-time-period-that-a-delay-action-will-work\">What is the longest time period that a delay action will work?</h4><p>365 days or 8760 hours</p>"
        }  

    ]
}
