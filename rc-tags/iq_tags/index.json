
{
    "kind": "term",
    "name": "iq_tags",
    "count": 7,
    "items": [

    
        {
            "weight": "1",
            "url": "https://docs.tealium.com/iq-tag-management/tags/about/",
            "title": "About tags",
            "body": "<p>A <em>tag</em> is a term used in the web technology and analytics industry to describe a small snippet of code that is placed on a website for the purpose of tracking important visitor activity. Tags are also known as tracking pixels or web beacons.</p>\n<p>Tags are commonly used by marketers to measure the effectiveness of online advertising, email marketing, site personalization, and conversion tracking (among many other uses). This is accomplished by collecting data from the webpage. The most common way to implement a tag on a website is with JavaScript code.</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/what-are-tags.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/what-are-tags.png\"\n         alt=\"What are tags\"\n         title=\"What are tags\"/>\n    </a>\n</figure>\n<h2 id=\"how-tags-work\">How tags work</h2>\n<ul>\n<li><strong>No coding necessary</strong>\nSetting up a tag does not require any coding. A tag in iQ Tag Management offers a user-friendly interface to configure and deploy a vendor&rsquo;s tag to your site.</li>\n<li><strong>Deploy tags directly from iQ Tag Management</strong><br>\nAfter the Universal tag (utag.js) is added to your site, tags added in your account configuration are loaded directly on your site after you publish your changes.</li>\n<li><strong>Multi-functional tags</strong><br>\nA single instance of a vendor tag in iQ Tag Management typically provides all of the tagging functionality required by that vendor for your entire site. While the vendor might require different tag code for different types of pages (product detail page, shopping cart page, and purchase confirmation page), these are all provided in one instance of the tag in iQ Tag Management.</li>\n</ul>\n"
        }  

    , 
        {
            "weight": "10",
            "url": "https://docs.tealium.com/iq-tag-management/templates/about/",
            "title": "About templates",
            "body": "<h2 id=\"how-it-works\">How it works</h2>\n<p>Templates are JavaScript code that provide the core logic for a feature, tag, or functional component of iQ Tag Management. Templates are used to assemble your configuration from Tealium iQ into the JavaScript files that run on your site or app. For a list of templates by component, see <a href=\"#template-types\">Template Types</a>.</p>\n<p>Users can run the <a href=\"/iq-tag-management/templates/template-status-checker/\">Template Status Checker</a> to ensure that their templates are up-to-date. Advanced users will find directly editing templates useful for the following cases:</p>\n<ul>\n<li>Adding <a href=\"/iq-tag-management/tags/tealium-custom-container-tag/\">Custom Container tags</a> or <a href=\"/iq-tag-management/consent/consent-integrations/custom-cmp/\">custom Consent Integrations</a> to build their own functionality for an unsupported vendor or self-built solution.</li>\n<li>Temporarily fixing a bug in a tag until an official fix is released.</li>\n<li>Changing the core logic of any templated component to meet their specific needs.</li>\n</ul>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>Some customizations and fixes can be made by using extensions rather than editing templates. Consider using extensions first because they are easier to maintain over time.</p>\n<p>For more information on editing and updating templates, see <a href=\"/iq-tag-management/templates/manage/\">Manage Templates</a>.</p>\n<h2 id=\"template-types\">Template types</h2>\n<p>Templates are used for system tags, vendor tags, and the consent manager. When you view a list of templates, each type can be identified by the following names:</p>\n<h3 id=\"system-tags\">System Tags</h3>\n<ul>\n<li><strong>uTag Loader</strong> (<code>utag.js</code>)<br>\nThe template for the Universal Tag. The Universal Tag is the JavaScript code that contains all of the generated code necessary to load third-party tags onto your site. For more information, see <a href=\"/platforms/javascript/install/#universal-tag-utagjs\">JavaScript (<code>utag.js</code>) install</a>.</li>\n<li><strong>uTag Sync</strong> (<code>utag.sync.js</code>)<br>\nThis file allows your pages to support A/B and multivariate testing tags, such as Adobe Target or Optimizely. Place the script in the <code>&lt;head&gt;</code> section of your page code and it loads synchronously to comply with the most common vendor requirements. For more information, see <a href=\"/iq-tag-management/getting-started/install/utag-sync/\">How <code>utag.sync.js</code> works</a>.</li>\n<li><strong>Mobile webview</strong> (<code>mobile.html</code>)<br>\nThe template for mobile installations, which is loaded as a hidden webview for your mobile app to load vendor tags. For more information, see <a href=\"/platforms/getting-started-mobile/client-side/#mobile\">Client-side</a>.</li>\n</ul>\n<h3 id=\"consent-management\">Consent Management</h3>\n<p>These templates are used in the consent management features. For more information, see <a href=\"/iq-tag-management/consent/consent-management/about/\">About Consent Manager</a>.</p>\n<ul>\n<li>Dom Ready (<code>cmDomready</code>)</li>\n<li>General (<code>cmGeneral</code>)</li>\n<li>Show Explicit (<code>cmShowexplicit</code>)</li>\n<li>Show Preferences (<code>cmShowpreferences</code>)</li>\n<li>Do Not Sell Banner (<code>cmShowDNSBanner</code>)</li>\n<li>Do Not Sell Preferences (<code>cmDoNotSell</code>)</li>\n<li>Do Not Sell Prompt (<code>cmShowDNSPrompt</code>)</li>\n<li>Consent Logging - Accept/Decline Consent (<code>fullConsentEventHandler</code>)</li>\n<li>Consent Logging - Grant Partial Consent (<code>partialConsentEventHandler</code>)</li>\n</ul>\n<h3 id=\"consent-integrations\">Consent Integrations</h3>\n<p>These templates are used in the consent integrations. For more information, see <a href=\"/iq-tag-management/consent/consent-integrations/about/\">About Consent Integrations</a>.</p>\n<ul>\n<li>Framework (<code>utcm_framework</code>): The consent enforcement framework for Tealium iQ.</li>\n<li>Integration templates : All integration templates are identified by the integration name (as it appears in the Tealium iQ Consent Integrations dashboard), the template name (such as OneTrust, Usercentrics, Custom, etc.), and the internal Tealium ID for your instance of that template. For example: <code>Consent Integrations - Test Integration (onetrust) UID:utcm_e9582a8f-40fd-49ae-9819-fb2721f5547e</code>\n<ul>\n<li>Didomi</li>\n<li>OneTrust</li>\n<li>OptOut Cookie + GPC</li>\n<li>Usercentrics</li>\n<li>Custom</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"marketplace-tags\">Marketplace Tags</h3>\n<p>All marketplace templates are identified by their vendor name (as it appears in the marketplace), tag name (as entered in the tag configuration), and the tag UID.</p>\n<p>Example: <code>Twitter Conversions: Twitter Conversions (Retargeting): Tag UID: 2042 </code></p>\n<h2 id=\"template-status-checker\">Template Status Checker</h2>\n<p>The <strong>Template Status Checker</strong> tool compares each of your templates to the latest system version available. For more information, see <a href=\"/iq-tag-management/templates/template-status-checker/\">about the template status checker</a>.</p>\n<h2 id=\"access-templates\">Access templates</h2>\n<p>The following methods are available for accessing templates:</p>\n<ul>\n<li><strong>Admin Menu</strong><br>\nIn the admin menu, click <strong>Manage Templates</strong>.<br>\nThis method allows you to browse all templates in the profile and quickly access them from a drop-down list.</li>\n<li><strong>Tag Configuration</strong><br>\nFrom the tag configuration screen, expand the <strong>Advanced Settings</strong> area and click <strong>Edit Templates</strong>. This method takes you directly to the template for that tag.</li>\n<li><strong>Template Status Checker</strong><br>\nIn the admin menu, click <strong>Template Status Checker</strong> then click a template in the report.<br>\nThis method displays a status report of your templates. The report contains links to each template.<br>\nFor more information, see <a href=\"/iq-tag-management/templates/template-status-checker/\">about the template status checker</a>.</li>\n</ul>\n<h2 id=\"template-merge-behavior\">Template merge behavior</h2>\n<p>Tag templates do not follow standard merge behavior. When merging one version into another, the tag templates in the active version take priority. Any tag template changes from the merged version will be discarded. If you want to merge in tag templates from another version, switch to that version and then merge the tag templates into your original version.</p>\n<p>For more information about merging versions, see <a href=\"/iq-tag-management/save-publish/merging-versions/\">Merge versions</a>.</p>\n"
        }  

    , 
        {
            "weight": "25",
            "url": "https://docs.tealium.com/iq-tag-management/tags/advanced-settings/",
            "title": "Advanced tag settings",
            "body": "<p>It is important to have a good understanding of the <a href=\"/iq-tag-management/getting-started/order-of-operations/\">order of operations</a> before adjusting these settings.</p>\n<p>The following image shows the available <strong>Advanced Settings</strong>, as displayed in the interface:</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/manage_tags/tag_advanced_settings.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/manage_tags/tag_advanced_settings.png\"\n         alt=\"Advanced Settings\"\n         title=\"Advanced Settings\"/>\n    </a>\n</figure>\n<h2 id=\"send-flag\">Send Flag</h2>\n<p>The <strong>Send Flag</strong> setting determines whether or not a tag sends out data when it loads. The default selection is <strong>Yes</strong>. If you select <strong>No</strong>, the tag loads normally but does not send data.</p>\n<h2 id=\"bundle-flag\">Bundle Flag</h2>\n<p>The <strong>Bundle Flag</strong> setting determines whether or not to bundle the tag configuration file into <code>utag.js</code>. The default setting is <strong>No</strong>. If you set it to <strong>Yes</strong>, the tag code is published within <code>utag.js</code> and the corresponding <code>utag.#.js</code> file is not published.</p>\n<p>Tags that use the <strong>All Pages</strong> load rule are automatically bundled when the <strong>Bundle Tag Loading on All Pages</strong> option is enabled in the <a href=\"/iq-tag-management/save-publish/publish-configuration/\">publish settings</a>.</p>\n<p>The load order for bundled tags and those using the <strong>All Pages</strong> load rule is determined by the order in which they appear in the UI. Bundling affects the generated file (<code>utag.js</code>).</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>Additional JavaScript files requested by the vendor tag will still load separately.</p>\n<p>Loading Google Analytics before bundling:</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/utag-google.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/utag-google.png\"\n         alt=\"utag Google\"\n         title=\"utag Google\"/>\n    </a>\n</figure>\n<p>Loading Google Analytics after bundling:</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/utag-google-bundled.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/utag-google-bundled.png\"\n         alt=\"utag Google Bundled\"\n         title=\"utag Google Bundled\"/>\n    </a>\n</figure>\n<h2 id=\"tag-timing\">Tag Timing</h2>\n<p>The <strong>Tag Timing</strong> setting determines whether a tag loads when the <code>utag.js</code> file loads, or when the browser sends the DOM Ready signal. The default setting is <strong>DOM Ready</strong>.</p>\n<p>Selecting <strong>Prioritized</strong> causes the tag to load immediately, without waiting for the DOM Ready signal. Loading a tag before the DOM is fully ready may result in required resources not being available, which can impact the tag’s performance and functionality.</p>\n<h2 id=\"synchronous-load\">Synchronous Load</h2>\n<p>This setting determines whether the tag loads synchronously or asynchronously. If you intend to load a tag synchronously, you must include the Tealium synchronous <code>utag.js</code> file reference in the source code for the page. The default setting is <strong>No</strong>, which means that tag will load asynchronously. We recommend loading tags asynchronously as a best practice.</p>\n<h2 id=\"custom-script-source\">Custom Script Source</h2>\n<p>This setting allows you to support a tag by using an external JavaScript file instead of a built-in tag template. Enter the URL of the <code>.js</code> file in the <strong>Custom Script Source</strong> field.</p>\n<p class=\"tip\"><i class=\"fa fa-info-circle\"></i>Remove the <code>http:</code> or <code>https:</code> protocol from the URL and use a relative protocol. For example: <code>//[www.example.com/js/mylibrary.js](http://www.tealium.com/mylibrary.js)</code></p>\n<p>Supporting a tag using a custom JavaScript turns it into a blocking tag, which prevents other tags from running until this tag has finished loading. Though this tag still loads asynchronously, it does not load subsequent asynchronous scripts (for example, <code>utag.10.js</code>) until the blocking tag is complete. To load custom JavaScript for a tag without turning the tag into a blocking tag, use the Tealium Generic Tag to load it.</p>\n"
        }  

    , 
        {
            "weight": "40",
            "url": "https://docs.tealium.com/iq-tag-management/tags/tealium-generic-tag/",
            "title": "Tealium Generic Tag",
            "body": "<h2 id=\"tag-types\">Tag types</h2>\n<p>This tag supports one of three types: image, iframe, or script. Identifying the type of tag you are working with is important, so here are some clues to look for when setting up your tag. If the code for your tag matches any of these patterns, then choose the corresponding tag type in the tag configuration.</p>\n<h3 id=\"image\">Image</h3>\n<p>Image tag code snippets usually contain one of the following:</p>\n<ul>\n<li><code>new Image()</code></li>\n<li><code>&lt;img src=&quot;https://</code></li>\n<li><code>document.write(&quot;&lt;img src=&quot; ... &quot;&gt;&quot;);</code></li>\n</ul>\n<h3 id=\"iframe\">Iframe</h3>\n<p>Iframe tag code snippets usually contain one of the following:</p>\n<ul>\n<li><code>document.createElement('iframe')</code></li>\n<li><code>&lt;iframe src=&quot;https://</code></li>\n<li><code>document.write(&quot;&lt;iframe src=&quot; ... &quot;&gt;&lt;/iframe&quot;);</code></li>\n</ul>\n<h3 id=\"script\">Script</h3>\n<p>Script tag code snippets usually contain one of the following:</p>\n<ul>\n<li><code>&lt;script type=&quot;text/javascript&quot; src=&quot;//example.com/tag.js&quot;&gt;&lt;/script&gt;</code></li>\n<li><code>document.createElement('script')</code></li>\n</ul>\n<h2 id=\"tag-components\">Tag components</h2>\n<p>To configure the Generic Tag you will need to understand the following components that make up your tag.</p>\n<h3 id=\"base-url\">Base URL</h3>\n<p>The base URL is the hostname, pathname, and file pointing to the location of the pixel. It does not include the <code>?</code> character or the query string parameters.</p>\n<p>In our sample pixel above, the base URL is: <code>//www.example.com/tag.gif</code></p>\n<h3 id=\"static-and-dynamic-parameters\">Static and dynamic parameters</h3>\n<p>Many tags collect data by using the query string of the URL. These are the key-value pairs that appear in the URL after the <code>?</code> character. In our example the parameters are:</p>\n<pre tabindex=\"0\"><code class=\"language-nohl\" data-lang=\"nohl\">cid=112233&amp;rg=us&amp;rnd=&#39; + rnd_nocache + &#39;&amp;ref=&#39; + referrer\n</code></pre><p>Static parameters have values that you can see in the snippet and do not change from page to page. In this example, the static parameters are:</p>\n<ul>\n<li><code>cid=112233</code></li>\n<li><code>rg=us</code></li>\n</ul>\n<p>Dynamic parameters can be set using values that change from page to page. In this example, the dynamic parameters are:</p>\n<ul>\n<li><code>rnd=</code></li>\n<li><code>ref=</code></li>\n</ul>\n<p>Dynamic parameters must be configured using <a href=\"/iq-tag-management/data-mappings/about/\">data mappings</a>. All variables configured as mappings will be appended to the query string parameter of the tag URL as key-value pairs.</p>\n<h3 id=\"cache-bust\">Cache bust</h3>\n<p>It&rsquo;s common for vendor tags to require a cache bust variable in the query string. This value is randomly generated and added to URLs to prevent the browser from caching the request. Our example includes a cache busting variable called <code>rnd</code>.</p>\n<p>This functionality is built into the Generic Tag. Simply enable the cache bust setting and specify the name of the cache bust parameter and the Generic Tag will generate and assign the random value for you.</p>\n<h2 id=\"tag-configuration\">Tag configuration</h2>\n<p>First, go to the <strong>Tag Marketplace</strong> and add the Generic Tag to your profile.</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/tags/tealium_generic_tag_configuration.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/tags/tealium_generic_tag_configuration.png\"\n         alt=\"Tealium Generic Tag Configuration\"\n         title=\"Tealium Generic Tag Configuration\"/>\n    </a>\n</figure>\n<p>After adding the Tag, configure the following settings:</p>\n<ul>\n<li><strong>Title</strong> (required): The default is <strong>Tealium Generic Tag</strong>. You may replace it with a custom name of choice.</li>\n<li><strong>Type</strong> (required): Select the type of tag.</li>\n<li><strong>Base URL</strong> (required)<strong>:</strong> Enter the base URL (excluding the protocol)</li>\n<li><strong>HTTPS URL</strong>: Use this field if the HTTPS URL is different from the Base URL.\n<ul>\n<li>If the base and HTTPS URL are the same, then add <code>//</code> as the prefix in the <strong>Base URL</strong> field and leave the <strong>HTTPS URL</strong> field empty. This tells the tag to apply HTTP and HTTPS appropriately based on the current location protocol.</li>\n<li>If the URLs are different, set their respective fields.</li>\n</ul>\n</li>\n<li><strong>Query String Delimiter</strong>: The delimiter character that separates the query string portion from the URL. The default is <code>?</code>, but this can be changed.</li>\n<li><strong>Parameter Delimiter</strong>: The delimiter character that separates each key-value pair in the query string. The default is <code>&amp;</code>, but this can be changed.</li>\n<li><strong>key-value Delimiter</strong>: The delimiter character that separates a key from its value. The default is <code>=</code>, but this can be changed.</li>\n<li><strong>Query String</strong>: Enter static and dynamic query string parameters using the delimiters defined.</li>\n</ul>\n<h3 id=\"dynamic-value-substitution\">Dynamic value substitution</h3>\n<p>This tag supports dynamic value substitution, which allows you to reference data layer variables directly in the Base URL, HTTPS URL, or Query String configuration fields. This provides the flexibility to create a dynamic tag based on your data layer. To use a data layer variable in a field, reference the variable name by surrounding it with <code>@@</code>. For example, to insert a data layer variable named <code>account_id</code> into the path of the URL, enter a value like this: <code>//example.com/path/@@account_id@@/i.gif</code></p>\n<p>Each type of data layer variable can be substituted using the following prefixes:</p>\n<ul>\n<li><strong>JavaScript Page Variable</strong>: <code>@@js_page.variable@@</code></li>\n<li><strong>Meta Tag</strong>: <code>@@meta.variable@@</code></li>\n<li><strong>Querystring Parameter</strong>: <code>@@qp.variable@@</code></li>\n<li><strong>Cookie Value</strong>: <code>@@cp.variable@@</code></li>\n</ul>\n<h3 id=\"load-rules\">Load rules</h3>\n<p><a href=\"/iq-tag-management/load-rules/about/\">Load rules</a> determine when and where to load an instance of this tag on your site.</p>\n<h3 id=\"data-mappings\">Data mappings</h3>\n<p>Mapping is the process of sending data from a <a href=\"/iq-tag-management/data-layer/data-layer-variables/\">data layer variable</a> to the corresponding destination variable of the vendor tag. For instructions on how to map a variable to a tag destination, see <a href=\"/iq-tag-management/data-mappings/manage/\">data mappings</a>.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>The Generic Tag supports custom mappings only. You can define a custom destination name in the text field.</p>\n<h3 id=\"callback-function\">Callback function</h3>\n<p>If your tag requires code to run after the main library has loaded you can use the callback function.The Generic Tag defines an internal callback property named <code>u.callback</code> that you can redefine within a tag-scoped <a href=\"/iq-tag-management/extensions/extensions-list/advanced-javascript-code-extension/\">Javascript Code extension</a>. Simply create a new extension, add your callback code, and scope it to the Generic Tag. This code will then run after the tag code has executed on the page.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>The <code>u.callback</code> function cannot be used when the Generic Tag type is set to <code>image</code>.</p>\n<p>Example:</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// Put this code in a Javascript Code extension scoped to the tag.\n</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#a6e22e\">u</span>.<span style=\"color:#a6e22e\">callback</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">function</span>() {\n</span></span><span style=\"display:flex;\"><span> <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#34;The tag has loaded, now do cool stuff!&#34;</span>);\n</span></span><span style=\"display:flex;\"><span>}\n</span></span></code></pre></div><figure><a class=\"slb\" href=\"/images/iq-tag-management/generic-tag-callback-extension.jpg\"><img src=\"https://docs.tealium.com/images/iq-tag-management/generic-tag-callback-extension.jpg\"/>\n    </a>\n</figure>\n<h3 id=\"map-html-attributes\">Map HTML attributes</h3>\n<p>If the tag <strong>Type</strong> is <code>Script</code> or <code>Iframe</code>, you can add attributes to the tag by mapping a custom value or a variable to a custom destination.</p>\n<p>For example, the following script uses a <code>data-id</code> attribute.</p>\n<div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#f92672\">&lt;</span><span style=\"color:#a6e22e\">script</span> <span style=\"color:#66d9ef\">async</span> <span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">-</span><span style=\"color:#a6e22e\">id</span><span style=\"color:#f92672\">=</span><span style=\"color:#e6db74\">&#34;1234567890&#34;</span> <span style=\"color:#a6e22e\">src</span><span style=\"color:#f92672\">=</span><span style=\"color:#e6db74\">&#34;https://example.com/js/embed.js&#34;</span><span style=\"color:#f92672\">&gt;&lt;</span><span style=\"color:#960050;background-color:#1e0010\">/script&gt;</span>\n</span></span></code></pre></div><p>To provide a value for the <code>data-id</code> attribute, map a custom value to the <code>attribute.data-id</code> custom destination, as shown in the following figure:</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/generic-tag-map-to-attribute-data-id.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/generic-tag-map-to-attribute-data-id.png\"/>\n    </a>\n</figure>\n"
        }  

    , 
        {
            "weight": "50",
            "url": "https://docs.tealium.com/iq-tag-management/getting-started/tag-basics/",
            "title": "Tag basics",
            "body": "<p>A tag loaded through Tealium runs identically to that same tag hard-code in your pages. A tag has the following components:</p>\n<figure class=\"fr dib mv0\"><a class=\"slb\" href=\"/images/iq-tag-management/getting-started-tags.jpg\"><img src=\"https://docs.tealium.com/images/iq-tag-management/getting-started-tags.jpg\"\n         alt=\"Getting Started With Tags\"\n         title=\"Getting Started With Tags\" class=\"noshadow\"/>\n    </a>\n</figure>\n<ul>\n<li><strong>Tag configuration</strong><br>\nThe settings for the tag, such as account ID.</li>\n<li><strong>Load rule</strong><br>\nThe condition that determines when to load the tag on your site.</li>\n<li><strong>Data mappings</strong><br>\nThe configuration that sends data to the tag using values from the data layer.</li>\n</ul>\n<h2 id=\"how-it-works\">How It Works</h2>\n<p>Before you add your first tag, let&rsquo;s review how it works:</p>\n<ul>\n<li><strong>No coding necessary</strong><br>\nSetting up a tag does not require any coding. A tag in TiQ offers a user-friendly interface to configure and deploy a vendor&rsquo;s tag to your site.</li>\n<li><strong>Deploy tags directly</strong><br>\nOnce the Tealium Universal Tag (<code>utag.js</code>) is added to your site, tags added in your account are loaded directly to your site by <em>publishing</em> your changes.</li>\n<li><strong>Multi-functional tags</strong><br>\nA single instance of a vendor tag typically provides all of the tagging functionality required by that vendor for your entire site. While the vendor might require different tag code for different types of pages (for example, Product Detail Page, Shopping Cart Page, and Order Confirmation Page), these are all provided in one instance of the tag in Tealium iQ.</li>\n</ul>\n"
        }  

    , 
        {
            "weight": "100",
            "url": "https://docs.tealium.com/iq-tag-management/data-mappings/about/",
            "title": "About data mappings",
            "body": "<p>A data mapping is a connection between a data layer variable and a vendor tag. Data mappings determine the data a tag receives and the type of event tracking it performs.</p>\n<p>For example, a tag might collect the page name in a parameter named <code>pName</code>, but your data layer might store this value in a variable named <code>page_name</code>. To send the value of <code>page_name</code> to <code>pName</code>, you create a data mapping. After the mapping is configured, the value of <code>page_name</code> will always be passed to the vendor parameter <code>pName</code> when that tag is triggered.</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-page-name-to-pname.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-page-name-to-pname.png\"\n         alt=\"page_name to pName\"\n         title=\"page_name to pName\"/>\n    </a>\n</figure>\n<p>Data mappings are managed from the tag configuration. The list of supported vendor parameters is organized by category and available on the <strong>Data Mappings</strong> screen. First, you select the data layer variable to map, then choose the vendor parameter it maps to.</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/data-mappings-select-destination.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/data-mappings-select-destination.png\"\n         alt=\"Select-destination\"\n         title=\"Select-destination\"/>\n    </a>\n</figure>\n<h2 id=\"variable-mapping\">Variable mapping</h2>\n<p>There are two types of data mappings: variable mappings and custom value mappings. A variable mapping is the most common type since it allows values from your data layer to be passed to a vendor parameter.</p>\n<h2 id=\"event-mapping\">Event mapping</h2>\n<p>An event mapping is a variable mapping that associates your event names to the vendor&rsquo;s event names. For example, an e-commerce tag might run specific tracking functions for each of the primary shopping actions, such as searching for products, viewing product details, adding a product to the cart, checking out, and completing a purchase.</p>\n<p>The vendor tag might offer the following tracked events for an e-commerce site:</p>\n<ul>\n<li><code>viewItem</code></li>\n<li><code>viewSearchResult</code></li>\n<li><code>addToCart</code></li>\n<li><code>viewCart</code></li>\n<li><code>completeTransaction</code></li>\n</ul>\n<p>Similarly, your data layer might track these same events using <code>tealium_event</code> and the following values:</p>\n<ul>\n<li><code>product_view</code></li>\n<li><code>search</code></li>\n<li><code>cart_add</code></li>\n<li><code>cart_view</code></li>\n<li><code>purchase</code></li>\n</ul>\n<p>An event mapping associates the values of your event variable ( <code>tealium_event</code> ) to the vendor&rsquo;s event names and triggers the corresponding tag function. Learn more about <a href=\"/iq-tag-management/data-mappings/manage/\">mapping events</a>.</p>\n<h4 id=\"example-variable-mapping\">Example: Variable mapping</h4>\n<p>A tag vendor has a parameter for currency code, named <code>curr</code> , to be set to the three-character code matching the currency of a transaction. If the tag is loaded on pages that support multiple currencies, you would likely have a data layer variable called <code>site_currency</code> or <code>currency_code</code> that is set to the appropriate value for the current visitor. The expected values might be <code>USD</code>, <code>CAD</code>, <code>GBP</code>, <code>EUR</code>, <code>JPY</code>, and so on. The variable mapping would look like this:</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-datamapping-variables.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-datamapping-variables.png\"\n         alt=\"Data Mapping Variables\"\n         title=\"Data Mapping Variables\"/>\n    </a>\n</figure>\n<h2 id=\"custom-value-mapping\">Custom value mapping</h2>\n<p>A custom value mapping is a convenient method for assigning a value directly in a mapping without using an extension or a data layer variable. The custom value is plain-text or the return value of a snippet of JavaScript code.</p>\n<h3 id=\"example-custom-value-with-plain-text\">Example: Custom value with plain text</h3>\n<p>A tag vendor has a parameter for currency code, named <code>curr</code> , but the tag is only deployed to a single geographic region where the currency is always the same (such as <code>CAD</code>). In this case, a data layer variable is not necessary because the value is constant throughout the site. The expected currency code, <code>CAD</code>, can be set directly as a custom value mapping, as follows:</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-datamapping-customvalue.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-datamapping-customvalue.png\"\n         alt=\"Data Mapping Custom Value\"\n         title=\"Data Mapping Custom Value\"/>\n    </a>\n</figure>\n<h3 id=\"example-custom-value-with-javascript-code\">Example: Custom value with JavaScript code</h3>\n<p>The custom value can also be returned from JavaScript code. This option can be used to pass a JavaScript number, boolean, or array value to a vendor parameter. You can use advanced statements or even an inline function.</p>\n<p>For example, the following line of JavaScript sets the mapping to <code>GB</code> if the <code>hostname</code> contains <code>co.uk</code>, otherwise it is set to <code>USD</code>:</p>\n<pre tabindex=\"0\"><code>location.hostname.indexOf(&#34;co.uk&#34;) &gt; -1 ? &#34;GBP&#34; : &#34;USD&#34;\n</code></pre><figure><a class=\"slb\" href=\"/images/iq-tag-management/iq-data-mappings-custom-value-jscode.jpg\"><img src=\"https://docs.tealium.com/images/iq-tag-management/iq-data-mappings-custom-value-jscode.jpg\"\n         alt=\"Custom-Value-jSCode\"\n         title=\"Custom-Value-jSCode\" width=\"301\" height=\"57\"/>\n    </a>\n</figure>\n<p>To reference a data layer variable such as <code>page_name</code>, use the <code>b</code> object. For example, <code>b['page_name']</code>. <a href=\"/platforms/javascript/the-b-object/\">Learn more about the b object</a>.</p>\n<h2 id=\"mapping-precedence\">Mapping precedence</h2>\n<p>When two or more variables are mapped to the same destination, such as <code>page_name &gt; pageName</code> and <code>Document Title &gt; pageName</code>, the last mapping takes precedence. Data mappings can be reordered to account for this precedence.</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq-two-variabvles-mapped-to-same-destination.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq-two-variabvles-mapped-to-same-destination.png\"\n         alt=\"Two Variables Mapped to Same Destination\"\n         title=\"Two Variables Mapped to Same Destination\"/>\n    </a>\n</figure>\n<p>In this example, if both <code>page_name</code> and <code>Document Title</code> are populated, the destination variable <code>pageName</code> will receive the value from <code>Document Title</code>. If the variables are populated, the last mapping takes precedence.</p>\n<p>Learn more about <a href=\"/iq-tag-management/data-mappings/manage/\">reordering data mappings</a>.</p>\n<p class=\"note\"><i class=\"fa fa-exclamation-triangle\"></i>If a variable does not have a value, the mapping is not applied.</p>\n"
        }  

    , 
        {
            "weight": "150",
            "url": "https://docs.tealium.com/iq-tag-management/tags/tag-marketplace/tag-marketplace-policy/",
            "title": "Tag Marketplace policy",
            "body": "<h2 id=\"prerequisites\">Prerequisites</h2>\n<ul>\n<li>The <a href=\"/iq-tag-management/administration/user-permissions/about/\">Manage Account permission level</a> is required to access this feature.</li>\n</ul>\n<h2 id=\"how-it-works\">How it works</h2>\n<p>The Tag Marketplace contains every vendor integration that Tealium iQ offers. This means that any user with permission to add tags and publish has the ability to add one of these tags to your configuration (and to your site). The Tag Marketplace has hundreds of tags and is easily searchable and browseable. For example, if you search the Tag Marketplace for &ldquo;Google&rdquo; several offerings will appear.</p>\n<p>When a policy is enabled, it automatically applies to all underlying profiles. When enabled, the policy hides all vendors by default. Once you use the Tag Marketplace policy to select the vendors approved for your site, only those vendors are offered. Limiting the tags available provides an additional security to your account and prevents unapproved tags from being released to your site.</p>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq%29manage-tag-marketplace-policy.jpg\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq%29manage-tag-marketplace-policy.jpg\"\n         alt=\"Manage Tag Marketplace Policy\"\n         title=\"Manage Tag Marketplace Policy\"/>\n    </a>\n</figure>\n<p>The Tag Marketplace policy dialog uses the following terms and buttons:</p>\n<ul>\n<li><strong>Enable Tag Marketplace Policy</strong><br>\nCheck this box to activate the Tag Marketplace policy for your account. By default, this feature is deactivated and all vendor tags are available in the Tag Marketplace.</li>\n<li><strong>Hidden Tags</strong><br>\nWhen the policy is activated, the tags in this list are not be available in the <strong>Tag Marketplace</strong>.</li>\n<li><strong>Marketplace Tags</strong><br>\nWhen the policy is activated, the tags in this list will appear in the <strong>Tag Marketplace</strong>.</li>\n<li><strong>Hide All</strong><br>\nThis button moves all tags to the <strong>Hidden Tags</strong> window, and therefore unavailable in the <strong>Tag Marketplace</strong>.</li>\n<li><strong>Show All</strong><br>\nThis button moves all tags into the <strong>Tag Marketplace</strong> window and makes all tags available in the <strong>Tag Marketplace</strong>.</li>\n<li><strong>Reset</strong><br>\nClicking Reset allows you to revert changes to the Tag Marketplace Policy back to the values present before clicking Save.</li>\n<li><strong>Save</strong><br>\nClicking Save saves the values for your profile.</li>\n</ul>\n<h3 id=\"enable-tags\">Enable tags</h3>\n<p>This section describes how to enable only the tags you specify to be available in the Tag Marketplace and uses Tealium tags as an example.</p>\n<p>Use the following steps to enable only &ldquo;Tealium&rdquo; tags in the policy:</p>\n<ol>\n<li>In the admin menu, click <strong>Manage Tag Marketplace Policy</strong>. The <strong>Manage Tag Marketplace Policy</strong> dialog appears.</li>\n<li>Click the <strong>Enable Tag Marketplace Policy</strong> checkbox.</li>\n<li>Scroll down the list of Hidden Tags and click <strong>Show</strong> next to all Tealium tags.<br>\nThe Tealium tags selected move to the Marketplace Tags column, indicating that only these tags will appear in the Tag Marketplace.<br>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/whiteui-tiq%29manage-tag-marketplace-policy.jpg\"><img src=\"https://docs.tealium.com/images/iq-tag-management/whiteui-tiq%29manage-tag-marketplace-policy.jpg\"\n             alt=\"Manage Tag Marketplace Policy\"\n             title=\"Manage Tag Marketplace Policy\"/>\n        </a>\n    </figure></li>\n<li>Click <strong>Save</strong>.<br>\nYou do not need to Save and Publish after this step, the changes go into effect immediately. With this policy in place, the Tag Marketplace now only offers the &ldquo;Tealium&rdquo; tags and an alert is displayed indicating that the Tag Marketplace policy is enabled.<br>\n<figure><a class=\"slb\" href=\"/images/iq-tag-management/tags/tag-marketplace-policy/tag_marketplace_search_policy_enabled.png\"><img src=\"https://docs.tealium.com/images/iq-tag-management/tags/tag-marketplace-policy/tag_marketplace_search_policy_enabled.png\"\n             alt=\"Tag Marketplace Policy_Tag Marketplace Policy Enabled\"\n             title=\"Tag Marketplace Policy_Tag Marketplace Policy Enabled\"/>\n        </a>\n    </figure></li>\n<li>Try to search for another vendor.<br>\nThere are no return results.</li>\n</ol>\n<h3 id=\"show-a-tag\">Show a tag</h3>\n<ol>\n<li>In the admin menu, click <strong>Manage Tag Marketplace Policy</strong>. The <strong>Manage Tag Marketplace Policy</strong> dialog appears.</li>\n<li>Click the <strong>Enable Tag Marketplace Policy</strong> checkbox.</li>\n<li>From the Hidden Tags column, identify the tag you want to show.</li>\n<li>Click the <strong>Show</strong> next to your target tag.<br>\nThe tag is moved to the <strong>Marketplace Tags</strong> column.</li>\n<li>Repeat to add more tags.</li>\n<li>Click <strong>Save</strong> to confirm.</li>\n</ol>\n<h3 id=\"hide-a-tag\">Hide a tag</h3>\n<ol>\n<li>In the admin menu, click <strong>Manage Tag Marketplace Policy</strong>. The <strong>Manage Tag Marketplace Policy</strong> dialog appears.</li>\n<li>Click the <strong>Enable Tag Marketplace Policy</strong> checkbox.</li>\n<li>From the <strong>Marketplace Tags</strong> column, scroll down to identify the tag you want to hide.</li>\n<li>Click <strong>Hide</strong> next to your target tag.<br>\nThe tag is moved back to the <strong>Hidden Tags</strong> column.</li>\n<li>Repeat to hide other tags.</li>\n<li>Click <strong>Save</strong> to confirm.</li>\n</ol>\n<h3 id=\"show-all-tags\">Show all tags</h3>\n<ol>\n<li>In the admin menu, click <strong>Manage Tag Marketplace Policy</strong>. The <strong>Manage Tag Marketplace Policy</strong> dialog appears.</li>\n<li>Click the <strong>Enable Tag Marketplace Policy</strong> checkbox.</li>\n<li>Click <strong>Show All</strong>.<br>\nAll tags are moved to the <strong>Marketplace Tags</strong> column.</li>\n<li>Click <strong>Save</strong> to confirm.</li>\n</ol>\n<h3 id=\"hide-all-tags\">Hide all tags</h3>\n<ol>\n<li>In the admin menu, click <strong>Manage Tag Marketplace Policy</strong>. The <strong>Manage Tag Marketplace Policy</strong> dialog appears.</li>\n<li>Click the <strong>Enable Tag Marketplace Policy</strong> checkbox.</li>\n<li>Click <strong>Hide All</strong>.<br>\nAll tags are moved back to the <strong>Marketplace Tags</strong> column.</li>\n<li>Click <strong>Save</strong> to confirm.</li>\n</ol>\n<h3 id=\"reset-the-policy\">Reset the policy</h3>\n<p>Clicking <strong>Reset</strong> cancels any show/hide actions prior to saving and restore the two columns to their original state prior to saving.</p>\n"
        }  

    ]
}
