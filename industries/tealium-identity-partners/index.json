
{
    "kind": "term",
    "name": "Tealium Identity Partners",
    "count": 11,
    "items": [

    
        {
            "weight": "-10",
            "url": "https://docs.tealium.com/industries/tealium-identity-partners/about/",
            "title": "The Identity Partner Ecosystem",
            "body":"<p>Tealium relies on deterministic information sources to use PII to stitch visitor data together into a visitor profile for a single customer view. However, you can use identity providers of first-party and third-party data, which often rely on probabilistic methods of identity resolution, to create high-quality insights about each visitor, prospect and customer. These probabilistic insights can be combined with data collected and profiles enriched by Tealium to enhance relationship data and provide personalized experiences to customers.</p><h2 id=\"what-do-identity-providers-do\">What do Identity Providers do?</h2><p>Tealium’s Identity Partners provide the following services:</p><ul><li>Collect first party and third party data into a single customer database. This can be used as a CRM itself, or used to enhance a CRM that a business owns.</li><li>Collect, clean, and normalize first party data in an ongoing process to ensure the quality of their service.</li><li>Integrate with UID2.0, the open source ID framework that will be replacing third-party cookies. For example, The Trade Desk offers UID 2.0, which allows the advertiser to share PII, and they send back a short-term anonymous identifier for ad targeting.</li><li>Some data providers also provide AdTech and publisher-related features. These direct integrations with publisher platforms can support ad targeting, and others allow analysis of ad campaigns in privacy-compliant environments.</li></ul><p>Tealium provides access to a large number of identity partner integrations across the platform: iQ Tag Management, EventStream, Data Source, AudienceStream, and Functions. Because it can be a lot of work pulling information from each of these sources and combining it into a clear vision of your visitor and customer profile, Tealium is here to make the process of integrating identity provider data from multiple sources smoother and easier.</p><h3 id=\"deterministic-vs-probabilistic\">Deterministic vs Probabilistic</h3><p>It is important to understand the difference between deterministic matching and probabailistic data models:</p><ul><li>Deterministic matching uses first-party data to link device-level data to the appropriate user profiles.</li><li>Probabilistic models use predictive algorithms to link user data to an individual based on a confidence level.</li></ul><p>The deterministic method uses PII (email, UID2.0, etc.) to identify the user. Tealium employs the deterministic model with Visitor Stitching.</p><p>Integrations with probabilistic identity programs typically require the use of Tealium’s functions to process returned data along with the confidence score.</p><h2 id=\"how-it-works\">How it works</h2><h3 id=\"auth0-and-ciam\">Auth0 and CIAM</h3><p>Auth0 uses the Customer Identity Access Management (CIAM) model:</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/13026i420EBFB2AFFF9296/strip-exif-data/true/image-dimensions/2000?v=v2&amp;px=-1\"/></figure><p>When the user logs in to Auth0, their identity is confirmed by the Auth0 authorization server.</p><p>Tealium appears as an Auth0 action, which can be used through drag and drop integration.</p><p>The Auth0 Data Source appears under the new Identity category in Tealium.</p><h3 id=\"uid-20\">UID 2.0</h3><p>The Trade Desk and other vendors use UID 2.0, which uses PII for deterministic identification. You will need to configure an enrichment and function code to assign a UID 2.0 to a visitor:</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/13027iC34220532E481846/strip-exif-data/true/image-dimensions/2000?v=v2&amp;px=-1\"/></figure><p>For more information, see <a href=\"/server-side/functions/event-visitor-functions/uid2-token/\">Using Tealium Functions to Generate a UID2.0 Token</a>.</p><p class=\"note\"><i class=\"fas fa-info-circle\"></i>UID 2.0 cannot be used in the EU due to privacy restrictions.</p><h3 id=\"acxiom-and-merkle\">Acxiom and Merkle</h3><p>As identity and data management solution providers, Acxiom and Merkle perform the following roles:</p><ul><li>Provide customer data strategies, and additional optional services.</li><li>Require access to Functions and Tealium iQ Tag Management.</li><li>Cleanse and store first and third party data for businesses, which can group profiles into households, gather demographics, track NCOA (National Change of Address), and more.</li><li>Identify visitors via probabalistic methods to &ldquo;stitch deterministically, enrich probabalistically.&rdquo;</li></ul><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/13030i94D3473E3F14859A/strip-exif-data/true/image-dimensions/2000?v=v2&amp;px=-1\"/></figure><h2 id=\"how-you-can-use-identity-providers\">How you can use Identity Providers</h2><p>You can use an identity provider to immediately share PII such as phone numbers and email addresses with Tealium to enrich customer profiles. This allows you to turn anonymous visitors into known visitors or customers.</p><p>Because data providers constantly clean and normalize their data, you can use this information to help clean your own data.</p><p>As third party cookies are deprecated, anonymous retargeting will no longer be possible. So sharing one or more pieces of PII with AdTech ID partners allows identification and targeting of that individual across publishers and domains.</p><p>Many customers have already hired third-party identity providers to improve their visitor profiles. The Tealium Identity Marketplace can help simplify the process of subscribing to, importing, and incorporating this data.</p><h2 id=\"identity-tags-connectors-and-data-sources\">Identity Tags, Connectors, and Data Sources</h2><p>The <strong>Identity</strong> category in each of the Tags, Connectors, and Data Sources interfaces lists all of the available identifier resources for that part of the platform.</p><h3 id=\"identity-and-data-management-solutions\">Identity and Data Management Solutions</h3><table><thead><tr><th style=\"text-align:left\">Partner</th><th style=\"text-align:left\">Integration Type</th><th style=\"text-align:left\">Summary</th><th style=\"text-align:left\">Documentation Link</th></tr></thead><tbody><tr><td style=\"text-align:left\">Acxiom</td><td style=\"text-align:left\">Tag</td><td style=\"text-align:left\"><ul><li>First-party tag implemented across brand’s owned and paid media.</li><li>Provides a unified and consistent identity across owned and paid media.</li><li>Allows for linkages to be built by both deterministic and probabilistic signals.</li><li>Operates as a fully first-party solution, meaning running off of the client’s own domain and with no data sharing with other entities.</li><li>Able to resolve identities even in the absence (or non-acceptance) of cookies</li></ul></td><td style=\"text-align:left\"><a href=\"/client-side-tags/acxiom-real-identity-rtag/\">Acxiom Real Identity rTag Setup Guide</a></td></tr><tr><td style=\"text-align:left\">Auth0</td><td style=\"text-align:left\">Data Source</td><td style=\"text-align:left\">An action within the Auth0 integration market that sends user data from Auth0 upon login</td><td style=\"text-align:left\"><a href=\"https://marketplace.auth0.com/integrations/tealium\">Tealium Integrations at Auth0</a></td></tr><tr><td style=\"text-align:left\">Merkle</td><td style=\"text-align:left\">Tag</td><td style=\"text-align:left\">Merkury uses an organization’s first-party CRM data and valuable interactions such as logins, outbound email campaigns and media reach to create and grow a universe of person-based IDs. Tealium IQ’s data mapping feature allows you to control which data points are shared with Merkury.</td><td style=\"text-align:left\"><a href=\"/client-side-tags/merkle-merkury-tag/\">Merkle Merkury Tag Setup Guide</a></td></tr></tbody></table><h3 id=\"advertising-identity-services\">Advertising Identity Services</h3><table><thead><tr><th style=\"text-align:left\">Partner</th><th style=\"text-align:left\">Integration Type</th><th style=\"text-align:left\">Summary</th><th style=\"text-align:left\">Documentation Link</th></tr></thead><tbody><tr><td style=\"text-align:left\">Criteo</td><td style=\"text-align:left\">Tag</td><td style=\"text-align:left\">Cookie Matching associates a cookie that identifies a Tealium visitor to the cookie that identifies the user for Criteo.</td><td style=\"text-align:left\"><a href=\"/client-side-tags/criteo-cookie-matching-service-tag/\">Criteo Cookie Matching Service Tag Setup Guide</a></td></tr><tr><td style=\"text-align:left\">Criteo</td><td style=\"text-align:left\">Connector</td><td style=\"text-align:left\">Audience Match is a flexible customer targeting solution.</td><td style=\"text-align:left\"><a href=\"/server-side-connectors/criteo-audience-match-connector/\">Criteo Audience Match Connector Setup Guide</a></td></tr><tr><td style=\"text-align:left\">Epsilon</td><td style=\"text-align:left\">Tag</td><td style=\"text-align:left\">Returns a list of partner pixel URLs that, when called by the browser, synchronize IDs with exchanges. This allows users can to be identified and messaged after they leave your site.</td><td style=\"text-align:left\"><a href=\"/client-side-tags/epsilon-partner-sync-web-service-tag/\">Epsilon Partner Sync Web Service Tag Setup Guide</a></td></tr><tr><td style=\"text-align:left\">Tapad</td><td style=\"text-align:left\">Tag</td><td style=\"text-align:left\">This allows Tapad and you to jointly identify devices in order to take action on these devices.<br><br><strong>Note:</strong> Fires once per Tealium visitor session. Sends the <code>tapad_id</code> server-side attribute to Tealium.</td><td style=\"text-align:left\"><a href=\"/client-side-tags/tapad-cookie-matching-service-tag/\">TAPAD Cookie Matching Service Tag Setup Guide</a></td></tr><tr><td style=\"text-align:left\">The Trade Desk (TDD)</td><td style=\"text-align:left\">Tag</td><td style=\"text-align:left\">The Trade Desk Universal Pixel enables marketers to gain more visibility into user data, and analyze reporting at a more granular level.</td><td style=\"text-align:left\"><a href=\"/client-side-tags/the-trade-desk-universal-pixel-tag/\">Trade Desk Universal Pixel Setup Guide for Tealium iQ</a></td></tr><tr><td style=\"text-align:left\">The Trade Desk (TDD)</td><td style=\"text-align:left\">Connector</td><td style=\"text-align:left\">The Trade Desk Connector can be used for posting enriched Visitor Profiles and Audiences to TDD for more personalized advertising campaigns.</td><td style=\"text-align:left\"><a href=\"/client-side-tags/the-trade-desk-cookie-matching-service-tag/\">The Trade Desk Cookie Matching Service Tag Setup Guide</a> (used with UID2.0 Function)</td></tr><tr><td style=\"text-align:left\">The Trade Desk (TDD)</td><td style=\"text-align:left\">Function</td><td style=\"text-align:left\">UID2.0 is an open source identifier that replaces 3rd-party cookies.</td><td style=\"text-align:left\"><a href=\"/server-side-connectors/the-trade-desk-connector/\">The Trade Desk Connector Setup Guide</a> (used with UID2.0 Function)</td></tr></tbody></table><h3 id=\"identity-provider-privacy-restrictions\">Identity provider privacy restrictions:</h3><p>Identity Partners have limitations on where they can operate due to legislation such as the GDPR. Each partner will have different capabilities (for example, Merkle is Global, while the TDD UID2.0 cannot be used within the EU).</p><ul><li>Acxiom - <a href=\"https://www.acxiom.com/data-privacy-ethics/gdpr/\">GDPR</a></li><li>Auth0 - <a href=\"https://auth0.com/docs/secure/data-privacy-and-compliance/gdpr\">Auth0 General Data Protection Regulation Compliance</a></li><li>Criteo - <a href=\"https://www.criteo.com/blog/gdpr-need-know-criteo/\">GDPR: What You Need to Know | Criteo</a></li><li>Epsilon - <a href=\"https://www.epsilon.com/emea/insights/blog/gdpr-steps-towards-compliance\">GDPR: Steps towards compliance</a></li><li>Merkle - <a href=\"https://merkleinc.ch/en/data-protection\">Data Protection Statement</a></li><li>Tapad - <a href=\"https://www.tapad.com/global-privacy-notice\">Privacy Notice - Global</a></li><li>TDD - <a href=\"https://github.com/UnifiedID2/\">UnifiedID2</a></li></ul><h2 id=\"how-to-implement-an-identity-provider\">How to implement an identity provider</h2><p>To implement identity providers:</p><ul><li>For The Trade Desk and UID 2.0, see <a href=\"/server-side/functions/event-visitor-functions/uid2-token/\">Using Tealium Functions to Generate a UID2.0 Token</a>.</li><li>For Acxiom, see <a href=\"../acxiom-identity-resolution/\">Using Tealium Functions for Acxiom Identity Resolution</a>.</li></ul><p>We will add more function examples soon.</p>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/client-side-tags/acxiom-real-identity-rtag/",
            "title": "Acxiom Real Identity rTag Setup Guide",
            "body":"<p>rTAG provides the ability to flexibly instrument digital channels with data collection capabilities, identity generation and association, privacy governance and containers for managing invocation of partner tags.</p><h2 id=\"tag-tips\">Tag Tips</h2><ul><li>Use mappings to override or dynamically set the tag configurations.</li></ul><h2 id=\"tag-configuration\">Tag Configuration</h2><p>Navigate to the Tag Marketplace to add a new tag. Read the <a href=\"/iq-tag-management/tags/about/\">Tag Overview</a> article for general instructions on how to add a tag.</p><p>When adding the tag, configure the following settings:</p><ul><li><strong>Domain Name</strong>: A subdomain of the client’s domain name with a CNAME that much be changed to rTAG.</li><li><strong>ESI toggle</strong>: (Optional) Top level directory indicates whether ESI is enabled.<ul><li><strong>1</strong> — Indicates files are processed for ESI directly.</li><li><strong>2</strong> — Indicates that ESI files are gzipped and cached after being generated.</li></ul></li><li><strong>Logging Mode</strong>: Logging mode based on the logging requirements of the client.</li><li><strong>Tag Type</strong>: The filename of the object to be received.</li></ul><h2 id=\"load-rules\">Load Rules</h2><p>Load the tag on all pages or set conditions for when your tag will load. For more information about load rules, see the <a href=\"/iq-tag-management/load-rules/about/\">Load Rules</a> documentation.</p><h2 id=\"data-mappings\">Data Mappings</h2><p>Mapping is the process of sending data from a data layer variable to the corresponding destination variable of the vendor tag. For instructions on how to map a variable to a tag destination, see <a href=\"/iq-tag-management/data-mappings/manage/\">data mappings</a>.</p><p>The available categories are:</p><h3 id=\"tag-configuration-1\">Tag Configuration</h3><table><thead><tr><th style=\"text-align:left\">Variable</th><th style=\"text-align:left\">Description</th></tr></thead><tbody><tr><td style=\"text-align:left\">Domain name (<code>domain_name</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">ESI toggle (<code>esi_toggle</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Logging mode (<code>logging_mode</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Tag type (<code>tag_type</code>)</td><td style=\"text-align:left\">[String]</td></tr></tbody></table><h3 id=\"standard\">Standard</h3><table><thead><tr><th style=\"text-align:left\">Variable</th><th style=\"text-align:left\">Description</th></tr></thead><tbody><tr><td style=\"text-align:left\">Cache buster, typically set to a random number or timestamp (<code>r</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Encoded URL destination for a 302-redirect directive (<code>ru</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Event ID (<code>evid</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Session ID (<code>s</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Domain (<code>dmn</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Path with filename (<code>pn</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Query string of the URL (<code>qs</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Domain of the referring page (<code>rdn</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Path with filename of referring page (<code>rpn</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Query string of the URL of referring page (<code>rqs</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Unique user agent/user/browser identifier, which can be from a cookie, a statistical ID, or other source (<code>uu</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Statistical id (<code>suu</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">The specific class tag configuration to be used (<code>cls</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Publisher or site identifier (<code>pubid</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Partner unique identifier (<code>puu</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Payload passed by client in clientObject (<code>payload</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Advertising agency identifier (<code>ag</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Advertiser or marketer identifier (<code>adv</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Campaign identifier (<code>ca</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Creative identifier (<code>cr</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">List of user segments (<code>sg</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Comma separated list of entity types (<code>aqet</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Client-determined variable 0 (<code>v0</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Client-determined variable 1 (<code>v1</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Client-determined variable 2 (<code>v2</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Client-determined variable 3 (<code>v3</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Client-determined variable 4 (<code>v4</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Client-determined variable 5 (<code>v5</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Client-determined variable 6 (<code>v6</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Client-determined variable 7 (<code>v7</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Client-determined variable 8 (<code>v8</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Client-determined variable 9 (<code>v9</code>)</td><td style=\"text-align:left\">[String]</td></tr></tbody></table>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/client-side-tags/criteo-cookie-matching-service-tag/",
            "title": "Criteo Cookie Matching Service Tag Setup Guide",
            "body":"<p>Criteo Cookie Matching Service enables a buyer to associate the cookie that identifies a Tealium visitor, and the cookie that identifies the user for Criteo.</p><h2 id=\"tag-tips\">Tag Tips</h2><ul><li>If left blank, Tealium Account and Profile will be automatically populated.</li><li>Sends the following server-side attribute back to Tealium:<ul><li><code>criteo_user_id</code></li></ul></li></ul><p>For more information about cookie matching in EventStream, see: <a href=\"/server-side/connectors/cookie-matching/\">Understanding Persistent Cookie Matching in EventStream</a>.</p><h2 id=\"tag-configuration\">Tag Configuration</h2><p>Navigate to the Tag Marketplace to add a new tag. Read the <a href=\"/iq-tag-management/tags/about/\">Tag Overview</a> article for general instructions on how to add a tag.</p><p>When adding the tag, configure the following settings:</p><ul><li><strong>Tealium Account</strong>: (Optional) Your Tealium account.</li><li><strong>Tealium Profile</strong>: (Optional) Your Tealium profile.</li><li><strong>Days between syncs</strong>: (Optional) How often to recheck the ID. This value defaults to 7 days.</li><li><strong>Data Source Key</strong>: (Optional) The data source key from your server-side configuration.</li><li><strong>Use <code>/event</code> endpoint</strong>: Send data to the <code>/event</code> endpoint.</li></ul><h2 id=\"load-rules\">Load Rules</h2><p>Load the tag on all pages or set conditions for when your tag will load. For more information about load rules, see the <a href=\"/iq-tag-management/load-rules/about/\">Load Rules</a> documentation.</p><h2 id=\"data-mappings\">Data Mappings</h2><p>Mapping is the process of sending data from a data layer variable to the corresponding destination variable of the vendor tag. For instructions on how to map a variable to a tag destination, see <a href=\"/iq-tag-management/data-mappings/manage/\">data mappings</a>.</p><p>The available categories are:</p><h3 id=\"standard\">Standard</h3><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td>Tealium Account (<code>tealium_account</code>)</td><td>[String]</td></tr><tr><td>Tealium Profile (<code>tealium_profile</code>)</td><td>[String]</td></tr><tr><td>Days between syncs (<code>days_between_syncs</code>)</td><td>[Number]</td></tr><tr><td>Data Source Key (<code>tealium_datasource</code>)</td><td>[String]</td></tr><tr><td>Use <code>/event</code> endpoint (<code>use_event_endpoint</code>)</td><td>[Boolean]</td></tr></tbody></table>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/client-side-tags/merkle-merkury-tag/",
            "title": "Merkle Merkury Tag Setup Guide",
            "body":"<p>Merkury, Merkle’s identity resolution platform, helps organizations master cookieless identity through control and transparency. Powered by people-based data across 1,000+ attributes, Merkury integrates with Tealium to increase site visitor identification rates, inform cross-channel targeting, personalization, measurement, and more. Using our wizard-driven integration, organizations can create load rules to determine when and where to trigger Merkury’s JavaScript tag. Tealium IQ’s data mapping feature allows you to control which data points are shared with Merkury.</p><h2 id=\"tag-tips\">Tag Tips</h2><ul><li>Adobe MediaSDK requires the Adobe Experience Cloud ID Service as well as AppMeasurement for JS to be loaded first, preferably bundled.</li><li>This tag is fired via <code>utag.track('video', data);</code> which should be implemented in your video event handlers.</li></ul><h2 id=\"tag-configuration\">Tag Configuration</h2><p>Navigate to the Tag Marketplace to add a new tag. Read the <a href=\"/iq-tag-management/tags/about/\">Tag Overview</a> article for general instructions on how to add a tag.</p><p>When adding the tag, configure the following settings:</p><ul><li><strong>CID</strong>: CID is a client-specific numeric account number generated from Merkury Team.</li><li><strong>Domain</strong>: Domain is the client website&rsquo;s domain (for example, <code>merkleinc.com</code>).</li><li><strong>Send Merkury Identity Event</strong>: Whether to generate the <code>merkury_identity</code> event, which contains the following information:<ul><li><code>event</code></li><li><code>merkury_email_sha256</code></li><li><code>merkury_hmid</code></li><li><code>merkury_confidence_score</code></li></ul></li></ul><h2 id=\"load-rules\">Load Rules</h2><p>Load the tag on all pages or set conditions for when your tag will load. For more information about load rules, see the <a href=\"/iq-tag-management/load-rules/about/\">Load Rules</a> documentation.</p><h2 id=\"data-mappings\">Data Mappings</h2><p>Mapping is the process of sending data from a data layer variable to the corresponding destination variable of the vendor tag. For instructions on how to map a variable to a tag destination, see <a href=\"/iq-tag-management/data-mappings/manage/\">data mappings</a>.</p><p>The available categories are:</p><h3 id=\"standard\">Standard</h3><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td>CID</td><td>(<code>sv_cid</code>)</td></tr><tr><td>DOMAIN</td><td>(<code>sv_origin</code>)</td></tr><tr><td>Client ID</td><td>(<code>uID</code>)</td></tr><tr><td>Email Address</td><td>(<code>em</code>)</td></tr><tr><td>MD5 Email Hash</td><td>(<code>eme</code>)</td></tr><tr><td>Client Email ID</td><td>(<code>emID</code>)</td></tr></tbody></table>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/client-side-tags/epsilon-partner-sync-web-service-tag/",
            "title": "Epsilon Partner Sync Web Service Tag Setup Guide",
            "body":"<p>Epsilon is the leader in outcome-based marketing with a rich, 50-year heritage in helping marketers anticipate, activate, and prove measurable business outcomes.</p><h2 id=\"tag-configuration\">Tag Configuration</h2><p>First, go to the tag marketplace and add the Epsilon Partner Sync Web Service tag (Learn more about <a href=\"/iq-tag-management/tags/manage-tags/\">how to add a tag</a>).</p><p>After adding the tag, configure the following settings:</p><ul><li><strong>Advertiser Identifier</strong>: <code>dtm_cid</code></li><li><strong>Secondary Advertiser Identifier</strong>: <code>dtm_cmagic</code></li><li><strong>Page Visit Form ID</strong>: <code>dtm_fid</code></li></ul><h2 id=\"data-mappings\">Data Mappings</h2><p>Mapping is the process of sending data from a <a href=\"/iq-tag-management/data-layer/manage-variables/manage-data-bundles/\">data layer variable</a> to the corresponding destination variable of the vendor tag. For instructions on how to map a variable to a tag destination, see <a href=\"/iq-tag-management/data-mappings/manage/\">data mappings</a>.</p><p>The available categories are:</p><h3 id=\"tag-configuration-1\">Tag Configuration</h3><table><thead><tr><th style=\"text-align:left\">Variable</th><th style=\"text-align:left\">Description</th></tr></thead><tbody><tr><td style=\"text-align:left\">Advertiser Identifier (<code>dtm_cid</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Secondary Advertiser Identifier (<code>dtm_cmagic</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">Page Visit Form ID (<code>dtm_fid</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\">User ID (<code>dtm_cookie_id</code>)</td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\"><code>dtm_token_s</code></td><td style=\"text-align:left\">[String]</td></tr><tr><td style=\"text-align:left\"><code>dtmc_tcf_string</code></td><td style=\"text-align:left\">[String]</td></tr></tbody></table>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/client-side-tags/tapad-cookie-matching-service-tag/",
            "title": "TAPAD Cookie Matching Service Tag Setup Guide",
            "body":"<h2 id=\"tag-tips\">Tag Tips</h2><ul><li>This tag only fires once per Tealium visitor session.</li><li>Sends the following server-side attribute back to Tealium:<ul><li><code>tapad_id</code></li></ul></li></ul><h2 id=\"tag-configuration\">Tag Configuration</h2><p>First, go to Tealium&rsquo;s tag marketplace and add the TAPAD Cookie Matching Service tag (Learn more about <a href=\"/iq-tag-management/tags/manage-tags/\">how to add a tag</a>).</p><p>After adding the tag, configure the following settings:</p><ul><li><strong>Tealium Account</strong><ul><li>Your Tealium AudienceStream account.</li><li>If left blank, the current Tealium iQ account name will be used.</li></ul></li><li><strong>Tealium Profile</strong><ul><li>Your Tealium AudienceStream profile.</li><li>If left blank, the current Tealium iQ profile name will be used.</li></ul></li><li><strong>Partner ID</strong></li></ul><h2 id=\"data-mappings\">Data Mappings</h2><p>Mapping is the process of sending data from a <a href=\"/iq-tag-management/data-layer/data-layer-variables/\">data layer variable</a> to the corresponding destination variable of the vendor tag. For instructions on how to map a variable to a tag destination, see <a href=\"/iq-tag-management/data-mappings/manage/\">Data Mappings</a>.</p><p>The available categories are:</p><h3 id=\"standard\">Standard</h3><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td><code>tealium_account</code></td><td>Tealium Account</td></tr><tr><td><code>tealium_profile</code></td><td>Tealium Profile</td></tr><tr><td><code>partner_id</code></td><td>Partner ID</td></tr></tbody></table>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side-connectors/criteo-audience-match-connector/",
            "title": "Criteo Audience Match Connector Setup Guide",
            "body":"<p class=\"note\"><i class=\"fas fa-info-circle\"></i><strong>Deprecated Version</strong><br>The previous version of this connector was named &ldquo;Criteo Audience Match (Customer-Provided Credentials)&rdquo; and was integrated with the Criteo Marketing API (MAPI), which is planned for deprecation. That connector has been deprecated and the name changed to &ldquo;Criteo Audience Match (Deprecated Marketing API v1)&rdquo;.<br><strong>Current Version</strong><br>The current connector is named &ldquo;Criteo Audience Match&rdquo; and is integrated with the Criteo API that was released in January 2021.</p><h2 id=\"connector-actions\">Connector Actions</h2><table><thead><tr><th><strong>Action Name</strong></th><th><strong>AudienceStream</strong></th><th><strong>EventStream</strong></th></tr></thead><tbody><tr><td>Add User to Audience</td><td>✓</td><td>✓</td></tr><tr><td>Remove User from Audience</td><td>✓</td><td>✓</td></tr></tbody></table><h3 id=\"api-information\">API Information</h3><p>This connector uses the following vendor API:</p><ul><li>API Name: Criteo API</li><li>API Version: 2021-07</li><li>API Endpoint: <code>https://api.criteo.com/2021-01/audiences</code></li><li>Documentation: <a href=\"https://developers.criteo.com/marketing-solutions/docs/audiences\">Criteo Audiences API</a></li></ul><h3 id=\"batch-limits\">Batch Limits</h3><p>This connector uses batched requests to support high-volume data transfers to the vendor. Requests are queued until one of the following three (3) thresholds is met:</p><ul><li>Max number of requests: 50000</li><li>Max time since oldest request: 15 minutes</li><li>Max size of requests: 10 MB</li></ul><h2 id=\"configure-settings\">Configure Settings</h2><h3 id=\"request-consent-link-from-criteo\">Request Consent Link from Criteo</h3><p>If you intend to use this connector, send an email to <a href=\"mailto:asintegrations@tealium.com\">asintegrations@tealium.com</a> to receive a consent link that authorizes the Tealium Customer Data Hub to manage audiences on behalf of advertisers. Learn more from <a href=\"https://developers.criteo.com/marketing-solutions/docs/authorization-requests\">Criteo Developers: Send an Authorization Request to Your Users</a>.</p><p class=\"note\"><i class=\"fas fa-info-circle\"></i>This step may take up to 3 working days for approval.</p><p>After receiving the Criteo activation link, complete the following steps:</p><ol><li>Click the activation link provided.<br>The <strong>Criteo Consent Portal</strong> appears.</li><li>Grant the requested authorization levels for the account.</li></ol><h3 id=\"add-connector-and-configure-settings\">Add Connector and Configure Settings</h3><p>Go to the Connector Marketplace and add the Criteo Audience Match connector to your profile. Read the <a href=\"/server-side/connectors/about/\">Connector Overview</a> article for general instructions on how to add a connector.</p><p>After adding the connector, configure the following settings:</p><ul><li><strong>Advertiser ID (Required)</strong><br>Configure the <strong>Advertiser ID</strong> associated with an integration in your Criteo account</li></ul><h2 id=\"action-settings---parameters-and-options\">Action Settings - Parameters and Options</h2><p>Click <strong>Next</strong> or go to the <strong>Actions</strong> tab. This is where you configure connector actions.</p><p>This section describes how to set up parameters and options for each action.</p><h3 id=\"action---add-user-to-audience\">Action - Add User to Audience</h3><h4 id=\"parameters\">Parameters</h4><table><thead><tr><th><strong>Parameter</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>Audience</td><td><ul><li>Select an audience to add user to or provide an Audience ID directly.</li></ul></td></tr><tr><td>Email</td><td><ul><li>Send email value as-is without applying built-in hashing.</li><li>Select this option if value requires no hashing or is already hashed.</li></ul></td></tr><tr><td>Email (apply MD5 hash)</td><td><ul><li>Hash email value with MD5 before sending.</li></ul></td></tr><tr><td>Email (apply MD5 SHA256 hash)</td><td><ul><li>Hash email value with MD5 and then SHA256 before sending.</li></ul></td></tr><tr><td>Mobile ID</td><td><ul><li>IDFA mobile ID for Apple.</li><li>ADID mobile ID for Android.</li></ul></td></tr><tr><td>Identity Link</td><td><ul><li>Identity Link</li></ul></td></tr><tr><td>Gum ID</td><td><ul><li>Identifier obtained from cookie matching.</li><li>A corresponding Gum Caller ID is automatically added to the request.</li></ul></td></tr></tbody></table><h3 id=\"action---remove-user-from-audience\">Action - Remove User from Audience</h3><h4 id=\"parameters-1\">Parameters</h4><table><thead><tr><th><strong>Parameter</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>Audience</td><td><ul><li>Select an audience to remove a user from or provide an Audience ID directly.</li></ul></td></tr><tr><td>Email</td><td><ul><li>Send email value as-is without applying built-in hashing.</li><li>Select this option if value requires no hashing or is already hashed.</li></ul></td></tr><tr><td>Email (apply MD5 hash)</td><td><ul><li>Hash email value with MD5 before sending.</li></ul></td></tr><tr><td>Email (apply MD5 SHA256 hash)</td><td><ul><li>Hash email value with MD5 and then SHA256 before sending.</li></ul></td></tr><tr><td>Mobile ID</td><td><ul><li>IDFA mobile ID for Apple.</li><li>ADID mobile ID for Android.</li></ul></td></tr><tr><td>Identity Link</td><td><ul><li>Identity Link</li></ul></td></tr><tr><td>Gum ID</td><td><ul><li>Identifier obtained from cookie matching.</li><li>A corresponding Gum Caller ID is automatically added to the request.</li></ul></td></tr></tbody></table>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/server-side-connectors/the-trade-desk-connector/",
            "title": "The Trade Desk Connector Setup Guide",
            "body":"<h2 id=\"connector-actions\">Connector Actions</h2><table><thead><tr><th><strong>Action Name</strong></th><th><strong>AudienceStream</strong></th><th><strong>EventStream</strong></th></tr></thead><tbody><tr><td>Send First Party Advertiser Data</td><td>✓</td><td>✓</td></tr></tbody></table><h2 id=\"configure-settings\">Configure Settings</h2><p>Go to the Connector Marketplace and add a new connector. Read the <a href=\"/server-side/connectors/about/\">Connector Overview</a> article for general instructions on how to add a connector.</p><p>After adding the connector, configure the following settings:</p><ul><li><strong>Agency Secret Key</strong></li></ul><h2 id=\"action-settings---parameters-and-options\">Action Settings - Parameters and Options</h2><p>Click <strong>Next</strong> or go to the <strong>Actions</strong> tab. This is where you configure connector actions.</p><p>This section describes how to set up parameters and options for each action.</p><h3 id=\"action---send-first-party-advertiser-data\">Action - Send First Party Advertiser Data</h3><h4 id=\"parameters\">Parameters</h4><table><thead><tr><th><strong>Parameter</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>Data Center Region</td><td><ul><li>Required</li><li>Select data center geographically closest to where user data comes from.</li></ul></td></tr><tr><td>Advertiser ID</td><td><ul><li>Required</li><li>Advertiser ID</li></ul></td></tr><tr><td>Trade Desk ID (TDID)</td><td><ul><li>Trade Desk ID (<code>TDID</code>)</li></ul></td></tr><tr><td>Device Advertising ID (DAID)</td><td><ul><li>Device Advertising ID (<code>DAID</code>)</li></ul></td></tr><tr><td>Unified ID (UID2 already hashed)</td><td><ul><li>Unified ID ( <code>UID2</code> )</li><li>If already hashed, use <strong>Already SHA256 Hashed</strong> option. Provide a value which has been whitespace trimmed, lowercased and hashed using SHA256 hash. </li><li><a href=\"/server-side/functions/event-visitor-functions/uid2-token/\">Find out more about Generating a Unified ID.</a></li></ul></td></tr><tr><td>Identity Link (IDL)</td><td><ul><li>Identity Link ( <code>IDL</code> )</li></ul></td></tr><tr><td>Override TTL in Minutes</td><td><ul><li>Override time to live (<code>ttl</code>), in minutes</li></ul></td></tr><tr><td>Override Timestamp</td><td><ul><li>Override timestamp</li></ul></td></tr><tr><td>Data Name</td><td><ul><li>Required</li><li>Data Name</li></ul></td></tr></tbody></table>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/client-side-tags/the-trade-desk-cookie-matching-service-tag/",
            "title": "The Trade Desk Cookie Matching Service Tag Setup Guide",
            "body":"<h2 id=\"how-it-works\">How it works</h2><p>This solution requires Tealium iQ and Tealium AudienceStream. The Trade Desk Cookie Matching Service tag sets a new variable named <code>ttd_uuid</code>. It is stored as a session cookie as well as a standard data layer variable and triggers only once per session, by default.</p><p>The Trade Desk Cookie Matching Service tag communicates with the Trade Desk servers to request the current user&rsquo;s identifier. When this value is returned to the tag, it is passed to AudienceStream so that it can be used to populate a visitor attribute containing the synced user ID. This attribute can then be used in The Trade Desk connector actions as a mapping to &ldquo;Trade Desk ID (TDID)&rdquo;.</p><h2 id=\"data-layer-variables\">Data Layer Variables</h2><p>Before you add the tag, create the following data layer variables:</p><ul><li><code>ttd_uuid</code> - UDO Variable</li><li><code>utag_main_ttd_uuid</code> - First Party Cookie</li></ul><p>These variables are populated automatically by the cookie matching tag.</p><figure><img src=\"https://community.tealiumiq.com/t5/image/serverpage/image-id/6657i2253651D2685132D/image-size/large?v=v2&amp;px=999\"         alt=\"The Trade Desk Cookie\"         title=\"The Trade Desk Cookie\"/></figure><h2 id=\"tag-configuration\">Tag Configuration</h2><p>Go to the Tag Marketplace and add the Trade Desk Cookie Matching Service tag (<a href=\"/iq-tag-management/tags/manage-tags/\">see how to add a tag</a>).</p><p>After adding the tag, configure the below settings:</p><ul><li><strong>Tealium Account</strong> - leave blank unless sending The Trade Desk user ID to a different account.</li><li><strong>Tealium Profile</strong> - leave blank unless sending The Trade Desk user ID to a different profile.</li></ul><h3 id=\"load-rules\">Load Rules</h3><p><a href=\"/iq-tag-management/load-rules/about/\">Load rules</a> determine when and where to load an instance of this tag on your site.</p><p>This tag only needs to run if the cookie match has not already occurred. You can determine this by using the cookie variable <code>utag_main_ttd_uuid</code> in a load rule condition such as:</p><p><code>utag_main_ttd_uuid</code> is not defined</p><p>The tag also has built-in logic to only fire when the cookie is not defined, but using a load rule will ensure that the tag is not loaded on a page when it has already run for the current session.</p><h2 id=\"data-mappings\">Data Mappings</h2><p>Mapping is the process of sending data from a <a href=\"/iq-tag-management/data-mappings/manage/\">data layer variable</a> to the corresponding destination variable of the vendor Tag. For instructions on how to map a variable to a tag destination, see <a href=\"/iq-tag-management/data-mappings/manage/\">data mappings</a>.</p><table><thead><tr><th><strong>Destination Name</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td><code>tealium_account</code></td><td>The Tealium account to sync the user ID to (defaults to current account).</td></tr><tr><td><code>tealium_profile</code></td><td>The Tealium profile to sync the user ID to (defaults to current profile).</td></tr><tr><td><code>gdpr</code></td><td>Pass a value that indicates if the current user resides in the European Union (EU), and therefore subject to GDPR.<br> Set to <code>0</code> (default) if the user is not subject to GDPR.<br> Set to <code>1</code> if the user is subject to GDPR.</td></tr><tr><td><code>gdpr_consent_string</code></td><td>Base64 URL-encoded GDPR consent string.</td></tr><tr><td><code>order_id</code></td><td>Overrides the <code>_corder</code> e-commerce extension value.</td></tr></tbody></table><h2 id=\"audiencestream-setup\">AudienceStream Setup</h2><p>Once you save and publish your changes to Prod, the new variables will be available in AudienceStream. The <code>ttd_uuid</code> variable will appear as an event attribute, but you must create it as a visitor attribute so that it can be used in The Trade Desk connector action.</p><p>To add a visitor attribute to store the <code>ttd_uuid</code> value:</p><ol><li>Navigate to <strong>AudienceStream &gt; Attributes</strong>.</li><li>Click <strong>Add Attribute</strong> and select <strong>Visitor</strong> scope, then <strong>String</strong> data type.</li><li>Enter the name <code>Trade Desk User ID</code>.</li><li>Click <strong>Add Enrichment</strong> and select <strong>Set String</strong>.</li><li>From <strong>Set String to</strong> drop-down menu select <code>ttd_uuid</code>.</li><li>Click <strong>Finish</strong>.</li></ol><p>You can now create audiences of visitors that have their Trade Desk User ID populated. Those audiences will be used in connector actions with The Trade Desk. You will map this attribute to the &ldquo;Trade Desk ID (TDID)&rdquo; parameter in The Trade Desk connector actions.</p>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/client-side-tags/the-trade-desk-universal-pixel-tag/",
            "title": "The Trade Desk Universal Pixel Tag Setup Guide",
            "body":"<h2 id=\"tag-configuration\">Tag Configuration</h2><p>First, go to Tealium&rsquo;s Tag Marketplace and add the The Trade Desk Universal Pixel Tag to your profile (<a href=\"/iq-tag-management/tags/tag-templates/manage/\">how to add a Tag?</a>).</p><p>After adding the Tag, configure the below settings:</p><ol><li><strong>Advertiser ID</strong>: Enter your Advertiser ID supplied by Trade Desk. This is present in your Universal Pixel Tag.</li><li><strong>Pixel ID</strong>: Enter your Pixel ID supplied by Trade Desk. This is present in your Universal Pixel Tag.</li><li><strong>Pixel Tag ID</strong>: Enter the alphanumeric string of the <code>&lt;div&gt;</code> ID to be appended to the page. Don&rsquo;t include the <code>ttdUniversalPixelTag</code> string.<br>For example, If your ID is <code>ttdUniversalPixelTag18r0156a77010366s9bn92m452l80672</code>, then the Pixel Tag ID becomes <code>18r0156a77010366s9bn92m452l80672</code>.</li></ol><p class=\"tip\"><i class=\"fas fa-star\"></i>Use data mappings if you prefer to configure the tag settings dynamically.</p><h2 id=\"load-rules\">Load Rules</h2><p><a href=\"/iq-tag-management/load-rules/about/\">Load Rules</a> determine when and where to load an instance of this tag on your site.</p><p>Recommended Load Rule: <strong>Load on all pages</strong>.</p><h2 id=\"data-mappings\">Data Mappings</h2><p>Mapping is the process of sending data from a <a href=\"/iq-tag-management/data-layer/data-layer-variables/\">data layer variable</a> to the corresponding destination variable of the vendor tag. For instructions on how to map a Variable to a Tag destination, see <a href=\"/iq-tag-management/data-mappings/manage/\">data mappings</a>.</p><p>The destination variables for the The Trade Desk Universal Pixel Tag are built into its Data Mapping tab.</p><p>Available categories are:</p><h3 id=\"standard\">Standard</h3><table><thead><tr><th><strong>Destination Name</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>Advertiser ID</td><td>Unique advertiser identifier supplied by Trade Desk</td></tr><tr><td>Pixel ID</td><td>Unique pixel identifier supplied by Trade Desk</td></tr><tr><td>Pixel Tag ID</td><td>The ID value of the <code>div</code> to be appended to the page.</td></tr></tbody></table><h3 id=\"consent-gdpr\">Consent (GDPR)</h3><p>The consent parameters follow the IAB specification for URL-based services.</p><p>Reference: <a href=\"https://github.com/InteractiveAdvertisingBureau/GDPR-Transparency-and-Consent-Framework/blob/master/URL-based%20Consent%20Passing_%20Framework%20Guidance.md\">IAB GDPR Consent Passing for URL-Based Services</a></p><p class=\"tip\"><i class=\"fas fa-star\"></i>The creator of the URL should ensure these parameters are added only once and are passed to services that are expecting them and can properly handle them.</p><table><thead><tr><th>Destination Name</th><th><strong>Value</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td><code>gdpr</code></td><td><code>0</code> / <code>1</code></td><td>Determines if GDPR should apply to the user. Value of <code>1</code> means <code>yes</code>, default value of <code>0</code> means <code>no</code>.</td></tr><tr><td><code>gdpr_consent</code></td><td>URL-safe base64-encoded GDPR consent string</td><td>This parameter should only be passed if <code>gdpr</code> has a value of <code>1</code> and <code>gdpr_consent</code>is not an empty string.</td></tr><tr><td><code>gdpr_pd</code></td><td><code>0</code> / <code>1</code></td><td>This parameter is optional and determines if personal data is included. Value of <code>1</code> means <code>yes</code>, default value of <code>0</code> means <code>no</code>.</td></tr></tbody></table><p class=\"note\"><i class=\"fas fa-info-circle\"></i>Other personal data, such as IP addresses or tracking pixel cookies, may be passed as part of the request. The <code>gdpr</code> and <code>gdpr_consent</code> parameters should be used by the callee to determine whether an identifier cookie or other personal data can be set and/or used.</p>"
        }  

    , 
        {
            "weight": "0",
            "url": "https://docs.tealium.com/industries/tealium-identity-partners/acxiom-identity-resolution/",
            "title": "Using Tealium Functions for Acxiom Identity Resolution",
            "body":"<p>We recommend using a visitor function to capture the data from Acxiom. For more information on visitor functions, see <a href=\"/server-side/functions/event-visitor-functions/about/\">Event and Visitor Functions</a>.</p><p>The visitor function does the following:</p><ul><li>Requests the additional data from Acxiom.</li><li>Sends an event containing the additional data and <code>tealium_visitor_id</code> to Tealium Collect.</li></ul><p>The EventStream attributes and visitor attributes are enriched by the event sent from the function. The following figure illustrates the process of retrieving data from the identity provider and saving it in the visitor profile:</p><h2 id=\"prerequisites\">Prerequisites</h2><ul><li>EventSteam and Functions.</li><li>The Tealium Collect API as a Data Source.</li><li>Create visitor attributes to store the additional information.</li><li>Create an event spec titled <code>acxiom_function_event</code>. This will contain the desired attributes, which will be used to enrich the visitor attributes.</li><li>Add an enrichment to enrich the visitor attributes with the value of the event attributes.</li></ul><p>The function works best when the Acxiom Real Tag tag is installed. This identifier will increase the confidence rating for the visitor.</p><h2 id=\"creating-a-function-to-process-the-event\">Creating a function to process the event</h2><p>To create the function:</p><ol><li>Navigate to the <strong>Functions</strong> interface.</li><li>Click <strong>Add Function</strong>.</li><li>Enter a name for the function.</li><li>Enter appropriate notes to describe the function for later reference.</li><li>Select the <strong>Processed Event</strong> trigger.</li><li>Select the desired event feed for the trigger.</li><li>Click <strong>Continue</strong>.</li><li>Enter the sample code below into the <strong>Code</strong> box.</li><li>Customize the code as necessary for your configuration.</li><li>Save the function.</li></ol><p>You can test the function with the <strong>Test</strong> feature and a tool such as Postman API Workbench.</p><p>For more information on creating a function, see <a href=\"/server-side/functions/manage-functions/create-function/\">Managing Functions</a>.</p><h2 id=\"example-function-code\">Example function code</h2><p>The following test example function will attempt to match a visitor profile based off of the attributes you send to it:</p><table><thead><tr><th>Attribute</th><th>Description</th></tr></thead><tbody><tr><td><code>acxiom_function_event</code></td><td>Event Spec name</td></tr><tr><td><code>realId</code></td><td>Acxiom rTag</td></tr><tr><td><code>address</code></td><td>User’s address</td></tr><tr><td><code>phone</code></td><td>User’s phone number</td></tr><tr><td><code>email</code></td><td>User’s email address</td></tr><tr><td><code>fullName</code></td><td>User’s full name</td></tr></tbody></table><p>The function will return any additional user data for profile enrichment.</p><p class=\"note\"><i class=\"fas fa-info-circle\"></i>This code is currently in beta.</p><div class=\"pv2\"><div class=\"expand ba pa2 b--black-20 pv3\">    <div class=\"expand-label\" style=\"cursor: pointer;\" onclick=\"$h = $(this);$h.next('div').slideToggle(100,function () {$h.children('i').attr('class',function () {return $h.next('div').is(':visible') ? 'fas fa-chevron-down' : 'fas fa-chevron-right';});});\">        <i style=\"font-size:x-small;\" class=\"fas fa-chevron-right\"></i>        <span style=\"font-weight:bold;\">            	    	Code    	    	</span>    </div>    <div class=\"expand-content pa2\" style=\"display: none;\">        <div class=\"highlight\"><pre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"><code class=\"language-js\" data-lang=\"js\"><span style=\"display:flex;\"><span><span style=\"color:#75715e\">// In an event scoped function, the following modules are available for use: event, auth</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span><span style=\"color:#66d9ef\">import</span> { <span style=\"color:#a6e22e\">event</span>, <span style=\"color:#a6e22e\">store</span>, <span style=\"color:#a6e22e\">tealium</span> } <span style=\"color:#a6e22e\">from</span> <span style=\"color:#e6db74\">&#34;tealium&#34;</span>;</span></span><span style=\"display:flex;\"><span>(<span style=\"color:#66d9ef\">async</span> () =&gt; {</span></span><span style=\"display:flex;\"><span>    </span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// These endpoints will be specific to each customers setup with Acxiom as they will refer to the customers provisioned private environment.</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">access_url</span><span style=\"color:#f92672\">=</span><span style=\"color:#e6db74\">&#34;https://mydomain.com/metrics/access_token&#34;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">query_url</span><span style=\"color:#f92672\">=</span><span style=\"color:#e6db74\">&#34;https://mydomain.com/metrics&#34;</span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">query_name</span><span style=\"color:#f92672\">=</span><span style=\"color:#e6db74\">&#34;demo_dsapi_match&#34;</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Uncomment this to find out exactly what is available to use in your event object</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#39;Data available:\n&#39;</span>, <span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">event</span>, <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">2</span>));</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">data</span> <span style=\"color:#f92672\">=</span> {};</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">tealium_account</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">event</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">udo</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">tealium_account</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">tealium_profile</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">event</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">udo</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">tealium_profile</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">visitor_id</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">event</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">udo</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">visitor_id</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">trace_id</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">event</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">firstparty_tealium_cookies</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">trace_id</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">acxiom_real_id</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">event</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">udo</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">acxiom_real_id</span> <span style=\"color:#f92672\">||</span> <span style=\"color:#e6db74\">&#34;&#34;</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">customer_email</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">event</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">udo</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">customer_email</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">customer_first_name</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">event</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">udo</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">customer_first_name</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">customer_last_name</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">event</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">udo</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">customer_last_name</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">customer_full_name</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">customer_first_name</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\"> </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">customer_last_name</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Check if acxiom_real_id is available</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#75715e\">// if (typeof data.acxiom_real_id === &#34;undefined&#34;) {</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#75715e\">//     console.error(&#34;acxiom_entity_id is unavailable.&#34;);</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#75715e\">//     return;</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#75715e\">// }</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Pull in refresh token from global variables</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">refresh_token</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">store</span>.<span style=\"color:#a6e22e\">get</span>(<span style=\"color:#e6db74\">&#34;acxiom_refresh_token&#34;</span>)</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#34;refresh_token: &#34;</span>, <span style=\"color:#a6e22e\">refresh_token</span>)</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Generate access token</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">access_token_request</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">await</span> <span style=\"color:#a6e22e\">fetch</span>(<span style=\"color:#a6e22e\">access_url</span>, {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">method</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;POST&#34;</span>,</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">headers</span><span style=\"color:#f92672\">:</span> {</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#e6db74\">&#34;Content-Type&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;application/json&#34;</span>,</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#e6db74\">&#34;Authorization&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">`Bearer </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">refresh_token</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span>        },</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">body</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">`{&#34;grant_type&#34;:&#34;refresh_token&#34;,&#34;refresh_token&#34;:&#34;</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">refresh_token</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">&#34;}`</span></span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    .<span style=\"color:#66d9ef\">catch</span>((<span style=\"color:#a6e22e\">error</span>) =&gt; {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">error</span>(<span style=\"color:#e6db74\">&#39;Error:&#39;</span>, <span style=\"color:#a6e22e\">error</span>);</span></span><span style=\"display:flex;\"><span>    });</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">access_token_response</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">await</span> <span style=\"color:#a6e22e\">access_token_request</span>.<span style=\"color:#a6e22e\">json</span>();</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// console.log(&#34;access_token_response:&#34;, JSON.stringify(access_token_response));</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">access_token</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">access_token_response</span>.<span style=\"color:#a6e22e\">jwt_token</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// console.log(&#34;access_token: &#34;, access_token)</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Fetch query_execution_id from Acxiom PAIL with acxiom_real_id</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">response</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">await</span> <span style=\"color:#a6e22e\">fetch</span>(<span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">query_url</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">/named_queries/</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">query_name</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">/execute`</span>, {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">method</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;POST&#34;</span>,</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">redirect</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;follow&#34;</span>,</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">headers</span><span style=\"color:#f92672\">:</span> {</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#e6db74\">&#34;Content-Type&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;application/json&#34;</span>,</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#e6db74\">&#34;Authorization&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">`Bearer </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">access_token</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span>        },</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">body</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">`{</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">            &#34;realID&#34;: &#34;</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">acxiom_real_id</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">&#34;, </span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">            &#34;address&#34;: &#34;</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">customer_address</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">&#34;, </span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">            &#34;phone&#34;: &#34;</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">customer_phone</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">&#34;, </span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">            &#34;email&#34;: &#34;</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">customer_email</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">&#34;, </span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">            &#34;fullName&#34;: &#34;</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">customer_full_name</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">&#34;</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#e6db74\">        }`</span></span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    .<span style=\"color:#a6e22e\">then</span>(<span style=\"color:#a6e22e\">res</span> =&gt; {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#34;Res: &#34;</span>, <span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">res</span>))</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">res</span></span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// .then(response =&gt; console.log(&#34;Response: &#34;, JSON.stringify(response)))</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    .<span style=\"color:#66d9ef\">catch</span>(<span style=\"color:#a6e22e\">error</span> =&gt; <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">error</span>(<span style=\"color:#e6db74\">&#39;Error: &#39;</span>, <span style=\"color:#a6e22e\">error</span>.<span style=\"color:#a6e22e\">message</span>));</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">body</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">await</span> <span style=\"color:#a6e22e\">response</span>.<span style=\"color:#a6e22e\">json</span>();</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">query_execution_id</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">body</span>.<span style=\"color:#a6e22e\">query_execution_id</span></span></span><span style=\"display:flex;\"><span>    </span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// console.log(&#34;Status: &#34; + response.status);</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#34;Body: &#34;</span> <span style=\"color:#f92672\">+</span> <span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">body</span>, <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">2</span>));</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Check if Acxiom response data is available</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">if</span> (<span style=\"color:#f92672\">!</span><span style=\"color:#a6e22e\">response</span>.<span style=\"color:#a6e22e\">ok</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">error</span>(<span style=\"color:#e6db74\">&#34;Acxiom response data is unavailable.&#34;</span>);</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span>;</span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Fetch data from Acxiom PAIL with query_execution_id</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">payload</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">await</span> <span style=\"color:#a6e22e\">fetch</span>(<span style=\"color:#e6db74\">`</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">query_url</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">/query_executions/</span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">query_execution_id</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">`</span>, {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">method</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;GET&#34;</span>,</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">headers</span><span style=\"color:#f92672\">:</span> {</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#e6db74\">&#34;Content-Type&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">&#34;application/json&#34;</span>,</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#e6db74\">&#34;Authorization&#34;</span><span style=\"color:#f92672\">:</span> <span style=\"color:#e6db74\">`Bearer </span><span style=\"color:#e6db74\">${</span><span style=\"color:#a6e22e\">access_token</span><span style=\"color:#e6db74\">}</span><span style=\"color:#e6db74\">`</span></span></span><span style=\"display:flex;\"><span>        }</span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    .<span style=\"color:#a6e22e\">then</span>(<span style=\"color:#a6e22e\">res</span> =&gt; {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#34;Res: &#34;</span>, <span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">res</span>))</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">res</span></span></span><span style=\"display:flex;\"><span>    })</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// .then(response =&gt; response.json())</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#75715e\">// .then(response =&gt; console.log(&#34;Response: &#34;, JSON.stringify(response)))</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    .<span style=\"color:#66d9ef\">catch</span>(<span style=\"color:#a6e22e\">err</span> =&gt; <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">error</span>(<span style=\"color:#a6e22e\">err</span>));</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">const</span> <span style=\"color:#a6e22e\">user_data</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#66d9ef\">await</span> <span style=\"color:#a6e22e\">payload</span>.<span style=\"color:#a6e22e\">json</span>();</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#34;user_data: &#34;</span>, <span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">user_data</span>))</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">let</span> <span style=\"color:#a6e22e\">data_object</span> <span style=\"color:#f92672\">=</span> {};</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">for</span> (<span style=\"color:#66d9ef\">let</span> <span style=\"color:#a6e22e\">i</span><span style=\"color:#f92672\">=</span><span style=\"color:#ae81ff\">0</span>; <span style=\"color:#a6e22e\">i</span> <span style=\"color:#f92672\">&lt;</span> <span style=\"color:#a6e22e\">user_data</span>.<span style=\"color:#a6e22e\">column_info</span>.<span style=\"color:#a6e22e\">length</span>; <span style=\"color:#a6e22e\">i</span><span style=\"color:#f92672\">++</span>) {</span></span><span style=\"display:flex;\"><span>        <span style=\"color:#a6e22e\">data_object</span>[<span style=\"color:#a6e22e\">user_data</span>.<span style=\"color:#a6e22e\">column_info</span>[<span style=\"color:#a6e22e\">i</span>].<span style=\"color:#a6e22e\">name</span>] <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">user_data</span>.<span style=\"color:#a6e22e\">data</span>[<span style=\"color:#ae81ff\">0</span>][<span style=\"color:#a6e22e\">i</span>]</span></span><span style=\"display:flex;\"><span>    }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// data_object = JSON.stringify(data_object)</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#66d9ef\">let</span> <span style=\"color:#a6e22e\">newEvent</span> <span style=\"color:#f92672\">=</span> {};</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">newEvent</span> <span style=\"color:#f92672\">=</span> { ...<span style=\"color:#a6e22e\">data_object</span> }</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">newEvent</span>.<span style=\"color:#a6e22e\">tealium_event</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#e6db74\">&#34;acxiom_function_event&#34;</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">newEvent</span>.<span style=\"color:#a6e22e\">visitor_id</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">visitor_id</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">newEvent</span>.<span style=\"color:#a6e22e\">tealium_trace_id</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">data</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">tealium_trace_id</span>;</span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">newEvent</span>.<span style=\"color:#a6e22e\">customer_email</span> <span style=\"color:#f92672\">=</span> <span style=\"color:#a6e22e\">data_object</span><span style=\"color:#f92672\">?</span>.<span style=\"color:#a6e22e\">email</span>;</span></span><span style=\"display:flex;\"><span>    </span></span><span style=\"display:flex;\"><span>    <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#34;newEvent: &#34;</span> <span style=\"color:#f92672\">+</span> <span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">newEvent</span>, <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">2</span>));</span></span><span style=\"display:flex;\"><span></span></span><span style=\"display:flex;\"><span>    <span style=\"color:#75715e\">// Send data received from Acxiom to Tealium</span></span></span><span style=\"display:flex;\"><span><span style=\"color:#75715e\"></span>    <span style=\"color:#a6e22e\">tealium</span></span></span><span style=\"display:flex;\"><span>        .<span style=\"color:#a6e22e\">sendCollectEvent</span>(<span style=\"color:#a6e22e\">newEvent</span>, <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">tealium_account</span>, <span style=\"color:#a6e22e\">data</span>.<span style=\"color:#a6e22e\">tealium_profile</span>)</span></span><span style=\"display:flex;\"><span>        .<span style=\"color:#a6e22e\">then</span>(<span style=\"color:#a6e22e\">response</span> =&gt; {</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#39;Status code: &#39;</span>, <span style=\"color:#a6e22e\">response</span>.<span style=\"color:#a6e22e\">status</span>);</span></span><span style=\"display:flex;\"><span>            <span style=\"color:#66d9ef\">return</span> <span style=\"color:#a6e22e\">response</span>;</span></span><span style=\"display:flex;\"><span>        })</span></span><span style=\"display:flex;\"><span>        .<span style=\"color:#a6e22e\">then</span>(<span style=\"color:#a6e22e\">data</span> =&gt; <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">log</span>(<span style=\"color:#e6db74\">&#39;Result: &#39;</span>, <span style=\"color:#a6e22e\">JSON</span>.<span style=\"color:#a6e22e\">stringify</span>(<span style=\"color:#a6e22e\">data</span>, <span style=\"color:#66d9ef\">null</span>, <span style=\"color:#ae81ff\">2</span>)))</span></span><span style=\"display:flex;\"><span>        .<span style=\"color:#66d9ef\">catch</span>(<span style=\"color:#a6e22e\">error</span> =&gt; <span style=\"color:#a6e22e\">console</span>.<span style=\"color:#a6e22e\">error</span>(<span style=\"color:#e6db74\">&#39;Error: &#39;</span>, <span style=\"color:#a6e22e\">error</span>.<span style=\"color:#a6e22e\">message</span>));</span></span><span style=\"display:flex;\"><span>})();</span></span></code></pre></div>    </div></div></div>"
        }  

    ]
}
